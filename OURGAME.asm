 
 
;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º			      Freeware version				    º
; º	Copyright (c) 2000 by DataRescue sa/nv,	http://www.datarescue.com   º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	C:\Users\Robson\robhg\robson\atacc\OURGAME.EXE
; Format      :	MS-DOS executable (EXE)
; Base Address:	1000h Range: 10000h-23A60h Loaded length: 13A60h
; Entry	Point :	1000:0
; OS type	  :  MS	DOS
; Application type:  Executable	16bit



; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		assume es:nothing, ss:seg071, ds:nothing, fs:nothing, gs:nothing
; [COLLAPSED FUNCTION start, 0000012A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __exit, 00000039 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cx, 0Eh
		nop	
		mov	dx, 48h	; 'H'
		jmp	loc_0_1F4

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_16D	proc near		; CODE XREF: start+2Bp
		push	ds
		mov	ax, 3500h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_BFD_74, bx
		mov	word ptr dword_BFD_74+2, es
		mov	ax, 3504h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_BFD_78, bx
		mov	word ptr dword_BFD_78+2, es
		mov	ax, 3505h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_BFD_7C, bx
		mov	word ptr dword_BFD_7C+2, es
		mov	ax, 3506h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_BFD_80, bx
		mov	word ptr dword_BFD_80+2, es
		mov	ax, 2500h
		mov	dx, cs
		mov	ds, dx
		assume ds:seg000
		mov	dx, 163h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:dseg
		retn	
sub_0_16D	endp

; [COLLAPSED FUNCTION __restorezero, 0000002D BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	word_BFD_96, 0
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		retf	

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_1E5	proc near		; CODE XREF: __exit+2Dp _abort+Cp
		mov	ah, 40h	; '@'
		mov	bx, 2
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		retn	
sub_0_1E5	endp

; [COLLAPSED FUNCTION _abort, 00000018 BYTES. PRESS KEYPAD "+" TO EXPAND]
DGROUP@		dw 0			; DATA XREF: start+3w start+E4r ...
; [COLLAPSED FUNCTION sub_0_207, 0000007B BYTES. PRESS KEYPAD "+" TO EXPAND]
		db 30h dup(0), 50h, 32h, 0C0h, 0E6h, 0F0h, 0B0h, 20h, 0E6h
		db 0A0h, 0E6h, 20h, 58h, 0CDh, 2, 0CFh
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_2C1:				; CODE XREF: start+F4j
					; DATA XREF: dseg:146Ao
		push	di
		push	es
		call	FPE1st
		mov	ax, 3534h
		mov	cx, 0Bh
		mov	di, 282h

loc_0_2D1:				; CODE XREF: seg000:02DEj
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	cs:[di], bx
		mov	cs:[di+2], es
		add	di, 4
		inc	ax
		loop	loc_0_2D1
		mov	ax, 3575h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	cs:[di], bx
		mov	cs:[di+2], es
		pop	es
		pop	di
		cmp	word_BFD_96, 0FFFFh
		jnz	near ptr __EMURESET
		call	sub_0_207
		mov	word_BFD_96, ax
; [COLLAPSED FUNCTION __EMURESET, 00000086 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_381:				; CODE XREF: start+F4j	__exit+Bj
					; DATA XREF: ...
		call	FPElast
		push	ds
		mov	ax, 2534h
		mov	bx, 282h
		mov	cx, 0Bh

loc_0_390:				; CODE XREF: seg000:0399j
		lds	dx, cs:[bx]
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		add	bx, 4
		inc	ax
		loop	loc_0_390
		mov	ax, 2575h
		lds	dx, cs:[bx]
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

__FPExcep:
		call	sub_0_550
		sti	
		push	cx
		push	es
		push	bx
		mov	bx, 810h
		mov	cx, [si+0Ah]
		mov	[bx+6],	cx
		mov	cx, [si+0Ch]
		mov	[bx+8],	cx
		mov	cx, [si+6]
		mov	[bx+0Ah], cx
		mov	cx, [si+8]
		mov	[bx+0Ch], cx
		and	word ptr [bx+0Ch], 0F000h
		and	ch, 7
		or	ch, 0D8h
		mov	[bx+4],	cx
		mov	word ptr [bx+2], 1
		mov	cx, [si+8]
		and	ch, 7
		mov	bx, cx
		and	bl, 0C0h
		cmp	bl, 0C0h ; 'À'
		jz	loc_0_3ED
		and	cl, 38h

loc_0_3ED:				; CODE XREF: seg000:03E8j
		cmp	word_BFD_96, 0
		jz	loc_0_411
		test	al, 5
		jz	loc_0_3FD
		call	sub_0_56A
		jmp	short loc_0_411
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_3FD:				; CODE XREF: seg000:03F6j
		test	al, 2
		jz	loc_0_406
		call	sub_0_443
		jmp	short loc_0_437
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_406:				; CODE XREF: seg000:03FFj
		test	al, 18h
		jz	loc_0_411
		push	ax
		call	sub_0_592
		pop	ax
		jmp	short $+2

loc_0_411:				; CODE XREF: seg000:03F2j seg000:03FBj ...
		and	ax, 3Dh
		jz	loc_0_437
		push	dx
		xor	dx, dx
		mov	bx, ax

loc_0_41B:				; CODE XREF: seg000:041Ej
		inc	dx
		shr	bx, 1
		jnb	loc_0_41B
		mov	word_BFD_810, dx
		mov	word_BFD_812, 1
		mov	si, 810h
		push	si
		call	__fperr
		add	sp, 2
		pop	dx

loc_0_437:				; CODE XREF: seg000:0404j seg000:0414j
		pop	bx
		pop	es
		pop	cx
		pop	si
		pop	ax
		pop	ds
		push	cs
		call	near ptr sub_0_442
		nop	

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_442	proc far		; CODE XREF: seg000:043Ep
		iret	
sub_0_442	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_443	proc near		; CODE XREF: seg000:0401p
		cmp	word_BFD_96, 3
		jge	locret_0_4BC
		call	sub_0_539
		mov	ax, cx
		and	al, 0F8h
		cmp	cx, 100h
		jz	locret_0_4BC
		cmp	cx, 500h
		jz	locret_0_4BC
		cmp	cx, 328h
		jz	locret_0_4BC
		cmp	ax, 1C0h
		jz	locret_0_4BC
		cmp	ax, 1E4h
		jz	locret_0_4BC
		cmp	ax, 10h
		jz	locret_0_4BC
		cmp	ax, 18h
		jz	locret_0_4BC
		cmp	ax, 410h
		jz	locret_0_4BC
		cmp	ax, 418h
		jz	locret_0_4BC
		cmp	ax, 0D0h ; 'Ğ'
		jz	locret_0_4BC
		cmp	ax, 0D8h ; 'Ø'
		jz	locret_0_4BC
		cmp	ax, 6D9h
		jz	locret_0_4BC
		cmp	ax, 610h
		jz	locret_0_4BC
		cmp	ax, 618h
		jz	locret_0_4BC
		cmp	ax, 210h
		jz	locret_0_4BC
		cmp	ax, 218h
		jz	locret_0_4BC
		les	bx, [si+0Ah]
		cmp	ax, 30h	; '0'
		jnz	loc_0_4BD
		call	sub_0_5A4
		fld	dword ptr es:[bx] ; (emulator call)
		call	sub_0_4DC
		fdivp	st(1), st	; (emulator call)
		call	sub_0_5B9

locret_0_4BC:				; CODE XREF: sub_0_443+5j
					; sub_0_443+12j ...
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_4BD:				; CODE XREF: sub_0_443+67j
		cmp	ax, 430h
		jnz	loc_0_4D5
		call	sub_0_5A4
		push	ax
		fld	qword ptr es:[bx] ; (emulator call)
		call	sub_0_4DC
		fdivp	st(1), st	; (emulator call)
		pop	ax
		call	sub_0_5B9
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_4D5:				; CODE XREF: sub_0_443+7Dj
		call	sub_0_56A
		call	sub_0_539
		retn	
sub_0_443	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_4DC	proc near		; CODE XREF: sub_0_443+70p
					; sub_0_443+87p ...
		fxam			; (emulator call)
		fnstsw	word_BFD_804	; (emulator call)
		wait			; (emulator call)
		mov	ax, word_BFD_804
		and	ax, 4700h
		test	ax, 4000h
		jz	loc_0_4F7
		test	ax, 100h
		jz	loc_0_4F7
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_4F7:				; CODE XREF: sub_0_4DC+13j
					; sub_0_4DC+18j
		test	ax, 4500h
		jz	loc_0_509
		test	ax, 4000h
		jnz	loc_0_502
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_502:				; CODE XREF: sub_0_4DC+23j
		fstp	st		; (emulator call)
		fldz			; (emulator call)
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_509:				; CODE XREF: sub_0_4DC+1Ej
		fstp	tbyte_BFD_806	; (emulator call)
		push	dx
		fild	qword ptr tbyte_BFD_806	; (emulator call)
		mov	ax, word ptr tbyte_BFD_806+8
		mov	dx, ax
		and	dx, 8000h
		fstp	tbyte_BFD_806	; (emulator call)
		xor	ax, dx
		wait			; (emulator call)
		add	ax, word ptr tbyte_BFD_806+8
		sub	ax, 403Eh
		xor	ax, dx
		mov	word ptr tbyte_BFD_806+8, ax
		fld	tbyte_BFD_806	; (emulator call)
		pop	dx
		retn	
sub_0_4DC	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_539	proc near		; CODE XREF: sub_0_443+7p
					; sub_0_443+95p ...
		push	cx
		push	ax
		mov	cx, 8

loc_0_53E:				; CODE XREF: sub_0_539+12j
		call	sub_0_4DC
		cmp	word_BFD_96, 0
		jz	loc_0_54D
		fincstp			; (emulator call)
		loop	loc_0_53E

loc_0_54D:				; CODE XREF: sub_0_539+Dj
		pop	ax
		pop	cx
		retn	
sub_0_539	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_550	proc near		; CODE XREF: seg000:03A5p
		fnclex			; (emulator call)
		push	ax
		mov	al, [si]
		mov	ah, [si+2]
		or	al, 40h
		and	ah, al
		and	ah, 7Fh
		mov	[si+2],	ah
		fldenv	byte ptr [si]	; (emulator call)
		pop	ax
		wait			; (emulator call)
		retn	
sub_0_550	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_56A	proc near		; CODE XREF: seg000:03F8p
					; sub_0_443+92p ...
		cmp	bl, 0C0h ; 'À'
		jz	loc_0_572
		or	cl, 7

loc_0_572:				; CODE XREF: sub_0_56A+3j
		or	ch, 0D8h
		xchg	ch, cl
		mov	word_BFD_870, cx
		call	sub_0_539
		call	sub_0_5A4
		push	ds
		lds	bx, [si+0Ah]
		call	far ptr	loc_BFD_86F
		pop	ds
		call	sub_0_5B9
		call	sub_0_539
		retn	
sub_0_56A	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_592	proc near		; CODE XREF: seg000:040Bp
		mov	ax, cx
		and	ax, 0FFF8h
		and	ax, 1D0h
		cmp	ax, 110h
		jz	loc_0_5A0
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_5A0:				; CODE XREF: sub_0_592+Bj
		call	sub_0_56A
		retn	
sub_0_592	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_5A4	proc near		; CODE XREF: sub_0_443+69p
					; sub_0_443+7Fp ...
		fnstcw	word_BFD_804	; (emulator call)
		wait			; (emulator call)
		mov	ax, word_BFD_804
		or	word_BFD_804, 3Fh
		fldcw	word_BFD_804	; (emulator call)
		retn	
sub_0_5A4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_5B9	proc near		; CODE XREF: sub_0_443+76p
					; sub_0_443+8Ep ...
		push	cx
		fnstenv	byte ptr [si]	; (emulator call)
		fnclex			; (emulator call)
		mov	[si], ax
		mov	ah, [si+2]
		mov	cx, ax
		not	cl
		and	ch, cl
		and	ch, 3Fh
		sub	ah, ch
		mov	[si+2],	ah
		fldenv	byte ptr [si]	; (emulator call)
		mov	al, ch
		sub	ah, ah
		pop	cx
		retn	
sub_0_5B9	endp

; [COLLAPSED FUNCTION FPE1st, 0000001B BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION FPElast, 0000000D	BYTES. PRESS KEYPAD "+"	TO EXPAND]

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_float_to_int	proc far		; CODE XREF: _main+BBP	_main+261P ...

var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= qword	ptr -8

		push	bp
		mov	bp, sp
		sub	sp, 0Ch
		fnstcw	[bp+var_C]	; (emulator call)
		wait			; (emulator call)
		mov	ax, [bp+var_C]
		or	ax, 0C00h
		mov	[bp+var_A], ax
		fldcw	[bp+var_A]	; (emulator call)
		fistp	[bp+var_8]	; (emulator call)
		fldcw	[bp+var_C]	; (emulator call)
		mov	dx, word ptr [bp+var_8+2]
		mov	ax, word ptr [bp+var_8]
		mov	sp, bp
		pop	bp
		retf	
_float_to_int	endp

; [COLLAPSED FUNCTION sub_0_62F, 00000033 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_662, 0000001F BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_681, 00000021 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_6A2, 00000023 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_6C5, 0000001B BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_6E0, 0000002E BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_70E, 00000010 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_71E, 00000009 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_727, 00000047 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_76E, 00000039 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION ___move, 0000001B	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _grapherrormsg, 00000176 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_graphresult:
		push	si
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	si, word_BFD_C24
		mov	word_BFD_C24, 0
		mov	ax, si
		pop	ds
		pop	si
		retf	
; [COLLAPSED FUNCTION __GraphNotInstalled, 00000024 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_972, 00000032 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_9A4, 00000036 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_9DA, 0000003C BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _registerfarbgidriver, 000000BE BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _registerfarbgifont, 000000E6 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _setgraphbufsize,	00000030 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getmoderange, 0000009F BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _detectgraph, 00000032 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION sub_0_CBB, 0000008A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_D45, 00000071 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_DB6, 000000EE BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _graphdefaults, 000000F0 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_initgraph:				; CODE XREF: _main+71P
		push	bp
		mov	bp, sp
		sub	sp, 8
		push	si
		push	di
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	word ptr [bp-2], 0
		mov	ax, seg	dseg
		mov	es, ax
		mov	dx, es:seg_BFD_A12
		mov	ax, seg	dseg
		mov	es, ax
		mov	ax, es:word_BFD_A10
		add	ax, 20h	; ' '
		mov	cl, 4
		shr	ax, cl
		add	dx, ax
		xor	ax, ax
		mov	seg_BFD_BAF, dx
		mov	word_BFD_BAD, ax
		les	bx, [bp+6]
		assume es:nothing
		cmp	es:[bx], ax
		jnz	loc_0_102E
		jmp	short loc_0_101C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_FD6:				; CODE XREF: seg000:102Cj
		mov	ax, [bp-2]
		mov	dx, 1Ah
		mul	dx
		mov	bx, ax
		mov	ax, [bx+0C88h]
		or	ax, [bx+0C8Ah]
		jz	loc_0_1019
		mov	ax, [bp-2]
		mov	dx, 1Ah
		mul	dx
		mov	bx, ax
		call	dword ptr [bx+0C88h]
		mov	[bp-4],	ax
		or	ax, ax
		jl	loc_0_1019
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db  8Bh	; 
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_1000:				; CODE XREF: start+F4j
					; DATA XREF: dseg:1476o
		inc	si
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 0FEh, 0A3h, 2 dup(0Ch), 5, 80h, 0, 0C4h, 5Eh, 6, 26h
		db 89h,	7, 8Bh,	46h, 0FCh, 0C4h, 5Eh, 0Ah, 26h,	89h, 7
		db 0EBh, 15h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_1019:				; CODE XREF: seg000:0FE8j seg000:0FFDj
		inc	word ptr [bp-2]

loc_0_101C:				; CODE XREF: seg000:0FD4j
		mov	ax, [bp-2]
		cmp	ax, word_BFD_C74
		jge	loc_0_102E
		les	bx, [bp+6]
		cmp	word ptr es:[bx], 0
		jz	loc_0_FD6

loc_0_102E:				; CODE XREF: seg000:0FD2j seg000:1023j
		push	word ptr [bp+0Ch]
		push	word ptr [bp+0Ah]
		push	word ptr [bp+8]
		push	word ptr [bp+6]
		push	ds
		mov	ax, 0C0Ch
		push	ax
		call	__autodetect
		add	sp, 0Ch
		les	bx, [bp+6]
		cmp	word ptr es:[bx], 0
		jge	loc_0_105E
		mov	word_BFD_C24, 0FFFEh
		mov	word ptr es:[bx], 0FFFEh
		jmp	loc_0_11BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_105E:				; CODE XREF: seg000:104Ej
		les	bx, [bp+0Ah]
		mov	ax, es:[bx]
		mov	word_BFD_C0E, ax
		mov	ax, [bp+0Eh]
		or	ax, [bp+10h]
		jnz	loc_0_1076
		mov	byte_BFD_A2C, 0
		jmp	short loc_0_10BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_1076:				; CODE XREF: seg000:106Dj
		push	ds
		mov	ax, 0A2Ch
		push	ax
		push	word ptr [bp+10h]
		push	word ptr [bp+0Eh]
		call	sub_0_662
		cmp	byte_BFD_A2C, 0
		jz	loc_0_10BC
		push	ds
		mov	ax, 0A2Ch
		push	ax
		call	sub_0_6C5
		mov	[bp-6],	dx
		mov	[bp-8],	ax
		les	bx, [bp-8]
		dec	bx
		cmp	byte ptr es:[bx], 3Ah ;	':'
		jz	loc_0_10BC
		mov	bx, ax
		dec	bx
		cmp	byte ptr es:[bx], 5Ch ;	'\'
		jz	loc_0_10BC
		mov	bx, ax
		mov	byte ptr es:[bx], 5Ch ;	'\'
		inc	word ptr [bp-8]
		mov	bx, [bp-8]
		mov	byte ptr es:[bx], 0

loc_0_10BC:				; CODE XREF: seg000:1074j seg000:1089j ...
		les	bx, [bp+6]
		cmp	word ptr es:[bx], 80h ;	''
		jle	loc_0_10CF
		mov	ax, es:[bx]
		and	ax, 7Fh
		mov	word_BFD_C0C, ax

loc_0_10CF:				; CODE XREF: seg000:10C4j
		push	word_BFD_C0C
		push	ds
		mov	ax, 0A2Ch
		push	ax
		call	sub_0_DB6
		or	ax, ax
		jnz	loc_0_10EB
		mov	ax, word_BFD_C24
		les	bx, [bp+6]
		mov	es:[bx], ax
		jmp	loc_0_11BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_10EB:				; CODE XREF: seg000:10DDj
		push	si
		push	di
		push	ds
		pop	es
		assume es:dseg
		cld	
		mov	di, 0BC8h
		mov	ds, word ptr dword_BFD_C2A+2
		mov	cx, 3Fh	; '?'
		xor	al, al
		repe stosb
		mov	ax, es
		mov	ds, ax
		pop	di
		pop	si
		push	word_BFD_A7D
		push	ds
		mov	ax, 0BD4h
		push	ax
		call	sub_0_972
		add	sp, 6
		or	ax, ax
		jz	loc_0_1137
		mov	word_BFD_C24, 0FFFBh
		les	bx, [bp+6]
		assume es:nothing
		mov	word ptr es:[bx], 0FFFBh
		push	word_BFD_C18
		push	ds
		mov	ax, 0C14h
		push	ax
		call	sub_0_9A4
		add	sp, 6
		jmp	loc_0_11BC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_1137:				; CODE XREF: seg000:1115j
		mov	byte_BFD_BC9, 0
		mov	byte_BFD_BDE, 0
		les	bx, dword_BFD_BD4
		mov	word_BFD_C1C, es
		mov	word_BFD_C1A, bx
		mov	word_BFD_BF0, es
		mov	word_BFD_BEE, bx
		mov	ax, word_BFD_A7D
		mov	word_BFD_BD8, ax
		mov	word_BFD_BF2, ax
		mov	word_BFD_BE4, ds
		mov	word_BFD_BE2, 0C24h
		cmp	byte_BFD_C07, 0
		jz	loc_0_117D
		push	ds
		mov	ax, 0BC8h
		push	ax
		call	__reinstalldevice
		pop	cx
		pop	cx
		jmp	short loc_0_1189
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_117D:				; CODE XREF: seg000:116Dj
		push	ds
		mov	ax, 0BC8h
		push	ax
		call	far ptr	__installdevice
		pop	cx
		pop	cx

loc_0_1189:				; CODE XREF: seg000:117Bj
		mov	ax, 13h
		push	ax
		mov	dx, word ptr dword_BFD_C2A+2
		mov	ax, word ptr dword_BFD_C2A
		push	dx
		push	ax
		push	ds
		mov	ax, 0BB5h
		push	ax
		call	___move
		add	sp, 0Ah
		push	ds
		mov	ax, 0BC8h
		push	ax
		call	__initdevice
		pop	cx
		pop	cx
		cmp	byte_BFD_BB5, 0
		jz	loc_0_11C1
		mov	al, byte_BFD_BB5
		mov	ah, 0
		mov	word_BFD_C24, ax

loc_0_11BC:				; CODE XREF: seg000:105Bj seg000:10E8j ...
		call	sub_0_CBB
		jmp	short loc_0_11F5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_11C1:				; CODE XREF: seg000:11B2j
		mov	word_BFD_C0A, 0BC8h
		mov	word_BFD_C08, 0BB5h
		call	_getmaxmode
		mov	word_BFD_C22, ax
		mov	ax, word_BFD_BC3
		mov	word_BFD_C1E, ax
		mov	word_BFD_C20, 2710h
		mov	al, 3
		mov	byte_BFD_C07, al
		mov	ah, 0
		mov	word_BFD_C37, ax
		push	cs
		call	near ptr _graphdefaults
		mov	word_BFD_C24, 0

loc_0_11F5:				; CODE XREF: seg000:11BFj
		pop	ds
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
; [COLLAPSED FUNCTION _installuserdriver, 000000EE BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _installuserfont,	000000A9 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setgraphmode, 00000086 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getgraphmode:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		cmp	byte_BFD_C07, 0
		jnz	loc_0_1431
		mov	word_BFD_C24, 0FFFFh
		mov	ax, 0FFFFh
		jmp	short loc_0_1434
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_1431:				; CODE XREF: seg000:1424j
		mov	ax, word_BFD_C0E

loc_0_1434:				; CODE XREF: seg000:142Fj
		pop	ds
		retf	
; [COLLAPSED FUNCTION _restorecrtmode, 0000002E	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _closegraph, 000000A4 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _cleardevice, 00000018 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _setviewport, 0000007E BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _getviewsettings,	0000001E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _clearviewport, 00000075 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _moveto, 00000025	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _moverel,	00000020 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getx:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_BFD_C33
		pop	ds
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_gety:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	ax, word_BFD_C35
		pop	ds
		retf	
; [COLLAPSED FUNCTION _getmaxx,	0000000F BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getmaxy:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	bx, word_BFD_C08
		mov	ax, [bx+4]
		pop	ds
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getdrivername:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		cmp	word_BFD_C37, 3
		jz	loc_0_16BD
		xor	dx, dx
		mov	ax, dx
		jmp	short loc_0_16CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_16BD:				; CODE XREF: seg000:16B5j
		mov	ax, word_BFD_C0C
		mov	dx, 1Ah
		mul	dx
		add	ax, 0C7Fh
		mov	dx, ds

loc_0_16CA:				; CODE XREF: seg000:16BBj
		pop	ds
		retf	
; [COLLAPSED FUNCTION _getmodename, 00000024 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _lineto, 00000025	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _linerel,	00000035 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getlinesettings,	0000001E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setlinestyle, 00000041 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _rectangle, 00000056 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getfillsettings,	0000001D BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setfillstyle, 00000031 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getfillpattern, 00000020	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _setfillpattern, 00000055	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION sub_0_18C2, 00000026 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _arc, 0000002A BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _circle, 0000002B	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _getaspectratio, 0000001E	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _setaspectratio, 00000018	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _pieslice, 0000002A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setbkcolor, 0000003A BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _getcolor, 0000000D BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getbkcolor:
		push	ds
		mov	ax, seg	dseg
		mov	ds, ax
		mov	al, byte_BFD_C30
		mov	ah, 0
		pop	ds
		retf	
; [COLLAPSED FUNCTION _setallpalette, 000000A4 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setpalette, 00000043 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _getpalette, 0000001E BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _imagesize, 00000031 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _putimage, 00000086 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _gettextsettings,	0000001E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _outtext,	0000004C BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _settextjustify, 00000041	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _settextstyle, 000001C4 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setusercharsize,	0000004A BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _textheight, 00000011 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_1E77, 00000003 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_1E7A, 0000003F BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _postdevice, 00000017 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __installdevice, 00000005	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION __reinstalldevice, 00000044 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setviewport,	0000002C BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setgraphmode, 00000036 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_restorecrtmode, 0000003F BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _setvisualpage, 00000049 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setwritemode, 0000001E BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		pop	di
		pop	si
		pop	ds
		pop	bp
		retf	
; [COLLAPSED FUNCTION __gr_setfillpattern, 00000033 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_settextjustify, 0000001D BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_imagesize, 00000052 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __autodetect, 00000067 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION __gr_detectgraph,	0000001B BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_214A, 00000022 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __initdevice, 00000025 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION __gr_cleardevice,	00000017 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_moveto, 0000001D BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_lineto, 0000001D BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION _line, 00000023 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _drawpoly, 00000020 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _fillpoly, 00000020 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _bar, 00000023 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _bar3d, 0000003F BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _ellipse,	00000030 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _fillellipse, 0000003D BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _sector, 00000030	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _getarccoords, 00000029 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _setcolor, 00000021 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getmaxcolor, 0000001B BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _getpalettesize, 0000001B	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _getdefaultpalette, 0000001D BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_getmodename,	00000021 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getmaxmode, 0000001C BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setbkcolor, 0000001F	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _setrgbpalette, 00000026 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setpalette, 0000001F	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION __gr_setallpalette, 0000001B BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setlinestyle, 00000029 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _floodfill, 00000045 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setfillstyle, 00000030 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _outtextxy, 00000036 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_settextstyle, 00000051 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_setusercharsize, 00000026 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _textwidth, 0000002B BYTES. PRESS	KEYPAD "+" TO EXPAND]
		db 4Dh,	0
; [COLLAPSED FUNCTION __gr_textheight, 00000021	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _getpixel, 00000021 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _putpixel, 00000020 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _getimage, 0000003D BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __gr_putimage, 00000023 BYTES. PRESS KEYPAD "+" TO EXPAND]
		db 3 dup(0), 3 dup(1), 2, 3, 4,	1, 5, 6, 7, 0FFh, 0, 4
		db 5, 1, 4 dup(0), 5, 2, 5 dup(0), 4, 5, 2 dup(1), 0, 1
		db 0, 5, 2, 3 dup(0), 7Fh
; [COLLAPSED FUNCTION sub_0_2701, 00000036 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_2737, 00000067 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_279E, 0000001E BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_27BC, 00000040 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_27FC, 0000000F BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_280B, 00000021 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_282C, 00000003 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_282F, 00000032 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_2861, 00000030 BYTES. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
__GRP_ovr	db 20h,	0, 30h,	19h, 1Ch dup(0), 1Eh, 0Eh, 1Fh,	56h, 0FFh
		db 94h,	13h, 0,	5Eh, 1Fh, 2Eh, 0FFh, 2Eh, 70h, 0, 90h
		db 2 dup(20h), 0, 0C6h,	1, 50h,	2, 0A7h, 0, 0A7h, 0, 0Dh
		db 1, 18h, 1, 65h, 1, 0A9h, 0, 5Ch, 1, 7Ch, 1, 85h, 1
		db 0A7h, 0, 0A7h, 0, 0A7h, 0, 0A7h, 0, 9Bh, 2, 0AAh, 2
		db 0DBh, 2, 80h, 13h, 92h, 1, 98h, 1, 0BCh, 1, 34h, 1
		db 5Ch,	1, 53h,	1, 0A7h, 0, 71h, 1, 71h, 1, 0B0h, 0, 0A7h
		db 0, 0A8h, 0, 0AEh, 0,	0A7h, 0, 0A7h, 0, 0A7h,	0, 0A7h
		db 0, 0A7h, 0, 0A7h, 0,	0A7h, 0, 0A7h, 0, 0A7h,	0, 0A7h
		db 0, 0A7h, 0, 0A7h, 0,	0A7h, 0, 0A7h, 13h dup(0), 10h
		db 27h,	0Ah dup(0), 8, 0, 8, 1,	4 dup(0), 64h, 0, 64h
		db 2 dup(0), 1,	4 dup(0), 1, 3 dup(0), 2 dup(5Eh), 1Fh
		db 0CBh, 2 dup(0C3h), 0E8h, 1, 4, 0EBh,	0F5h, 0EBh, 0F3h
		db 50h,	0C7h, 6, 84h, 3	dup(0),	0C7h, 6, 86h, 3	dup(0)
		db 80h,	0E4h, 7Fh, 3Bh,	0C1h, 72h, 1, 91h, 3Bh,	0DAh, 72h
		db 2, 87h, 0DAh, 23h, 0C0h, 78h, 21h, 23h, 0DBh, 78h, 1Dh
		db 83h,	0F9h, 1, 7Ch, 18h, 83h,	0FAh, 1, 7Ch, 13h, 0A3h
		db 84h,	0, 89h,	1Eh, 86h, 0, 0E8h, 16h,	0, 58h,	22h, 0E4h
		db 79h,	3, 0E8h, 2, 0, 0C3h, 58h, 33h, 0C0h, 8Bh, 0D8h
		db 8Bh,	0Eh, 7Dh, 0, 8Bh, 16h, 7Fh, 0, 0A3h, 88h, 0, 89h
		db 1Eh,	8Ah, 0,	89h, 0Eh, 8Ch, 0, 89h, 16h, 8Eh, 0, 0C3h
		db 0E8h, 4Ch, 0, 0A3h, 0F0h, 2,	89h, 1Eh, 0F2h,	2, 0C3h
		db 8Bh,	0Eh, 0F0h, 2, 8Bh, 16h,	0F2h, 2, 0E8h, 0EAh, 0FFh
		db 50h,	53h, 0E8h, 1Dh,	3, 5Bh,	58h, 0BEh, 8, 0, 0FFh
		db 1Eh,	70h, 0,	0E9h, 6Fh, 0FFh, 0E8h, 25h, 0, 0E8h, 3
		db 12h,	73h, 14h, 0BEh,	2Ch, 0,	0FFh, 1Eh, 70h,	0, 3Ch
		db 0FFh, 75h, 9, 0C4h, 1Eh, 78h, 0, 26h, 0C7h, 7, 0F9h
		db 0FFh, 0E9h, 50h, 0FFh, 0E8h,	6, 0, 0E8h, 0E4h, 11h
		db 73h,	0F5h, 0C3h, 3, 6, 84h, 0, 3, 1Eh, 86h, 0, 0C3h
		db 0E8h, 6, 0, 0E8h, 0DAh, 2, 0E9h, 35h, 0FFh, 0E8h, 0EBh
		db 0FFh, 91h, 87h, 0DAh, 0E8h, 0E5h, 0FFh, 91h,	87h, 0DAh
		db 2 dup(0C3h),	0E8h, 0EFh, 0FFh, 0E8h,	6Eh, 11h, 73h
		db 0CCh, 0C3h, 3Dh, 2 dup(0FFh), 75h, 0F1h, 0Eh, 7, 0BBh
		db 0F4h, 2, 0E9h, 11h, 0FFh, 0E8h, 0D8h, 11h, 0E9h, 0Bh
		db 0FFh, 80h, 3Eh, 99h,	2 dup(0), 74h, 6, 0E8h,	0D1h, 14h
		db 0E9h, 2 dup(0FEh), 80h, 3Eh,	6Fh, 2 dup(0), 74h, 0Fh
		db 8Bh,	0C1h, 0F7h, 26h, 64h, 13h, 8Bh,	0D8h, 8Bh, 0Eh
		db 66h,	13h, 0E9h, 0E8h, 0FEh, 0C3h, 88h, 26h, 62h, 13h
		db 0A2h, 63h, 13h, 0E9h, 0DDh, 0FEh, 22h, 0C0h,	74h, 1
		db 0C3h, 0C6h, 6, 92h, 2 dup(0), 0C6h, 6, 7Ch, 2 dup(0)
		db 89h,	1Eh, 70h, 0, 8Ch, 6, 72h, 0, 0A2h, 6Fh,	0, 33h
		db 0C0h, 8Bh, 0F0h, 0FFh, 1Eh, 70h, 0, 89h, 1Eh, 74h, 0
		db 8Ch,	6, 76h,	0, 6, 53h, 0C4h, 3Eh, 70h, 0, 83h, 0C7h
		db 10h,	0B0h, 9Ah, 0FCh, 0AAh, 0B8h, 38h, 3, 0ABh, 8Ch
		db 0C8h, 0ABh, 2Eh, 0C4h, 36h, 74h, 0, 83h, 0C6h, 2, 26h
		db 8Bh,	4, 0A3h, 7Dh, 0, 2Eh, 0C4h, 36h, 74h, 0, 83h, 0C6h
		db 4, 26h, 8Bh,	4, 0A3h, 7Fh, 0, 0A1h, 7Dh, 0, 0B9h, 0E8h
		db 3, 0F7h, 0E1h, 2Eh, 0C4h, 36h, 74h, 0
		db 83h,	0C6h, 0Ah, 26h,	0F7h, 34h, 40h,	0A3h, 95h, 0, 0A1h
		db 7Fh,	0, 0F7h, 0E1h, 2Eh, 0C4h, 36h, 74h, 0, 83h, 0C6h
		db 0Ch,	26h, 0F7h, 34h,	40h, 0A3h, 97h,	0, 5Bh,	7, 0E9h
		db 53h,	0FEh, 50h, 53h,	51h, 52h, 6, 26h, 8Bh, 47h, 0Ch
		db 2 dup(40h), 2 dup(0A3h), 4, 26h, 8Bh, 47h, 0Eh, 0A3h
		db 0A5h, 4, 26h, 8Bh, 47h, 10h,	33h, 0D2h, 0B9h, 6, 0
		db 0F7h, 0F1h, 0A3h, 9Fh, 4, 26h, 0C4h,	5Fh, 1Ah, 89h
		db 1Eh,	78h, 0,	8Ch, 6,	7Ah, 0,	7, 5Ah,	59h, 5Bh, 58h
		db 0FFh, 1Eh, 70h, 0, 0C6h, 6, 99h, 2 dup(0), 0E9h, 13h
		db 0FEh, 0A3h, 9Ah, 0, 0BEh, 1Eh, 0, 0FFh, 1Eh,	70h, 0
		db 0C3h, 0A3h, 9Ah, 0, 0C3h, 0A3h, 90h,	0, 0BEh, 20h, 0
		db 0FFh, 1Eh, 70h, 0, 0C3h, 3Ch, 0FFh, 75h, 7, 0C7h, 6
		db 90h,	0, 2 dup(0Ch), 0C3h, 0A3h, 90h,	0, 0C3h, 32h, 0C0h
		db 8Bh,	1Eh, 0A1h, 0, 0B9h, 1, 0, 0EBh,	5, 32h,	0C0h, 0B9h
		db 3, 0, 0A2h, 9Eh, 0, 88h, 0Eh, 9Fh, 0, 0B9h, 1, 0, 0BEh
		db 22h,	0, 0FFh, 1Eh, 70h, 0, 0C3h, 0A2h, 9Eh, 0, 88h
		db 0Eh,	9Fh, 0,	89h, 1Eh, 0A1h,	0, 0C3h, 27h dup(0), 10h
		db 0, 8Ah, 6, 12h, 0, 3, 4, 20h, 0, 0CAh, 3, 26h, 0, 29h
		db 18h,	24h, 0,	97h, 13h, 28h, 0, 73h, 2 dup(16h), 0, 0Ah
		db 8, 18h, 0, 0E7h, 7, 0Eh, 0, 0E3h, 0Ah, 14h, 0, 93h
		db 7, 2	dup(0),	1Eh, 0Eh, 1Fh, 50h, 8Bh, 0FEh, 0BEh, 0Eh
		db 3, 0ADh, 23h, 0C0h, 74h, 0Ch, 3Bh, 0C7h, 0ADh, 75h
		db 0F6h, 8Bh, 0F8h, 58h, 0FFh, 0D7h, 1Fh, 0CBh,	58h, 1Fh
		db 0CBh, 0A1h, 0F0h, 2,	8Bh, 1Eh, 0F2h,	2, 0EBh, 0Ah, 2Eh
		db 0A3h, 0F0h, 2, 2Eh, 89h, 1Eh, 0F2h, 2, 0C3h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2C28	proc near		; CODE XREF: seg000:2C4Bj seg000:2F9Fp ...
		call	sub_0_2EC5
		jb	locret_0_2C3B
		mov	word_BFD_2F0, ax
		mov	word_BFD_2F2, bx
		mov	si, 8
		call	dword_BFD_70

locret_0_2C3B:				; CODE XREF: sub_0_2C28+3j
		retn	
sub_0_2C28	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		add	ax, word_BFD_2F0
		add	bx, word_BFD_2F2
		mov	word_BFD_2F0, ax
		mov	word_BFD_2F2, bx
		jmp	short sub_0_2C28
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		add	ax, word_BFD_2F0
		add	bx, word_BFD_2F2
		push	ax
		push	bx
		call	sub_0_2C64
		pop	bx
		pop	ax
		mov	word_BFD_2F0, ax
		mov	word_BFD_2F2, bx
		retn	

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2C64	proc near		; CODE XREF: seg000:2C57p seg000:2F7Cp ...
		call	sub_0_2EC5
		jb	locret_0_2C7C
		push	cx
		push	dx
		mov	cx, ax
		mov	dx, bx
		xchg	ax, word_BFD_2F0
		xchg	bx, word_BFD_2F2
		call	sub_0_2D05
		pop	dx
		pop	cx

locret_0_2C7C:				; CODE XREF: sub_0_2C64+3j
		retn	
sub_0_2C64	endp

; [COLLAPSED FUNCTION sub_0_2C7D, 0000000D BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	word_BFD_90, ax
		mov	byte_BFD_AE2, 0FFh
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 30h dup(0), 0Eh, 7, 43h, 41h, 8Bh, 0FBh, 0BBh, 0D3h
		db 3, 89h, 7, 89h, 7Fh,	2, 89h,	47h, 4,	89h, 57h, 6, 89h
		db 4Fh,	8, 89h,	57h, 0Ah, 89h, 4Fh, 0Ch, 89h, 7Fh, 0Eh
		db 89h,	47h, 10h, 89h, 7Fh, 12h, 0B8h, 0, 80h, 89h, 47h
		db 14h,	89h, 47h, 16h, 0B8h, 6,	0, 0B9h, 8, 0, 0BEh, 0Eh
		db 0, 0FFh, 1Eh, 70h, 0, 0C3h, 0E8h, 0C2h, 1, 72h, 13h

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2D05	proc near		; CODE XREF: sub_0_2C64+13p
		cmp	byte ptr word_BFD_9E+1,	3
		jnb	loc_0_2D19
sub_0_2D05	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2D0C	proc near		; CODE XREF: sub_0_2D50+5p
		call	sub_0_39FC
		jnb	locret_0_2D18
		mov	si, 0Ch
		call	dword_BFD_70

locret_0_2D18:				; CODE XREF: sub_0_2D0C+3j
		retn	
sub_0_2D0C	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_2D19:				; CODE XREF: sub_0_2D05+5j
		call	sub_0_2D50
		mov	di, ax
		sub	di, cx
		jns	loc_0_2D24
		neg	di

loc_0_2D24:				; CODE XREF: seg000:2D20j
		mov	si, bx
		sub	si, dx
		jns	loc_0_2D2C
		neg	si

loc_0_2D2C:				; CODE XREF: seg000:2D28j
		cmp	di, si
		mov	di, word_BFD_AE0
		jnb	loc_0_2D43
		sub	ax, di
		sub	cx, di
		call	sub_0_2D50
		shl	di, 1
		add	ax, di
		add	cx, di
		jmp	short sub_0_2D50
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_2D43:				; CODE XREF: seg000:2D32j
		sub	bx, di
		sub	dx, di
		call	sub_0_2D50
		shl	di, 1
		add	bx, di
		add	dx, di

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2D50	proc near		; CODE XREF: seg000:2D19p seg000:2D38p ...
		push	ax
		push	bx
		push	cx
		push	dx
		push	di
		call	sub_0_2D0C
		pop	di
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		retn	
sub_0_2D50	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 0Fh dup(0), 3Ch, 8, 72h, 2, 0B0h, 5,	32h, 0E4h, 0D0h
		db 0E0h, 8Bh, 0F8h, 0FFh, 0A5h,	0BDh, 4, 0CDh, 4, 31h
		db 5, 6Fh, 5, 36h, 5, 0DFh, 4, 5Bh, 5, 0E5h, 4,	0E9h, 4
		db 0C6h, 6, 9Eh, 4, 1, 0C7h, 6,	0A1h, 4, 2 dup(0), 0C7h
		db 6, 0A7h, 4, 2 dup(0), 0C3h, 0C6h, 6,	9Eh, 4,	2, 0C3h
		db 32h,	0C0h, 0EBh, 2, 0B0h, 0FFh, 0E3h, 43h, 50h, 6, 53h
		db 51h,	33h, 0C0h, 0E8h, 0B7h, 0FFh, 59h, 5Fh, 7, 0E8h
		db 0F0h, 0, 0E8h, 5Dh, 0FCh, 0E8h, 0E0h, 0, 23h, 0C9h
		db 75h,	0F3h, 58h, 22h,	0C0h, 0B8h, 1, 0, 74h, 1Fh, 0C4h
		db 1Eh,	0A3h, 4, 26h, 8Bh, 7, 26h, 8Bh,	5Fh, 2,	0C7h, 6
		db 0A7h, 4, 2 dup(0), 0E8h, 46h, 0FEh, 0B8h, 3,	0, 80h
		db 3Eh,	9Ah, 2 dup(0), 74h, 1, 48h, 0E8h, 7Dh, 0FFh, 0C3h
		db 0E8h, 2Dh, 0, 0EBh, 58h, 0E8h, 28h, 0, 2 dup(0A1h)
		db 4, 3Bh, 6, 9Fh, 4, 73h, 19h,	3Dh, 4,	0, 72h,	14h, 0C4h
		db 1Eh,	0A3h, 4, 8Bh, 0Eh, 9Fh,	4, 0C6h, 6, 9Eh, 4, 0
		db 0BEh, 0Eh, 0, 0FFh, 1Eh, 70h, 0, 0C6h, 6, 9Eh, 4, 0
		db 0C3h, 0B8h, 0, 80h, 8Bh, 0D8h, 0E8h,	0FFh, 0FDh, 0C6h
		db 6, 9Eh, 4, 0, 0C3h, 81h, 3Eh, 97h, 0, 0B4h, 0, 72h
		db 5, 0C6h, 6, 0E2h, 0Ah, 0FFh,	80h, 3Eh, 0E2h,	0Ah, 0
		db 74h,	8, 0E8h, 0DBh, 0FFh, 0E8h, 5, 0, 0EBh, 0AEh, 0E8h
		db 0A8h, 0FFh, 0C6h, 6,	9Eh, 4,	0, 0C4h, 3Eh, 0A3h, 4
		db 8Bh,	0Eh, 0A1h, 4, 3Bh, 0Eh,	9Fh, 4,	72h, 3,	0E9h, 0D7h
		db 0, 83h, 0F9h, 2, 72h, 0B2h, 0FFh, 36h, 0F0h,	2, 0FFh
		db 36h,	0F2h, 2, 0E8h, 2Bh, 0, 0E8h, 35h, 0, 80h, 0FFh
		db 80h,	75h, 0Dh, 22h, 0DBh, 74h, 16h, 0E8h, 1Ch, 0, 23h
		db 0C9h, 75h, 0EDh, 0EBh, 0Dh, 6, 57h, 51h, 0E8h, 0D5h
		db 0FDh, 59h, 5Fh, 7, 23h, 0C9h, 75h, 0DEh, 8Fh, 6, 0F2h
		db 2, 8Fh, 6, 0F0h, 2, 0C3h, 0E8h, 0Ah,	0, 6, 57h, 51h
		db 0E8h, 80h, 0FDh, 59h, 5Fh, 7, 0C3h, 0BBh, 0,	80h, 0E3h
		db 0Bh,	26h, 8Bh, 5, 2 dup(47h), 26h, 8Bh, 1Dh,	2 dup(47h)
		db 49h,	0C3h, 1Eh, 0Eh,	1Fh, 0E8h, 2, 0, 1Fh, 0C3h
; [COLLAPSED FUNCTION sub_0_2EC5, 00000054 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_2F19, 00000031 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	cx
		push	dx
		mov	word_BFD_304, ax
		mov	word_BFD_306, bx
		mov	cx, word_BFD_2F0
		mov	dx, word_BFD_2F2
		mov	word_BFD_300, cx
		mov	word_BFD_302, dx
		call	sub_0_3037
		mov	ax, word_BFD_9A
		jb	loc_0_2F74
		xchg	ah, al
		mov	si, 1Eh
		call	dword_BFD_70

loc_0_2F74:				; CODE XREF: seg000:2F69j
		mov	bx, word_BFD_306
		push	bx
		mov	ax, word_BFD_300
		call	sub_0_2C64
		mov	ax, word_BFD_304
		pop	bx
		push	ax
		call	sub_0_2C64
		pop	ax
		mov	bx, word_BFD_302
		push	bx
		call	sub_0_2C64
		pop	bx
		mov	ax, word_BFD_300
		call	sub_0_2C64
		mov	ax, word_BFD_304
		mov	bx, word_BFD_302
		push	ax
		call	sub_0_2C28
		pop	ax
		pop	dx
		pop	cx
		or	cx, cx
		jz	loc_0_2FE8
		push	dx
		mov	dx, cx
		mov	di, dx
		shl	dx, 1
		add	dx, di
		shr	dx, 1
		shr	dx, 1
		cmp	byte ptr word_BFD_92, 0
		jz	loc_0_2FCC
		mov	cx, dx
		neg	cx
		pop	di
		and	di, di
		jnz	loc_0_2FCB
		call	sub_0_3018
		jmp	short loc_0_2FE8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_2FCB:				; CODE XREF: seg000:2FC4j
		push	di

loc_0_2FCC:				; CODE XREF: seg000:2FBBj
		add	ax, cx
		sub	bx, dx
		push	ax
		call	sub_0_2C64
		pop	ax
		mov	bx, word_BFD_306
		sub	bx, dx
		push	bx
		call	sub_0_2C64
		pop	bx
		pop	di
		and	di, di
		jz	loc_0_2FE8
		call	sub_0_2FF3

loc_0_2FE8:				; CODE XREF: seg000:2FA7j seg000:2FC9j ...
		mov	ax, word_BFD_9A
		mov	si, 1Eh
		call	dword_BFD_70
		retn	

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_2FF3	proc near		; CODE XREF: seg000:2FE5p
		mov	ax, word_BFD_300
		add	ax, cx
		call	sub_0_2C64
		mov	ax, word_BFD_300
		mov	bx, word_BFD_306
		push	bx
		call	sub_0_2C64
		pop	bx
		mov	ax, word_BFD_304
		push	ax
		push	bx
		call	sub_0_2C28
		pop	bx
		pop	ax
		add	ax, cx
		sub	bx, dx
		jmp	sub_0_2C64
sub_0_2FF3	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_3018	proc near		; CODE XREF: seg000:2FC6p
		mov	ax, word_BFD_300
		mov	bx, word_BFD_306
		push	bx
		push	ax
		call	sub_0_2C28
		pop	ax
		pop	bx
		sub	bx, dx
		add	ax, cx
		push	bx
		call	sub_0_2C64
		mov	ax, word_BFD_304
		add	ax, cx
		pop	bx
		jmp	sub_0_2C64
sub_0_3018	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_3037	proc near		; CODE XREF: seg000:2F63p
		cmp	ax, cx
		jl	loc_0_303C
		xchg	ax, cx

loc_0_303C:				; CODE XREF: sub_0_3037+2j
		cmp	bx, dx
		jge	loc_0_3042
		xchg	bx, dx

loc_0_3042:				; CODE XREF: sub_0_3037+7j
		inc	ax
		dec	cx
		dec	bx
		inc	dx
		call	sub_0_2C7D
		stc	
		retn	
sub_0_3037	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		clc	
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 5 dup(0), 0FFh, 0C6h, 6, 92h, 7, 0, 0E8h, 3Ch, 1, 80h
		db 3Eh,	9Fh, 0,	3, 73h,	12h, 0BEh, 4, 0, 80h, 3Eh, 0E2h
		db 0Ah,	0, 75h,	8, 81h,	3Eh, 97h, 0, 0B4h, 0, 72h, 27h
		db 50h,	53h, 32h, 0C0h,	0B9h, 1, 0, 0BEh, 22h, 0, 0FFh
		db 1Eh,	70h, 0,	33h, 0C0h, 0E8h, 0E6h, 0FCh, 5Bh, 58h
		db 0E8h, 9Dh, 2, 0E8h, 6Eh, 2, 0B8h, 1,	0, 0E8h, 0D8h
		db 0FCh, 0A0h, 9Eh, 0, 0E9h, 0E0h, 0FAh, 0E8h, 10h, 1
		db 0E8h, 5Ch, 2, 0B8h, 5, 0, 0E9h, 0C6h, 0FCh, 0FFh, 36h
		db 0F0h, 2, 0FFh, 36h, 0F2h, 2,	50h, 53h, 0FFh,	36h, 9Ah
		db 0, 33h, 0FFh, 57h, 8Bh, 3Eh,	0F0h, 2, 3, 0F8h, 8Bh
		db 36h,	0F2h, 2, 57h, 56h, 57h,	56h, 0E8h, 47h,	5, 0C3h
		db 0C6h, 6, 92h, 7, 0FFh, 80h, 3Eh, 92h, 2 dup(0), 74h
		db 2, 87h, 0CAh, 0E8h, 0BCh, 0,	80h, 3Eh, 0E2h,	0Ah, 0
		db 75h,	8, 81h,	3Eh, 97h, 0, 0B4h, 0, 72h, 3, 0E9h, 8Fh
		db 2, 33h, 0D2h, 88h, 16h, 91h,	7, 89h,	16h, 8Dh, 7, 89h
		db 16h,	8Fh, 7,	89h, 16h, 4, 3,	89h, 16h, 6, 3,	89h, 16h
		db 8, 3, 89h, 16h, 0Ah,	3, 0E8h, 0D0h, 1, 50h, 53h, 33h
		db 0D2h, 0B9h, 5Ah, 0, 0F7h, 0F1h, 8Bh,	0F8h, 8Bh, 0C3h
		db 33h,	0D2h, 0F7h, 0F1h, 3Dh, 4, 0, 72h, 3, 0B8h, 3, 0
		db 8Bh,	0F0h, 5Bh, 58h,	3Bh, 0F7h, 74h,	1Eh, 53h, 50h
		db 0B8h, 5Ah, 0, 47h, 0F7h, 0E7h, 8Bh, 0D8h, 58h, 53h
		db 33h,	0F6h, 3Bh, 0C3h, 9Ch, 0E8h, 6Bh, 0, 9Dh, 74h, 3
		db 0E8h, 0Eh, 1, 58h, 5Bh, 0EBh, 0C1h, 33h, 0F6h, 3Bh
		db 0C3h, 9Ch, 0E8h, 59h, 0, 9Dh, 74h, 3, 0E8h, 0FCh, 0
		db 0A1h, 0F0h, 2, 8Bh, 1Eh, 0F2h, 2, 8Bh, 0Eh, 8Dh, 7
		db 89h,	0Eh, 4,	3, 8Bh,	16h, 8Fh, 7, 89h, 16h, 6, 3, 80h
		db 3Eh,	92h, 7,	0, 74h,	1Ah, 3,	0C8h, 3, 0D3h, 50h, 53h
		db 0E8h, 7Eh, 0FBh, 5Bh, 58h, 8Bh, 0Eh,	8, 3, 8Bh, 16h
		db 0Ah,	2 dup(3), 0C8h,	3, 0D3h, 0E8h, 6Dh, 0FBh, 0E8h
		db 67h,	1, 0C3h, 89h, 0Eh, 0, 3, 89h, 16h, 2, 3, 50h, 0A1h
		db 0F0h, 2, 0A3h, 0F4h,	2, 0A1h, 0F2h, 2, 0A3h,	0F6h, 2
		db 58h,	0C3h, 8Bh, 0Eh,	0, 3, 8Bh, 16h,	2, 3, 80h, 3Eh
		db 92h,	2 dup(0), 74h, 6, 5, 5Ah, 0, 83h, 0C3h,	5Ah, 8Bh
		db 0FBh, 2Bh, 0F8h, 89h, 3Eh, 93h, 0, 23h, 0FFh, 75h, 3
		db 0E9h, 0BFh, 0, 0FFh,	36h, 0F0h, 2, 0FFh, 36h, 0F2h
		db 2, 51h, 52h,	0FFh, 36h, 9Ah,	0, 0BFh, 2 dup(0FFh), 57h
		db 56h,	2 dup(53h), 2 dup(50h),	0E8h, 0BEh, 0, 0A3h, 4
		db 3, 58h, 0E8h, 0C4h, 0, 0A3h,	6, 3, 58h, 0E8h, 0B0h
		db 0, 0A3h, 8, 3, 58h, 0E8h, 0B6h, 0, 0A3h, 0Ah, 3, 2 dup(5Eh)
		db 0FFh, 36h, 4, 3, 0FFh, 36h, 6, 3, 0FFh, 36h,	8, 3, 50h
		db 8Bh,	0C6h, 0E8h, 55h, 0FBh, 0A1h, 4,	3, 3Bh,	6, 8, 3
		db 75h,	16h, 0A1h, 6, 3, 3Bh, 6, 0Ah, 3, 75h, 0Dh, 81h
		db 3Eh,	93h, 0,	5Eh, 1,	73h, 21h, 83h, 0C4h, 14h, 0EBh
		db 0Ah,	83h, 3Eh, 93h, 0, 2, 73h, 15h, 83h, 0C4h, 14h
		db 0A1h, 8, 3, 8Bh, 1Eh, 0Ah, 2	dup(3),	6, 0F0h, 2, 3
		db 1Eh,	0F2h, 2, 0E9h, 0D5h, 0F9h, 0E8h, 0BAh, 3, 0C3h
		db 80h,	3Eh
		db 92h,	7, 0, 75h, 8, 0B8h, 1, 0, 0E8h,	9, 0FBh, 0EBh
		db 2Bh,	0E8h, 0ACh, 0F9h, 0C4h,	1Eh, 0A3h, 4, 26h, 8Bh
		db 7, 26h, 8Bh,	5Fh, 2,	0C7h, 6, 0A7h, 4, 2 dup(0), 0E8h
		db 0ABh, 0F9h, 0B8h, 3,	0, 0E8h, 0EAh, 0FAh, 2 dup(0A1h)
		db 4, 2Dh, 3, 0, 72h, 6, 0A3h, 0A1h, 4,	0E8h, 0BDh, 0FBh
		db 80h,	3Eh, 91h, 7, 0,	75h, 11h, 0C6h,	6, 91h,	7, 0FFh
		db 0A1h, 4, 3, 0A3h, 8Dh, 7, 0A1h, 6, 3, 0A3h, 8Fh, 7
		db 0C3h, 5Fh, 0E8h, 0C9h, 6, 8Bh, 0Eh, 0, 3, 0E8h, 11h
		db 0, 0FFh, 0E7h, 5Fh, 0E8h, 0C9h, 6, 8Bh, 0Eh,	2, 3, 0E8h
		db 4, 0, 0F7h, 0D8h, 0FFh, 0E7h, 8Bh, 0D0h, 8Bh, 0C3h
		db 8Bh,	0D9h, 0E8h, 3, 0, 8Bh, 0C2h, 0C3h, 8Bh,	0C8h, 8Bh
		db 0C2h, 0F7h, 0E3h, 91h, 0F7h,	0E3h, 3, 0D1h, 0C3h, 51h
		db 52h,	0B9h, 68h, 1, 33h, 0D2h, 0F7h, 0F1h, 52h, 3Bh
		db 0D9h, 74h, 8, 33h, 0D2h, 8Bh, 0C3h, 0F7h, 0F1h, 8Bh
		db 0DAh, 58h, 3Bh, 0C3h, 72h, 1, 93h, 5Ah, 59h,	0C3h, 0Eh
		db 7, 0FCh, 0BEh, 0F4h,	2, 8Bh,	0FEh, 0ADh, 2Bh, 6, 84h
		db 0, 0ABh, 8Bh, 0D8h, 0ADh, 2Bh, 6, 86h, 0, 0ABh, 8Bh
		db 0C8h, 0BEh, 4, 3, 0ADh, 3, 0C3h, 0ABh, 0ADh,	3, 0C1h
		db 0ABh, 0ADh, 3, 0C3h,	0ABh, 0ADh, 3, 0C1h, 0ABh, 0C3h
		db 3Bh,	0C3h, 72h, 0Bh,	81h, 0C3h, 68h,	1, 0EBh, 5, 3Bh
		db 0C3h, 72h, 1, 93h, 80h, 3Eh,	92h, 2 dup(0), 74h, 6
		db 5, 5Ah, 0, 83h, 0C3h, 5Ah, 8Bh, 0Eh,	0, 3, 89h, 0Eh
		db 0, 3, 8Bh, 0Eh, 2, 3, 89h, 0Eh, 2, 3, 53h, 3	dup(50h)
		db 0E8h, 4Eh, 0FFh, 0A3h, 0Ch, 3, 58h, 0E8h, 54h, 0FFh
		db 8Bh,	0D8h, 0A1h, 0Ch, 2 dup(3), 6, 0F0h, 2, 3, 1Eh
		db 0F2h, 2, 0E8h, 0B5h,	0F8h, 2	dup(58h), 5Bh, 40h, 3Bh
		db 0C3h, 7Eh, 0DAh, 0C3h, 50h, 53h, 33h, 0C0h, 0E8h, 0EAh
		db 0F9h, 5Bh, 58h, 0E8h, 0ABh, 0FFh, 0E8h, 8Ah,	0F8h, 0C4h
		db 1Eh,	0A3h, 4, 26h, 8Bh, 7, 26h, 8Bh,	5Fh, 2,	0E8h, 8Fh
		db 0F8h, 0B8h, 2, 0, 0E9h, 0CEh, 0F9h, 0, 1, 2 dup(0)
		db 81h,	3Eh, 97h, 0, 0B4h, 0, 72h, 5, 0C6h, 6, 0E2h, 0Ah
		db 0FFh, 8Bh, 0ECh, 83h, 0ECh, 18h, 3Dh, 3, 0, 72h, 26h
		db 89h,	4Eh, 0F0h, 89h,	5Eh, 0FEh, 89h,	46h, 0F8h, 0D1h
		db 0E0h, 0D1h, 0E0h, 3,	0D8h, 89h, 5Eh,	0FCh, 0FFh, 36h
		db 9Ah,	0, 0E8h, 0D3h, 1, 73h, 0Bh, 0E8h, 0Fh, 0, 0E8h
		db 2Bh,	2, 73h,	3, 0E8h, 7, 0, 58h, 83h, 0C4h, 18h, 0E9h
		db 69h,	0F7h, 6, 1Fh, 0E8h, 0DBh, 0, 8Bh, 46h, 0F4h, 89h
		db 46h,	0F6h, 0C7h, 46h, 0EEh, 2 dup(0), 0E8h, 2Fh, 0
		db 0E8h, 0F9h, 0, 8Bh, 46h, 0ECh, 80h, 7Eh, 0E8h, 2, 90h
		db 72h,	12h, 0FFh, 46h,	0EEh, 8Bh, 5Eh,	0EAh, 3Bh, 5Eh
		db 0EEh, 75h, 7, 0C7h, 46h, 0EEh, 2 dup(0), 0F7h, 0EBh
		db 1, 46h, 0F6h, 8Bh, 46h, 0F6h, 3Bh, 46h, 0F2h, 7Ch, 0D3h
		db 1Eh,	7, 0Eh,	1Fh, 0C3h, 0C7h, 46h, 0FAh, 2 dup(0), 8Bh
		db 5Eh,	0FEh, 2	dup(43h), 8Bh, 0Fh, 8Bh, 46h, 0F6h, 83h
		db 0C3h, 4, 8Bh, 0F9h, 8Bh, 17h, 8Bh, 0CAh, 80h, 0FEh
		db 80h,	74h, 1Ah, 3Bh, 0D7h, 7Ch, 2, 87h, 0D7h,	3Bh, 0C2h
		db 7Ch,	0E8h, 3Bh, 0C7h, 7Dh, 0E4h, 53h, 51h, 0E8h, 17h
		db 0, 0E8h, 3Bh, 0, 59h, 5Bh, 0EBh, 0D5h, 80h, 0FAh, 1
		db 75h,	0Ah
		db 83h,	0C3h, 4, 8Bh, 0Fh, 80h,	0FDh, 80h, 75h,	0C6h, 0C3h
		db 8Bh,	77h, 0FAh, 8Bh,	7Fh, 0FCh, 8Bh,	4Fh, 0FEh, 8Bh
		db 17h,	3Bh, 0D7h, 7Ch,	4, 87h,	0CEh, 87h, 0D7h, 8Bh, 0C1h
		db 2Bh,	0FAh, 74h, 0Dh,	8Bh, 46h, 0F6h,	2Bh, 0C2h, 2Bh
		db 0F1h, 0F7h, 0EEh, 0F7h, 0FFh, 3, 0C1h, 0C3h,	8Bh, 0D0h
		db 8Bh,	76h, 0FCh, 8Bh,	46h, 0FAh, 3Bh,	46h, 0F0h, 73h
		db 22h,	0FFh, 46h, 0FAh, 23h, 0C0h, 74h, 15h, 48h, 8Bh
		db 0D8h, 0D1h, 0E3h, 8Bh, 8, 40h, 3Bh, 0CAh, 7Ch, 9, 8Bh
		db 0D8h, 0D1h, 0E3h, 89h, 8, 48h, 75h, 0EBh, 8Bh, 0D8h
		db 0D1h, 0E3h, 89h, 10h, 0C3h, 0C7h, 46h, 0F4h,	0FFh, 7Fh
		db 0C7h, 46h, 0F2h, 0, 80h, 8Bh, 5Eh, 0FEh, 2 dup(43h)
		db 8Bh,	7, 2 dup(43h), 80h, 0FCh, 80h, 75h, 5, 3Ch, 1
		db 74h,	0F1h, 0C3h, 3Bh, 46h, 0F4h, 7Dh, 3, 89h, 46h, 0F4h
		db 3Bh,	46h, 0F2h, 7Ch,	0E3h, 89h, 46h,	0F2h, 0EBh, 0DEh
		db 8Bh,	76h, 0FCh, 33h,	0C0h, 8Bh, 4Eh,	0FAh, 0E3h, 26h
		db 8Bh,	0D8h, 0D1h, 0E3h, 50h, 56h, 1Eh, 55h, 0A9h, 1
		db 0, 8Bh, 0, 8Bh, 5Eh,	0F6h, 0Eh, 1Fh,	75h, 5,	0E8h, 14h
		db 0, 0EBh, 3, 0E8h, 21h, 0, 5Dh, 1Fh, 5Eh, 58h, 40h, 3Bh
		db 46h,	0FAh, 72h, 0DAh, 0C3h, 4 dup(0), 83h, 3Eh, 44h
		db 0Dh,	0, 74h,	3, 0E8h, 0D1h, 0, 0A3h,	67h, 0Ch, 89h
		db 1Eh,	69h, 0Ch, 0C3h,	83h, 3Eh, 44h, 0Dh, 0, 74h, 3
		db 0E8h, 0BFh, 0, 8Bh, 0C8h, 8Bh, 0D3h,	87h, 0Eh, 67h
		db 0Ch,	87h, 16h, 69h, 0Ch, 3Bh, 0C1h, 72h, 1, 91h, 80h
		db 3Eh,	0E2h, 0Ah, 0, 75h, 3, 0E9h, 1Bh, 0F7h, 0BEh, 0Ch
		db 0, 0FFh, 1Eh, 70h, 0, 0C3h, 2 dup(0), 1, 2 dup(0), 2
		db 4, 2, 0, 5Ah, 2 dup(0), 0Ah,	0E1h, 87h, 2, 0Ah, 1, 0E1h
		db 87h,	2 dup(2), 5, 87h, 0E1h,	3, 2, 5, 2 dup(87h), 1
		db 5Ah,	0Ah, 2 dup(0), 1, 87h, 11h, 2 dup(0E1h), 3, 5
		db 1, 2	dup(0),	3, 0Ah,	1, 2 dup(0), 3,	5, 2, 4	dup(0)
		db 1, 2	dup(0),	0C7h, 6, 44h, 0Dh, 2 dup(0), 0A0h, 90h
		db 0, 0FEh, 0C8h, 0F8h,	78h, 4Fh, 80h, 3Eh, 0E2h, 0Ah
		db 0, 75h, 2, 32h, 0C0h, 8Ah, 0D8h, 0D0h, 0E3h,	0D0h, 0E3h
		db 2, 0D8h, 32h, 0FFh, 81h, 0C3h, 0AAh,	0Ch, 8Bh, 0F3h
		db 0ACh, 88h, 46h, 0E8h, 0ACh, 32h, 0E4h, 89h, 46h, 0EAh
		db 0ACh, 0F7h, 2Eh, 0E0h, 0Ah, 89h, 46h, 0ECh, 0ACh, 32h
		db 0E4h, 80h, 3Eh, 92h,	2 dup(0), 74h, 8, 80h, 3Eh, 0E2h
		db 0Ah,	0, 74h,	1, 0ACh, 0E8h, 12h, 0, 6, 0A0h,	9Bh, 0
		db 8Ah,	0E0h, 0BEh, 1Eh, 0, 0FFh, 1Eh, 70h, 0, 7, 0F9h
		db 0C3h, 2 dup(0), 32h,	0C0h, 0C3h, 7 dup(0)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		sub	sp, 2Ah
		mov	ax, [bp+0Eh]
		call	sub_0_388E
		mov	[bp+0Eh], ax
		mov	word_BFD_9A, ax
		mov	ax, [bp+0Ah]
		mov	bx, [bp+8]
		call	sub_0_3840
		mov	[bp-26h], ax
		mov	ax, [bp+6]
		mov	bx, [bp+4]
		call	sub_0_3840
		mov	byte ptr [bp-2Ah], 0
		cmp	ax, [bp-26h]
		jg	loc_0_3644
		mov	byte ptr [bp-2Ah], 0FFh

loc_0_3644:				; CODE XREF: seg000:363Ej
		mov	[bp-28h], ax
		test	word ptr [bp+12h], 0FFFFh
		jnz	loc_0_3651
		inc	word ptr [bp+12h]

loc_0_3651:				; CODE XREF: seg000:364Cj
		test	word ptr [bp+10h], 0FFFFh
		jnz	loc_0_365B
		inc	word ptr [bp+10h]

loc_0_365B:				; CODE XREF: seg000:3656j
		mov	ax, [bp+10h]
		mov	bx, [bp+12h]
		cmp	ax, bx
		ja	loc_0_3667
		mov	ax, bx

loc_0_3667:				; CODE XREF: seg000:3663j
		mul	ax
		mov	bx, 64h	; 'd'
		call	sub_0_3879
		jnb	loc_0_3674
		jmp	loc_0_3745
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_3674:				; CODE XREF: seg000:366Fj
		mov	[bp-24h], ax
		mov	[bp-22h], dx
		mov	bx, [bp+12h]
		call	sub_0_3867
		call	sub_0_3867
		mov	[bp-8],	ax
		mov	[bp-6],	dx
		xor	ax, ax
		mov	[bp-2],	ax
		mov	[bp-14h], ax
		mov	[bp-12h], ax
		mov	ax, [bp-24h]
		mov	dx, [bp-22h]
		mov	bx, [bp+10h]
		mov	[bp-4],	bx
		call	sub_0_3867
		call	sub_0_3867
		mov	[bp-0Ch], ax
		mov	[bp-0Ah], dx
		call	sub_0_3879
		jnb	loc_0_36B4
		jmp	loc_0_3745
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_36B4:				; CODE XREF: seg000:36AFj
		mov	si, dx
		mov	di, ax
		call	sub_0_3879
		jnb	loc_0_36C0
		jmp	loc_0_3745
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_36C0:				; CODE XREF: seg000:36BBj
		sub	ax, [bp-24h]
		sbb	dx, [bp-22h]
		mov	[bp-10h], ax
		mov	[bp-0Eh], dx
		shl	di, 1
		rcl	si, 1
		mov	[bp-18h], di
		mov	[bp-16h], si

loc_0_36D6:				; CODE XREF: seg000:370Aj seg000:3714j
		call	sub_0_37B7
		call	sub_0_374E
		mov	ax, [bp-10h]
		mov	bx, [bp-0Eh]
		add	ax, ax
		adc	bx, bx
		add	ax, [bp-1Ch]
		adc	bx, [bp-1Ah]
		add	ax, [bp-1Ch]
		adc	bx, [bp-1Ah]
		cmp	bx, [bp-1Eh]
		jl	loc_0_3701
		jnz	loc_0_36FE
		cmp	ax, [bp-20h]
		jb	loc_0_3701

loc_0_36FE:				; CODE XREF: seg000:36F7j
		call	sub_0_3795

loc_0_3701:				; CODE XREF: seg000:36F5j seg000:36FCj
		call	sub_0_3773
		mov	ax, [bp-12h]
		cmp	ax, [bp-16h]
		jl	loc_0_36D6
		jnz	loc_0_3716
		mov	ax, [bp-14h]
		cmp	ax, [bp-18h]
		jb	loc_0_36D6

loc_0_3716:				; CODE XREF: seg000:370Cj seg000:3743j
		call	sub_0_37B7
		call	sub_0_374E
		mov	ax, [bp-1Ch]
		mov	bx, [bp-1Ah]
		shr	bx, 1
		rcr	ax, 1
		add	ax, [bp-10h]
		adc	bx, [bp-0Eh]
		cmp	bx, [bp-1Eh]
		jg	loc_0_373B
		jnz	loc_0_3738
		cmp	ax, [bp-20h]
		ja	loc_0_373B

loc_0_3738:				; CODE XREF: seg000:3731j
		call	sub_0_3773

loc_0_373B:				; CODE XREF: seg000:372Fj seg000:3736j
		call	sub_0_3795
		test	word ptr [bp-4], 8000h
		jz	loc_0_3716

loc_0_3745:				; CODE XREF: seg000:3671j seg000:36B1j ...
		mov	sp, bp
		pop	bp
		call	sub_0_38A3
		retn	14h
; [COLLAPSED FUNCTION sub_0_374E, 00000025 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3773, 00000022 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3795, 00000022 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_37B7, 00000035 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_37EC, 00000012 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_37FE:				; CODE XREF: sub_0_37B7+Ej
		call	sub_0_380F
		neg	si
		call	sub_0_380F
		neg	si
		neg	di
		call	sub_0_380F
		neg	si
; [COLLAPSED FUNCTION sub_0_380F, 00000031 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3840, 00000027 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3867, 00000012 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3879, 0000000E BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3887, 00000007 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_388E, 00000015 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_38A3, 00000017 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_38BA, 00000003 BYTES. PRESS	KEYPAD "+" TO EXPAND]
		db 6 dup(0), 3Bh, 2, 77h, 4, 0B2h, 6, 0EDh, 8, 27h, 0Bh
		db 61h,	0Dh, 99h, 0Fh, 0D0h, 11h, 6, 14h, 3Ah, 16h, 6Ch
		db 18h,	9Ch, 1Ah, 0CBh,	1Ch, 0F7h, 1Eh,	20h, 21h, 48h
		db 23h,	6Ch, 25h, 8Dh, 27h, 0ACh, 29h, 0C7h, 2Bh, 0DFh
		db 2Dh,	0F3h, 2Fh, 3, 32h, 0Fh,	34h, 18h, 36h, 1Ch, 38h
		db 1Ch,	3Ah, 17h, 3Ch, 0Eh, 3Eh, 0, 40h, 0ECh, 41h, 0D4h
		db 43h,	0B6h, 45h, 93h,	47h, 6Ah, 49h, 3Ch, 4Bh, 8, 4Dh
		db 0CDh, 4Eh, 8Dh, 50h,	46h, 52h, 0F9h,	53h, 0A6h, 55h
		db 4Bh,	57h, 0EAh, 58h,	82h, 5Ah, 13h, 5Ch, 9Ch, 5Dh, 1Fh
		db 5Fh,	9Ah, 60h, 0Dh, 62h, 79h, 63h, 0DDh, 64h, 39h, 66h
		db 8Dh,	67h, 0D9h, 68h,	1Dh, 6Ah, 59h, 6Bh, 8Ch, 6Ch, 0B7h
		db 6Dh,	0D9h, 6Eh, 0F3h, 6Fh, 4, 71h, 0Ch, 72h,	0Bh, 73h
		db 1, 74h, 0EFh, 74h, 0D3h, 75h, 0ADh, 76h, 7Fh, 77h, 47h
		db 78h,	6, 79h,	0BCh, 79h, 68h,	7Ah, 0Ah, 7Bh, 0A3h, 7Bh
		db 32h,	7Ch, 0B8h, 7Ch,	33h, 7Dh, 0A5h,	7Dh, 0Eh, 7Eh
		db 6Ch,	7Eh, 0C1h, 7Eh,	0Bh, 7Fh, 4Ch, 7Fh, 83h, 7Fh, 0B0h
		db 7Fh,	0D3h, 7Fh, 0ECh, 7Fh, 0FBh, 7Fh, 0, 80h, 55h, 83h
		db 0ECh, 0, 8Bh, 0ECh, 83h, 46h, 4, 5Ah, 0EBh, 7, 90h
		db 55h,	83h, 0ECh, 0, 8Bh, 0ECh, 0C6h, 6, 0, 10h, 0, 8Bh
		db 46h,	4, 85h,	0C0h, 7Dh, 6, 0F7h, 0D8h, 0F6h,	16h, 0
		db 10h,	33h, 0D2h, 0B9h, 68h, 1, 0F7h, 0F9h, 8Bh, 0C2h
		db 3Dh,	0B4h, 0, 7Eh, 7, 2Dh, 0B4h, 0, 0F6h, 16h, 0, 10h
		db 3Dh,	5Ah, 0,	7Eh, 5,	0F7h, 0D8h, 5, 0B4h, 0,	0D1h, 0E0h
		db 8Bh,	0F0h, 8Bh, 9Ch,	1, 10h,	8Bh, 0CBh, 33h,	0C0h, 0F8h
		db 0D1h, 0D3h, 0D1h, 0D0h, 80h,	3Eh, 0,	10h, 0,	74h, 0Ah
		db 0F7h, 0D3h, 0F7h, 0D0h, 83h,	0C3h, 1, 15h, 2	dup(0)
		db 83h,	0C4h, 0, 5Dh, 0C3h, 1Ah	dup(0)
; [COLLAPSED FUNCTION sub_0_39FC, 00000057 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3A53, 000000FA BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3B4D, 0000002C BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3B79, 00000015 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3B8E, 00000011 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3B9F, 00000011 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3BB0, 0000003F BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3BEF, 0000000E BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_3BFD, 00000023 BYTES. PRESS	KEYPAD "+" TO EXPAND]
		db 8 dup(0), 8,	4 dup(0), 32h, 0EDh, 0E3h, 0Eh,	53h, 6
		db 88h,	0Eh, 6Ch, 13h, 0E8h, 0Eh, 1, 7,	5Bh, 0E8h, 3Bh
		db 1, 0C3h, 80h, 3Eh, 6Fh, 2 dup(0), 75h, 6, 0E8h, 0Dh
		db 0, 0E9h, 16h, 0EDh, 0BEh, 24h, 0, 0FFh, 1Eh,	70h, 0
		db 0E9h, 0Ch, 0EDh, 22h, 0E4h, 79h, 28h, 80h, 3Eh, 6Fh
		db 2 dup(0), 75h, 18h, 50h, 53h, 51h, 52h, 0BEh, 24h, 0
		db 0FFh, 1Eh, 70h, 0, 0E8h, 0Ah, 0, 5Ah, 59h, 5Bh, 58h
		db 80h,	0E4h, 7Fh, 0E9h, 0DBh, 1, 89h, 1Eh, 64h, 13h, 89h
		db 0Eh,	66h, 13h, 0C3h,	0A3h, 60h, 13h,	89h, 1Eh, 64h
		db 13h,	89h, 0Eh, 66h, 13h, 0C7h, 6, 68h, 13h, 8, 0, 0C6h
		db 6, 99h, 2 dup(0), 0C7h, 6, 6Ah, 13h,	2 dup(0), 0C7h
		db 6, 68h, 15h,	2 dup(0), 80h, 3Eh, 7Ch, 0, 3, 74h, 17h
		db 22h,	0C0h, 74h, 19h,	0E8h, 4Fh, 2, 83h, 3Eh,	68h, 15h
		db 0, 74h, 0Fh,	0C6h, 6, 99h, 0, 0FFh, 89h, 1Eh, 68h, 13h
		db 0C7h, 6, 6Ah, 13h, 2	dup(0FFh), 8Bh,	1Eh, 64h, 13h
		db 8Bh,	0Eh, 66h, 13h, 80h, 3Eh, 99h, 2	dup(0),	74h, 3
		db 0E8h, 54h, 0, 0A1h, 60h, 13h, 8Bh, 16h, 62h,	13h, 80h
		db 3Eh,	99h, 2 dup(0), 74h, 5, 0E8h, 46h, 1, 0EBh, 19h
		db 0Bh,	0DBh, 75h, 5, 0BBh, 8, 0, 8Bh, 0CBh, 33h, 0D2h
		db 80h,	3Eh, 6Fh, 2 dup(0), 75h, 7, 0BEh, 24h, 0, 0FFh
		db 1Eh,	70h, 0,	89h, 1Eh, 64h, 13h, 89h, 0Eh, 66h, 13h
		db 0C3h, 2 dup(0), 3, 5, 2, 2 dup(3), 4, 2 dup(1), 4, 3
		db 5, 3, 2, 1, 5, 2, 3,	1, 4, 1, 0E8h, 6, 0, 0A1h, 60h
		db 13h,	0E9h, 3, 1, 8Bh, 1Eh, 68h, 13h,	83h, 0FBh, 0Ah
		db 72h,	3, 0BBh, 0Ah, 0, 0D0h, 0E3h, 8Bh, 9Fh, 50h, 14h
		db 8Ah,	0CFh, 32h, 0EDh, 32h, 0FFh, 0C3h, 0A1h,	0F0h, 2
		db 8Bh,	1Eh, 0F2h, 2, 53h, 8Bh,	0D8h, 80h, 3Eh,	6Ah, 13h
		db 0, 75h, 3, 0E8h, 4Fh, 0, 58h, 53h, 8Bh, 0D8h, 80h, 3Eh
		db 6Bh,	13h, 0,	75h, 3,	0E8h, 68h, 0, 58h, 0A3h, 0F0h
		db 2, 89h, 1Eh,	0F2h, 2, 0BEh, 8, 0, 0FFh, 1Eh,	70h, 0
		db 0C3h, 80h, 3Eh, 6Ah,	13h, 0,	75h, 8,	0A1h, 0F0h, 2
		db 23h,	0C0h, 79h, 1, 0C3h, 8Ah, 0Eh, 6Ch, 13h,	32h, 0EDh
		db 0A1h, 62h, 13h, 80h,	3Eh, 7Ch, 2 dup(0), 75h, 0Ah, 80h
		db 3Eh,	99h, 2 dup(0), 74h, 3, 0E9h, 46h, 3, 0BEh, 26h
		db 0, 0FFh, 1Eh, 70h, 0, 0C3h, 0A1h, 66h, 13h, 80h, 3Eh
		db 61h,	13h, 1,	74h, 10h, 80h, 3Eh, 62h, 13h, 0, 74h, 15h
		db 0A0h, 6Ch, 13h, 32h,	0E4h, 0F7h, 26h, 64h, 13h, 80h
		db 3Eh,	62h, 13h, 1, 75h, 3, 0D1h, 0E8h, 48h, 2Bh, 0D8h
		db 0C3h, 0A1h, 66h, 13h, 80h, 3Eh, 61h,	13h, 1,	75h, 9
		db 0A0h, 6Ch, 13h, 32h,	0E4h, 0F7h, 26h, 64h, 13h, 80h
		db 3Eh,	63h, 13h, 2, 74h, 0Bh, 80h, 3Eh, 63h, 13h, 1, 75h
		db 2, 0D1h, 0E8h, 2Bh, 0D8h, 0C3h, 8 dup(0), 0FFh, 0, 1
		db 0, 1, 0, 1, 0, 1, 0,	1, 0, 1, 0, 1, 0, 1, 0,	2Bh, 1Fh dup(0)
		db 80h,	3Eh, 7Ch, 0, 3,	74h, 1Bh, 88h, 26h, 41h, 15h, 3Ah
		db 6, 40h, 15h,	74h, 27h, 0A2h,	40h, 15h, 53h, 51h, 0E8h
		db 85h,	0, 59h,	5Bh, 72h, 1Bh, 0C6h, 6,	40h, 15h, 0FFh
		db 0C3h, 0A3h, 4Ah, 15h, 89h, 1Eh, 4Ch,	15h, 89h
		db 0Eh,	4Eh, 15h, 89h, 16h, 50h, 15h, 33h, 0DBh, 89h, 1Eh
		db 68h,	13h, 23h, 0DBh,	75h, 24h, 0A1h,	4Ah, 15h, 0A3h
		db 42h,	15h, 0A1h, 4Eh,	15h, 0A3h, 46h,	15h, 0A1h, 4Ch
		db 15h,	23h, 0C0h, 75h,	1, 40h,	0A3h, 44h, 15h,	0A1h, 50h
		db 15h,	23h, 0C0h, 75h,	1, 40h,	0A3h, 48h, 15h,	0EBh, 31h
		db 89h,	1Eh, 42h, 15h, 89h, 1Eh, 46h, 15h, 89h,	0Eh, 44h
		db 15h,	89h, 0Eh, 48h, 15h, 80h, 3Eh, 41h, 15h,	0, 75h
		db 1Ah,	8Bh, 1Eh, 81h, 0, 0B9h,	10h, 27h, 3Bh, 0D9h, 73h
		db 0Fh,	0F7h, 0E1h, 0F7h, 0F3h,	8Bh, 0D8h, 23h,	0DBh, 75h
		db 1, 43h, 89h,	1Eh, 42h, 15h, 0E8h, 4Bh, 0, 8Bh, 1Eh
		db 6Ah,	15h, 8Bh, 0Eh, 6Ch, 15h, 0F9h, 0C3h, 0A1h, 68h
		db 15h,	23h, 0C0h, 75h,	6, 0C6h, 6, 40h, 15h, 0FFh, 0C3h
		db 0C7h, 6, 66h, 15h, 2	dup(0),	0C5h, 36h, 66h,	15h, 0B9h
		db 10h,	0, 0BFh, 52h, 15h, 0Eh,	7, 0F3h, 0A4h, 0Eh, 1Fh
		db 80h,	3Eh, 52h, 15h, 2Bh, 0C6h, 6, 59h, 15h, 0, 0F9h
		db 74h,	1, 0F5h, 0C3h, 8Eh, 0C2h, 33h, 0F6h, 26h, 80h
		db 3Ch,	2Bh, 75h, 4, 89h, 16h, 68h, 15h, 0C3h, 0A0h, 5Ah
		db 15h,	2Ah, 6,	5Ch, 15h, 32h, 0E4h, 50h, 0F7h,	26h, 42h
		db 15h,	0F7h, 36h, 44h,	15h, 0A3h, 6Ah,	15h, 58h, 0F7h
		db 26h,	46h, 15h, 0F7h,	36h, 48h, 15h, 0A3h, 6Ch, 15h
		db 0C3h, 0E8h, 9, 0, 8Bh, 1Eh, 6Eh, 15h, 8Bh, 0Eh, 6Ch
		db 15h,	0C3h, 53h, 51h,	0E8h, 0CDh, 0FFh, 0A1h,	53h, 15h
		db 0D1h, 0E0h, 5, 10h, 0, 0C5h,	3Eh, 66h, 15h, 3, 0F8h
		db 33h,	0D2h, 0E3h, 1Eh, 26h, 8Ah, 7, 43h, 2Eh,	2Ah, 6
		db 56h,	15h, 2Eh, 3Ah, 6, 53h, 15h, 73h, 0Ch, 32h, 0E4h
		db 8Bh,	0F7h, 3, 0F0h, 2, 14h, 73h, 2, 0FEh, 0C6h, 2 dup(0E2h)
		db 0Eh,	1Fh, 8Bh, 0C2h,	0F7h, 26h, 42h,	15h, 0F7h, 36h
		db 44h,	15h, 0A3h, 6Eh,	15h, 59h, 5Bh, 0C3h, 0C7h, 6, 62h
		db 15h,	2 dup(0), 0C7h,	6, 64h,	15h, 2 dup(0), 2Ah, 6
		db 56h,	15h, 3Ah, 6, 53h, 15h, 72h, 1, 0C3h, 32h, 0E4h
		db 0D1h, 0E0h, 0C4h, 3Eh, 66h, 15h, 8Bh, 0DFh, 83h, 0C3h
		db 10h,	3, 0D8h, 26h, 3, 3Fh, 3, 3Eh, 57h, 15h,	80h, 3Eh
		db 59h,	15h, 0,	74h, 5,	0EBh, 77h, 90h,	5Fh, 7,	0E8h, 59h
		db 0, 6, 57h, 0D0h, 0E0h, 32h, 0E4h, 8Bh, 0F8h,	0FFh, 0A5h
		db 0Eh,	17h, 16h, 17h, 45h, 17h, 3Bh, 17h, 47h,	17h, 0A1h
		db 62h,	15h, 8Bh, 1Eh, 64h, 15h, 8Ah, 0Eh, 92h,	0, 80h
		db 0E1h, 1, 8Ah, 2Eh, 41h, 15h,	3Ah, 0CDh, 75h,	8, 22h
		db 0C9h, 74h, 5, 0F7h, 0D8h, 0EBh, 1, 93h, 0E8h, 0ABh
		db 1, 5Fh, 7, 0C3h, 0E8h, 93h, 0, 0A3h,	62h, 15h, 89h
		db 1Eh,	64h, 15h, 0EBh,	0B6h, 0E8h, 87h, 0, 8Bh, 0C8h
		db 8Bh,	0D3h, 87h, 0Eh,	62h, 15h, 87h, 16h, 64h, 15h, 0E8h
		db 95h,	1, 0EBh, 0A2h, 26h, 8Bh, 0Dh, 86h, 0E9h, 2 dup(47h)
		db 32h,	0C0h, 0F6h, 0C5h, 80h, 74h, 2, 4, 2, 0F6h, 0C1h
		db 80h,	74h, 2,	0FEh, 0C0h, 0C3h, 6, 57h, 33h, 0C0h, 0E8h
		db 33h,	0EDh, 5Fh, 7, 0E8h, 0DCh, 0FFh,	6, 57h,	0D0h, 0E0h
		db 32h,	0E4h, 8Bh, 0F8h, 0FFh, 95h, 8Fh, 17h, 5Fh, 7, 0EBh
		db 0EDh, 97h, 17h, 0A5h, 17h, 0B0h, 17h, 0B0h, 17h, 0FFh
		db 0Eh,	0A1h, 4, 0B8h, 3, 0, 0E8h, 0Ch,	0EDh, 58h
		db 0E9h, 71h, 0FFh, 0B8h, 3, 0,	0E8h, 2, 0EDh, 33h, 0C0h
		db 0E9h, 0FDh, 0ECh, 0E8h, 1Eh,	0, 0A3h, 62h, 15h, 89h
		db 1Eh,	64h, 15h, 0F7h,	0DBh, 80h, 3Eh,	92h, 2 dup(0)
		db 74h,	3, 0F7h, 0D8h, 93h, 3, 6, 0F0h,	2, 3, 1Eh, 0F2h
		db 2, 0E9h, 97h, 0EBh, 8Ah, 0C5h, 0E8h,	10h, 0,	0E8h, 22h
		db 0, 50h, 8Ah,	0C1h, 0E8h, 7, 0, 0E8h,	30h, 0,	8Bh, 0D8h
		db 58h,	0C3h, 33h, 0D2h, 24h, 7Fh, 8Ah,	0D8h, 32h, 0FFh
		db 24h,	40h, 74h, 6, 0FEh, 0CFh, 4Ah, 80h, 0CBh, 80h, 8Bh
		db 2 dup(0C3h),	8Bh, 1Eh, 42h, 15h, 83h, 0FBh, 1, 74h
		db 2, 0F7h, 0EBh, 8Bh, 1Eh, 44h, 15h, 83h, 0FBh, 1, 74h
		db 2, 0F7h, 0FBh, 0C3h,	8Bh, 1Eh, 46h, 15h, 83h, 0FBh
		db 1, 74h, 2, 0F7h, 0EBh, 8Bh, 1Eh, 48h, 15h, 83h, 0FBh
		db 1, 74h, 2, 0F7h, 0FBh, 0C3h,	80h, 3Eh, 40h, 15h, 0FFh
		db 74h,	45h, 0E3h, 43h,	0FFh, 36h, 9Eh,	0, 0A3h, 70h, 15h
		db 6, 53h, 0E8h, 38h, 0, 51h, 32h, 0C0h, 0B9h, 1, 0, 0E8h
		db 74h,	0EAh, 80h, 3Eh,	59h, 15h, 0, 74h, 8, 0A1h, 9Ah
		db 0, 86h, 0C4h, 0E8h, 3Ah, 0EAh, 59h, 5Bh, 7, 26h, 8Ah
		db 7, 22h, 0C0h, 74h, 0Ch, 6, 53h, 51h,	0E8h, 60h, 0FEh
		db 59h,	5Bh, 7,	43h, 0E2h, 0EDh, 58h, 50h, 0E8h, 4Ah, 0EAh
		db 8Fh,	6, 9Eh,	0, 0C3h, 51h, 0E8h, 5, 0FEh, 0E8h, 5, 0
		db 0E8h, 35h, 0, 59h, 0C3h, 0A1h, 6Eh, 15h, 80h, 3Eh, 41h
		db 15h,	0, 74h,	7, 0A1h, 6Ch, 15h, 1, 6, 0F0h, 2, 80h
		db 3Eh,	70h, 15h, 0, 74h, 1Ah, 80h, 3Eh, 70h, 15h, 1, 75h
		db 3, 0D1h, 0E8h, 48h, 80h, 3Eh, 92h, 2	dup(0),	74h, 5
		db 1, 6, 0F2h, 2, 0C3h,	29h, 6,	0F0h, 2, 0C3h, 0A1h, 6Eh
		db 15h,	80h, 3Eh, 41h, 15h, 0, 75h, 3, 0A1h, 6Ch, 15h
		db 80h,	3Eh, 71h, 15h, 0, 74h, 19h, 80h, 3Eh, 71h, 15h
		db 1, 75h, 2, 0D1h, 0E8h, 80h, 3Eh, 92h, 2 dup(0), 74h
		db 5, 1, 6, 0F0h, 2, 0C3h, 1, 6, 0F2h, 2, 0C3h,	0F7h, 0DBh
		db 1, 1Eh, 0F2h, 2, 1, 6, 0F0h,	2, 0C3h, 50h, 0A0h, 92h
		db 0, 24h, 1, 8Ah, 26h,	41h, 15h, 3Ah, 0C4h, 75h, 0Bh
		db 22h,	0C0h, 58h, 74h,	0Eh, 0F7h, 0D8h, 0F7h, 0D9h, 0EBh
		db 0Ch,	58h, 93h, 87h, 0CAh, 0F7h, 0D8h, 0F7h, 0D9h, 0F7h
		db 0DBh, 0F7h, 0DAh, 3,	6, 0F0h, 2, 3, 1Eh, 0F2h, 2, 3
		db 0Eh,	0F0h, 2, 3, 16h, 0F2h, 2, 0E8h,	16h, 0F8h, 73h
		db 7, 0BEh, 0Ch, 0, 0FFh, 1Eh, 70h, 0, 0C3h
dword_0_41F0	dd 0			; DATA XREF: __setargvw seg000:42E5r ...
word_0_41F4	dw 0			; DATA XREF: __setargv+Aw seg000:42B6r
		align 4
; [COLLAPSED FUNCTION __setargv, 0000008E BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_4286, 00000028 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_42AE:				; CODE XREF: __setargv+3Ej
					; __setargv+54j ...
		jmp	far ptr	_abort
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_0_42B3:				; CODE XREF: __setargv+77j
		pop	cx
		add	cx, dx
		mov	ds, cs:word_0_41F4
		mov	word_BFD_84, bx
		inc	bx
		add	bx, bx
		mov	si, sp
		mov	bp, sp
		sub	bp, bx
		jb	loc_0_42AE
		mov	sp, bp
		mov	word_BFD_86, bp

loc_0_42D0:				; CODE XREF: seg000:42DEj
		jcxz	loc_0_42E0
		mov	[bp+0],	si
		add	bp, 2

loc_0_42D8:				; CODE XREF: seg000:42DCj
		lods	byte ptr ss:[si]
		or	al, al
		loopne	loc_0_42D8
		jz	loc_0_42D0

loc_0_42E0:				; CODE XREF: seg000:42D0j
		xor	ax, ax
		mov	[bp+0],	ax
		jmp	cs:dword_0_41F0
; [COLLAPSED FUNCTION __setenvp, 00000050 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION LXMUL@, 00000019 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION unknown_libname_1, 00000023 BYTES. PRESS KEYPAD "+" TO EXPAND]

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_0_4376	proc near		; CODE XREF: seg043:03C4P
		jmp	dword ptr off_BFD_1470
sub_0_4376	endp

; [COLLAPSED FUNCTION sub_0_437A, 0000002D BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_0_43A7, 00000015 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __VideoInt, 0000000F BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __c0crtinit, 00000021 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION __crtinit, 000000AC BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		retf	
; [COLLAPSED FUNCTION __graphexit, 0000000E BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION LDIV@, 00000004 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

LUDIV@:
		mov	cx, 1
		jmp	short loc_0_44B8
; [COLLAPSED FUNCTION LMOD@, 0000009A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION SCOPY@, 0000001C BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg001		segment	byte public 'CODE' use16
		assume cs:seg001
		;org 6
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_main		proc far		; CODE XREF: start+11FP

var_4		= dword	ptr -4

		push	bp
		mov	bp, sp
		mov	ax, 1A2h       ; aAguargeOCarreg
		push	ax
		call	_printf
		pop	cx
		mov	ax, 1
		push	ax
		mov	ax, 1CBh        ; aAtacC_bmp
		push	ax
		call	_open
		pop	cx
		pop	cx
		mov	word_BFD_7818, ax ; handle
		mov	ax, 15Eh          ; tamanho
		push	ax
		mov	ax, 781Ah         ; destino
		push	ax
		push	word_BFD_7818
		call	_read
		add	sp, 6
		push	word_BFD_7818
		call	_close
		pop	cx
		mov	ax, 1D6h       ; aCarregamentoCo
		push	ax
		call	_printf
		pop	cx
		mov	ax, 1EFh       ; aAperteQualquer
		push	ax
		call	_printf
		pop	cx
		call	_wait_key
		mov	word_BFD_6203, 1
		mov	word_BFD_6205, 0
		push	ds
		mov	ax, 214h
		push	ax
		push	ds
		mov	ax, 6205h       ; 0 -> CGAC0
		push	ax
		push	ds
		mov	ax, 6203h       ; 1 -> CGA
		push	ax
		call	far ptr	_initgraph
		add	sp, 0Ch
		call	_intro    ; Intro
		call	_outro
		call	_instructions
		call	_speed
		call	_story
		call	_hud
		xor	ax, ax
		mov	_dr_oneup, ax
		mov	_dr_bonus, ax
		mov	_dr_powerup, ax
		mov	_enemy_count, ax
		mov	word_BFD_621C, ax
		cwd	
		push	dx
		push	ax
		fild	[bp+var_4]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fst	_score	; (emulator call)
		wait			; (emulator call)
		call	_float_to_int
		mov	_powered_up, ax
		mov	_ship_x, 98h ; ''
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah
		mov	_lives, 5
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		mov	_br_record, 0

loc_456_103:				; CODE XREF: _main+AA7j
		xor	ax, ax
		push	ax
		call	_time
		pop	cx
		push	ax
		call	_srand
		pop	cx
		call	_rand
		mov	bx, 0D6h ; 'Ö'
		cwd	
		idiv	bx
		add	dx, 0Ah
		mov	_enemy_center, dx
		xor	ax, ax
		mov	word_BFD_6274, ax
		mov	_hit_enemy, ax
		mov	dx, 4120h
		xor	ax, ax
		mov	word_BFD_6262, dx
		mov	word_BFD_6260, ax
		call	_rand
		mov	bx, 3E8h
		cwd	
		idiv	bx
		mov	ax, 64h	; 'd'
		mov	bx, _difficulty
		inc	bx
		push	dx
		cwd	
		idiv	bx
		pop	dx
		cmp	dx, ax
		jge	loc_456_197
		cmp	_dr_powerup, 0
		jnz	loc_456_197
		cmp	_dr_bonus, 0
		jnz	loc_456_197
		cmp	_dr_oneup, 0
		jnz	loc_456_197
		mov	_dr_oneup, 1
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _oneup_y+2, dx
		mov	word ptr _oneup_y, ax

loc_456_17C:				; CODE XREF: _main+18Fj
		call	_rand
		mov	bx, 0D6h ; 'Ö'
		cwd	
		idiv	bx
		add	dx, 0Ah
		mov	_oneup_x, dx
		mov	ax, _oneup_x
		cmp	ax, _enemy_center
		jz	loc_456_17C

loc_456_197:				; CODE XREF: _main+14Dj _main+154j ...
		call	_rand
		mov	bx, 3E8h
		cwd	
		idiv	bx
		mov	ax, 0C8h ; 'È'
		mov	bx, _difficulty
		inc	bx
		push	dx
		cwd	
		idiv	bx
		pop	dx
		cmp	dx, ax
		jge	loc_456_1F5
		cmp	_dr_powerup, 0
		jnz	loc_456_1F5
		cmp	_dr_bonus, 0
		jnz	loc_456_1F5
		cmp	_dr_oneup, 0
		jnz	loc_456_1F5
		mov	_dr_powerup, 1
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _pup_y+2, dx
		mov	word ptr _pup_y, ax

loc_456_1DA:				; CODE XREF: _main+1EDj
		call	_rand
		mov	bx, 0D6h ; 'Ö'
		cwd	
		idiv	bx
		add	dx, 0Ah
		mov	_pup_x, dx
		mov	ax, _pup_x
		cmp	ax, _enemy_center
		jz	loc_456_1DA

loc_456_1F5:				; CODE XREF: _main+1ABj _main+1B2j ...
		call	_rand
		mov	bx, 3E8h
		cwd	
		idiv	bx
		mov	ax, 0C8h ; 'È'
		mov	bx, _difficulty
		inc	bx
		push	dx
		cwd	
		idiv	bx
		pop	dx
		cmp	dx, ax
		jge	loc_456_253
		cmp	_dr_powerup, 0
		jnz	loc_456_253
		cmp	_dr_bonus, 0
		jnz	loc_456_253
		cmp	_dr_oneup, 0
		jnz	loc_456_253
		mov	_dr_bonus, 1
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _bonus_y+2, dx
		mov	word ptr _bonus_y, ax

loc_456_238:				; CODE XREF: _main+24Bj
		call	_rand
		mov	bx, 0D6h ; 'Ö'
		cwd	
		idiv	bx
		add	dx, 0Ah
		mov	_bonus_x, dx
		mov	ax, _bonus_x
		cmp	ax, _enemy_center
		jz	loc_456_238

loc_456_253:				; CODE XREF: _main+209j _main+210j ...
		mov	dx, 4120h
		xor	ax, ax
		mov	word ptr _enemy_y+2, dx
		mov	word ptr _enemy_y, ax
		jmp	loc_456_A49
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_262:				; CODE XREF: _main+A65j
		fld	_enemy_y	; (emulator call)
		call	_float_to_int
		mov	_e_y, ax
		cmp	_e_y, 0Ah
		jle	loc_456_297
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, _e_y
		dec	ax
		push	ax
		fld	_enemy_x	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putimage
		add	sp, 0Ah

loc_456_297:				; CODE XREF: _main+26Ej
		fld	_enemy_y	; (emulator call)
		fmul	dbl_BFD_278	; (emulator call)
		fdiv	deg_to_rad	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-8] ; (emulator call)
		wait			; (emulator call)
		call	_cos
		add	sp, 8
		fmul	dbl_BFD_288	; (emulator call)
		mov	ax, _enemy_center
		cwd	
		push	dx
		push	ax
		fild	[bp+var_4]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	_enemy_x	; (emulator call)
		wait			; (emulator call)
		fld	flt_BFD_290	; (emulator call)
		fld	_enemy_x	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_2FC
		mov	dx, 4130h
		xor	ax, ax
		mov	word ptr _enemy_x+2, dx
		mov	word ptr _enemy_x, ax

loc_456_2FC:				; CODE XREF: _main+2E8j
		fld	flt_BFD_294	; (emulator call)
		fld	_enemy_x	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jbe	loc_456_323
		mov	dx, 4360h
		xor	ax, ax
		mov	word ptr _enemy_x+2, dx
		mov	word ptr _enemy_x, ax

loc_456_323:				; CODE XREF: _main+30Fj
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		push	_e_y
		fld	_enemy_x	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putimage
		add	sp, 0Ah
		cmp	_difficulty, 0
		jnz	loc_456_34D
		jmp	loc_456_413
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_34D:				; CODE XREF: _main+342j
		call	_rand
		mov	bx, 3E8h        ; 1000
		cwd	
		idiv	bx
		cmp	dx, 32h	; '2'   ; 50
		jl	loc_456_360
		jmp	loc_456_413
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_360:				; CODE XREF: _main+355j
		cmp	_e_y, 70h ; 'p'
		jle	loc_456_36A
		jmp	loc_456_413
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_36A:				; CODE XREF: _main+35Fj
		mov	ax, _powered_up
		mov	word_BFD_6280, ax
		mov	_powered_up, 0
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 96h	; ''
		push	ax
		mov	ax, _e_y
		add	ax, 10h
		push	ax
		fld	_enemy_x	; (emulator call)
		fadd	dbl_BFD_298	; (emulator call)
		call	_float_to_int
		push	ax
		call	_draw_laser
		add	sp, 0Ah
		mov	word_BFD_6212, ax
		mov	ax, word_BFD_6280
		mov	_powered_up, ax
		cmp	word_BFD_6212, 0
		jz	loc_456_413
		mov	ax, _ship_x
		cwd	
		push	dx
		push	ax
		fild	[bp+var_4]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fld	_enemy_x	; (emulator call)
		fsubp	st(1), st	; (emulator call)
		call	_float_to_int
		cwd	
		xor	ax, dx
		sub	ax, dx
		cmp	ax, 8
		jge	loc_456_413
		mov	ax, 98h	; ''
		push	ax
		mov	ax, _ship_x
		add	ax, 8
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		dec	_lives
		mov	_ship_x, 98h ; ''
		cmp	_lives, 0
		jz	loc_456_413
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah

loc_456_413:				; CODE XREF: _main+344j _main+357j ...
		cmp	_dr_oneup, 1
		jz	loc_456_41D
		jmp	loc_456_4A4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_41D:				; CODE XREF: _main+412j
		fld	flt_BFD_2A0	; (emulator call)
		fld	_oneup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_4A4
		fld	flt_BFD_2A4	; (emulator call)
		fld	_oneup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jbe	loc_456_473
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78ECh
		push	ax
		fld	_oneup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_oneup_x
		call	_putimage
		add	sp, 0Ah

loc_456_473:				; CODE XREF: _main+44Bj
		fld	_oneup_y	; (emulator call)
		fadd	dbl_BFD_2A8	; (emulator call)
		fstp	_oneup_y	; (emulator call)
		wait			; (emulator call)
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78ECh
		push	ax
		fld	_oneup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_oneup_x
		call	_putimage
		add	sp, 0Ah

loc_456_4A4:				; CODE XREF: _main+414j _main+430j
		cmp	_dr_oneup, 1
		jnz	loc_456_4F8
		fld	flt_BFD_2A0	; (emulator call)
		fld	_oneup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jb	loc_456_4F8
		mov	_dr_oneup, 0
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78ECh
		push	ax
		fld	_oneup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_oneup_x
		call	_putimage
		add	sp, 0Ah
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _oneup_y+2, dx
		mov	word ptr _oneup_y, ax

loc_456_4F8:				; CODE XREF: _main+4A3j _main+4BEj
		cmp	_dr_powerup, 1
		jz	loc_456_502
		jmp	loc_456_589
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_502:				; CODE XREF: _main+4F7j
		fld	flt_BFD_2A0	; (emulator call)
		fld	_pup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_589
		fld	flt_BFD_2A4	; (emulator call)
		fld	_pup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jbe	loc_456_558
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78A6h
		push	ax
		fld	_pup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_pup_x
		call	_putimage
		add	sp, 0Ah

loc_456_558:				; CODE XREF: _main+530j
		fld	_pup_y	; (emulator call)
		fadd	dbl_BFD_2A8	; (emulator call)
		fstp	_pup_y	; (emulator call)
		wait			; (emulator call)
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78A6h
		push	ax
		fld	_pup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_pup_x
		call	_putimage
		add	sp, 0Ah

loc_456_589:				; CODE XREF: _main+4F9j _main+515j
		cmp	_dr_powerup, 1
		jnz	loc_456_5DD
		fld	flt_BFD_2A0	; (emulator call)
		fld	_pup_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jb	loc_456_5DD
		mov	_dr_powerup, 0
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 78A6h
		push	ax
		fld	_pup_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_pup_x
		call	_putimage
		add	sp, 0Ah
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _pup_y+2, dx
		mov	word ptr _pup_y, ax

loc_456_5DD:				; CODE XREF: _main+588j _main+5A3j
		cmp	_dr_bonus, 1
		jz	loc_456_5E7
		jmp	loc_456_66E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_5E7:				; CODE XREF: _main+5DCj
		fld	flt_BFD_2A0	; (emulator call)
		fld	_bonus_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_66E
		fld	flt_BFD_2A4	; (emulator call)
		fld	_bonus_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jbe	loc_456_63D
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7932h
		push	ax
		fld	_bonus_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_bonus_x
		call	_putimage
		add	sp, 0Ah

loc_456_63D:				; CODE XREF: _main+615j
		fld	_bonus_y	; (emulator call)
		fadd	dbl_BFD_2A8	; (emulator call)
		fstp	_bonus_y	; (emulator call)
		wait			; (emulator call)
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7932h
		push	ax
		fld	_bonus_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_bonus_x
		call	_putimage
		add	sp, 0Ah

loc_456_66E:				; CODE XREF: _main+5DEj _main+5FAj
		cmp	_dr_bonus, 1
		jnz	loc_456_6C2
		fld	flt_BFD_2A0	; (emulator call)
		fld	_bonus_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jb	loc_456_6C2
		mov	_dr_bonus, 0
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7932h
		push	ax
		fld	_bonus_y	; (emulator call)
		call	_float_to_int
		push	ax
		push	_bonus_x
		call	_putimage
		add	sp, 0Ah
		mov	dx, 4160h
		xor	ax, ax
		mov	word ptr _bonus_y+2, dx
		mov	word ptr _bonus_y, ax

loc_456_6C2:				; CODE XREF: _main+66Dj _main+688j
		mov	bx, 40h	; '@'
		mov	es, bx
		assume es:nothing
		mov	bx, 17h
		mov	al, es:[bx]
		and	al, 0Fh
		mov	byte_BFD_6207, al
		mov	al, byte_BFD_6207
		cbw	
		cmp	ax, 1
		jz	loc_456_722
		cmp	ax, 2
		jz	loc_456_6E3
		jmp	loc_456_762
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_6E3:				; CODE XREF: _main+6D8j
		cmp	_ship_x, 0Ah
		jle	loc_456_720
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah
		dec	_ship_x
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah

loc_456_720:				; CODE XREF: _main+6E2j
		jmp	short loc_456_762
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_722:				; CODE XREF: _main+6D3j
		cmp	_ship_x, 0E0h ; 'à'
		jge	loc_456_760
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah
		inc	_ship_x
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 90h	; ''
		push	ax
		push	_ship_x
		call	_putimage
		add	sp, 0Ah

loc_456_760:				; CODE XREF: _main+722j
		jmp	short $+2

loc_456_762:				; CODE XREF: _main+6DAj _main+71Aj
		mov	word_BFD_625E, 0
		test	byte_BFD_6207, 8
		jnz	loc_456_772
		jmp	loc_456_8B1	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_772:				; CODE XREF: _main+767j
		call	_shoot
		mov	word_BFD_1490, ax
		mov	ax, word_BFD_1490
		dec	ax
		cmp	ax, 3		; switch 4 cases 
		jbe	loc_456_786
		jmp	loc_456_8B1	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_786:				; CODE XREF: _main+77Bj
		mov	bx, ax
		shl	bx, 1
		jmp	cs:off_456_78F[bx] ; switch jump
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_456_78F	dw offset loc_456_797	; DATA XREF: _main+784r
		dw offset loc_456_7D9	; jump table for switch	statement
		dw offset loc_456_824
		dw offset loc_456_868
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_797:				; CODE XREF: _main+784j
					; DATA XREF: _main+789o
		mov	word_BFD_625E, 1 ; case	0
		mov	ax, _e_y
		add	ax, 8
		push	ax
		fld	_enemy_x	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call)
		call	_float_to_int
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		fld	_score	; (emulator call)
		fadd	dbl_BFD_2B8	; (emulator call) 100
		fstp	_score	; (emulator call)
		wait			; (emulator call)
		inc	_enemy_count
		mov	_hit_enemy, 1
		jmp	loc_456_8B1	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_7D9:				; CODE XREF: _main+784j
					; DATA XREF: _main+789o
		cmp	_dr_powerup, 1 ; case	0x1
		jnz	loc_456_821
		mov	word_BFD_625E, 1
		fld	_pup_y	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call) 8
		call	_float_to_int
		push	ax
		mov	ax, _pup_x
		add	ax, 8
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		fld	_score	; (emulator call)
		fadd	dbl_BFD_2C0	; (emulator call) 50
		fstp	_score	; (emulator call)
		wait			; (emulator call)
		mov	_powered_up, 1
		mov	_dr_powerup, 0

loc_456_821:				; CODE XREF: _main+7D8j
		jmp	loc_456_8B1	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_824:				; CODE XREF: _main+784j
					; DATA XREF: _main+789o
		cmp	_dr_bonus, 1 ; case	0x2
		jnz	loc_456_866
		mov	word_BFD_625E, 1
		fld	_bonus_y	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call)
		call	_float_to_int
		push	ax
		mov	ax, _bonus_x
		add	ax, 8
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		mov	_dr_bonus, 0
		fld	_score	; (emulator call)
		fadd	dbl_BFD_2C8	; (emulator call) 1000
		fstp	_score	; (emulator call)
		wait			; (emulator call)

loc_456_866:				; CODE XREF: _main+823j
		jmp	short loc_456_8B1 ; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_868:				; CODE XREF: _main+784j
					; DATA XREF: _main+789o
		cmp	_dr_oneup, 1 ; case	0x3
		jnz	loc_456_8AF
		mov	word_BFD_625E, 1
		fld	_oneup_y	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call)
		call	_float_to_int
		push	ax
		mov	ax, _oneup_x
		add	ax, 8
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		mov	_dr_oneup, 0
		fld	_score	; (emulator call)
		fadd	dbl_BFD_2D0	; (emulator call) 500.0
		fstp	_score	; (emulator call)
		wait			; (emulator call)
		add	_lives, 3

loc_456_8AF:				; CODE XREF: _main+867j
		jmp	short $+2

loc_456_8B1:				; CODE XREF: _main+769j _main+77Dj ...
		cmp	_lives, 5 ; default
		jle	loc_456_8BE
		mov	_lives, 5

loc_456_8BE:				; CODE XREF: _main+8B0j
		mov	ax, 0B2h ; '²'
		push	ax
		mov	ax, 104h
		push	ax
		mov	ax, 0A2h ; '¢'
		push	ax
		mov	ax, 0AAh ; 'ª'
		push	ax
		call	_bar
		add	sp, 8
		mov	word_BFD_622E, 0
		jmp	short loc_456_902
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_8DE:				; CODE XREF: _main+903j
		mov	ax, 2
		push	ax
		push	ds
		mov	ax, 78ECh
		push	ax
		mov	ax, 0A2h ; '¢'
		push	ax
		mov	ax, word_BFD_622E
		mov	cl, 4
		shl	ax, cl
		add	ax, 0AAh ; 'ª'
		push	ax
		call	_putimage
		add	sp, 0Ah
		inc	word_BFD_622E

loc_456_902:				; CODE XREF: _main+8D6j
		mov	ax, word_BFD_622E
		cmp	ax, _lives
		jl	loc_456_8DE
		cmp	word_BFD_625E, 0
		jnz	loc_456_915
		jmp	loc_456_A2E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_915:				; CODE XREF: _main+90Aj
		fld	_score	; (emulator call)
		fcomp	_record	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jbe	loc_456_96D
		mov	ax, 0C7h ; 'Ç'
		push	ax
		mov	ax, 0DAh ; 'Ú'
		push	ax
		mov	ax, 0BFh ; '¿'
		push	ax
		mov	ax, 0BEh ; '¾'
		push	ax
		call	_bar
		add	sp, 8
		mov	_br_record, 1
		mov	dx, word ptr _score+2
		mov	ax, word ptr _score
		mov	word ptr _record+2,	dx
		mov	word ptr _record, ax
		mov	byte_BFD_19E, 48h ; 'H'
		mov	byte_BFD_19F, 49h ; 'I'
		mov	byte_BFD_1A0, 20h ; ' '
		mov	byte_BFD_1A1, 0

loc_456_96D:				; CODE XREF: _main+925j
		mov	ax, _powered_up
		shl	ax, 1
		inc	ax
		push	ax
		call	_setcolor
		pop	cx
		push	ds
		mov	ax, 19Eh
		push	ax
		mov	ax, 0BFh ; '¿'
		push	ax
		mov	ax, 0BEh ; '¾'
		push	ax
		call	_outtextxy
		add	sp, 8
		fld	_score	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-8] ; (emulator call)
		wait			; (emulator call)
		mov	ax, 215h
		push	ax
		mov	ax, 6220h
		push	ax
		call	_sprintf
		add	sp, 0Ch
		mov	ax, 0BEh ; '¾'
		push	ax
		mov	ax, 0B4h ; '´'
		push	ax
		mov	ax, 0B4h ; '´'
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		call	_bar
		add	sp, 8
		xor	ax, ax
		push	ax
		call	_setcolor
		pop	cx
		push	ds
		mov	ax, 6220h
		push	ax
		mov	ax, 0B4h ; '´'
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 0C7h ; 'Ç'
		push	ax
		mov	ax, 0B4h ; '´'
		push	ax
		mov	ax, 0BFh ; '¿'
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		call	_bar
		add	sp, 8
		fld	_record	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-8] ; (emulator call)
		wait			; (emulator call)
		mov	ax, 21Ch
		push	ax
		mov	ax, 6220h
		push	ax
		call	_sprintf
		add	sp, 0Ch
		push	ds
		mov	ax, 6220h
		push	ax
		mov	ax, 0BFh ; '¿'
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		call	_outtextxy
		add	sp, 8

loc_456_A2E:				; CODE XREF: _main+90Cj
		push	_velocity
		call	_delay
		pop	cx
		fld	_enemy_y	; (emulator call)
		fadd	dbl_BFD_2A8	; (emulator call)
		fstp	_enemy_y	; (emulator call)
		wait			; (emulator call)

loc_456_A49:				; CODE XREF: _main+259j
		fld	flt_BFD_2A0	; (emulator call)
		fld	_enemy_y	; (emulator call)
		fcompp	st(1), st	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		ja	loc_456_A6E
		cmp	_hit_enemy, 0
		jnz	loc_456_A6E
		jmp	loc_456_262
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_A6E:				; CODE XREF: _main+A5Cj _main+A63j
		cmp	_hit_enemy, 0
		jnz	loc_456_A9F
		mov	_powered_up, 0
		dec	_lives
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 80h	; ''
		push	ax
		fld	_enemy_x	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putimage
		add	sp, 0Ah

loc_456_A9F:				; CODE XREF: _main+A6Dj
		cmp	_lives, 0
		jle	loc_456_AB0
		cmp	_enemy_count, 32h ; '2'
		jge	loc_456_AB0
		jmp	loc_456_103
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_AB0:				; CODE XREF: _main+A9Ej _main+AA5j
		push	ds
		mov	ax, 628Eh
		push	ax
		call	_gettextsettings
		pop	cx
		pop	cx
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		call	_settextjustify
		pop	cx
		pop	cx
		mov	ax, 2
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 4
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_settextstyle
		add	sp, 6
		cmp	_enemy_count, 32h ; '2'
		jnz	loc_456_B06
		push	ds
		mov	ax, 223h
		push	ax
		mov	ax, 4Bh	; 'K'
		push	ax
		mov	ax, 7Dh	; '}'
		push	ax
		call	_outtextxy
		add	sp, 8
		jmp	short loc_456_B1B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_B06:				; CODE XREF: _main+AE7j
		push	ds
		mov	ax, 22Eh
		push	ax
		mov	ax, 4Bh	; 'K'
		push	ax
		mov	ax, 7Dh	; '}'
		push	ax
		call	_outtextxy
		add	sp, 8

loc_456_B1B:				; CODE XREF: _main+AFEj
		push	word_BFD_6296
		push	word_BFD_6294
		call	_settextjustify
		pop	cx
		pop	cx
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_settextstyle
		add	sp, 6
		cmp	_br_record, 0
		jz	loc_456_B8F
		push	ds
		mov	ax, 238h
		push	ax
		mov	ax, 88h	; ''
		push	ax
		mov	ax, 18h
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 249h
		push	ax
		call	_printf
		pop	cx
		mov	ax, 6232h
		push	ax
		call	_gets
		pop	cx
		mov	_br_record, 0
		jmp	short loc_456_B88
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_B74:				; CODE XREF: _main+B87j
		mov	bx, _br_record
		mov	al, [bx+6232h]
		mov	bx, _br_record
		mov	[bx+19Eh], al
		inc	_br_record

loc_456_B88:				; CODE XREF: _main+B6Cj
		cmp	_br_record, 3
		jl	loc_456_B74

loc_456_B8F:				; CODE XREF: _main+B3Bj
		mov	ax, 1
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 3
		push	ax
		mov	ax, 2
		push	ax
		mov	ax, 96h	; ''
		push	ax
		push	ds
		mov	ax, 252h
		push	ax
		call	_puttextcentered
		add	sp, 0Ah
		call	_wait_key
		pop	bp
		retf	
_main		endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_instructions	proc far		; CODE XREF: _main+83P
		push	bp
		mov	bp, sp
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 0Ah
		push	ax
		push	ds
		mov	ax, 2D8h
		push	ax
		call	_puttextcentered
		add	sp, 0Ah
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_putimage
		add	sp, 0Ah
		push	ds
		mov	ax, 2F0h
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_putimage
		add	sp, 0Ah
		push	ds
		mov	ax, 2F9h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 78A6h
		push	ax
		mov	ax, 50h	; 'P'
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_putimage
		add	sp, 0Ah
		push	ds
		mov	ax, 30Fh
		push	ax
		mov	ax, 55h	; 'U'
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 78ECh
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_putimage
		add	sp, 0Ah
		push	ds
		mov	ax, 333h
		push	ax
		mov	ax, 69h	; 'i'
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		push	ds
		mov	ax, 7932h
		push	ax
		mov	ax, 78h	; 'x'
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_putimage
		add	sp, 0Ah
		push	ds
		mov	ax, 34Dh
		push	ax
		mov	ax, 7Dh	; '}'
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 1
		push	ax
		mov	ax, 3
		push	ax
		mov	ax, 0A0h ; ' '
		push	ax
		push	ds
		mov	ax, 360h
		push	ax
		call	_puttextcentered
		add	sp, 0Ah
		call	_wait_key
		call	_cleardevice
		pop	bp
		retf	
_instructions	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_puttextcentered	proc far		; CODE XREF: _main+BA4P
					; _instructions+13P ...

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		push	si
		push	di
		push	[bp+arg_8]
		xor	ax, ax
		push	ax
		push	[bp+arg_6]
		call	_settextstyle
		add	sp, 6
		push	[bp+arg_2]
		push	[bp+arg_0]
		call	_textwidth
		pop	cx
		pop	cx
		mov	si, ax
		call	_getmaxx
		sub	ax, si
		mov	bx, 2
		cwd	
		idiv	bx
		mov	di, ax
		push	[bp+arg_2]
		push	[bp+arg_0]
		push	[bp+arg_4]
		push	di
		call	_outtextxy
		add	sp, 8
		mov	ax, si
		jmp	short $+2
		pop	di
		pop	si
		pop	bp
		retf	
_puttextcentered	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_intro	proc far		; CODE XREF: _main+79P
		push	bp
		mov	bp, sp
		push	si
		push	di
		call	_cleardevice
		mov	ax, 3
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 37Ch
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	si, si
		jmp	short loc_456_D8D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_D5E:				; CODE XREF: _intro+69j
		xor	di, di
		jmp	short loc_456_D87
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_D62:				; CODE XREF: _intro+62j
		mov	ax, di
		add	ax, 0Ah
		push	ax
		mov	ax, si
		add	ax, 28h	; '('
		push	ax
		call	_getpixel
		pop	cx
		pop	cx
		push	ax
		mov	ax, si
		mov	dx, 19h
		mul	dx
		mov	bx, ax
		add	bx, di
		pop	ax
		mov	[bx+6298h], al
		inc	di

loc_456_D87:				; CODE XREF: _intro+38j
		cmp	di, 19h
		jl	loc_456_D62
		inc	si

loc_456_D8D:				; CODE XREF: _intro+34j
		cmp	si, 0DCh ; 'Ü'
		jl	loc_456_D5E
		call	_cleardevice
		mov	ax, 2
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 8
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 4
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 38Ch
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 14h
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	si, si
		jmp	short loc_456_E27
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_DCE:				; CODE XREF: _intro+103j
		xor	di, di
		jmp	short loc_456_E21
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_DD2:				; CODE XREF: _intro+FCj
		mov	ax, di
		add	ax, 78h	; 'x'
		push	ax
		mov	ax, si
		add	ax, 0Ah
		push	ax
		call	_getpixel
		pop	cx
		pop	cx
		push	ax
		mov	ax, si
		mov	dx, 41h	; 'A'
		mul	dx
		mov	bx, ax
		add	bx, di
		pop	ax
		mov	[bx+1492h], al
		mov	ax, si
		mov	dx, 41h	; 'A'
		mul	dx
		mov	bx, ax
		add	bx, di
		mov	al, [bx+1492h]
		cbw	
		mov	dx, 3
		sub	dx, ax
		push	dx
		mov	ax, di
		add	ax, 78h	; 'x'
		push	ax
		mov	ax, si
		add	ax, 0Ah
		push	ax
		call	_putpixel
		add	sp, 6
		inc	di

loc_456_E21:				; CODE XREF: _intro+A8j
		cmp	di, 41h	; 'A'
		jl	loc_456_DD2
		inc	si

loc_456_E27:				; CODE XREF: _intro+A4j
		cmp	si, 131h
		jl	loc_456_DCE
		call	_cleardevice
		pop	di
		pop	si
		pop	bp
		retf	
_intro	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_outro	proc far		; CODE XREF: _main+7EP

var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 6
		push	si
		push	di
		call	_cleardevice
		xor	si, si
		jmp	loc_456_F2F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_E48:				; CODE XREF: _outro+FFj
		or	si, si
		jle	loc_456_E67
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, si
		add	ax, 27h	; '''
		push	ax
		call	_putimage
		add	sp, 0Ah

loc_456_E67:				; CODE XREF: _outro+14j
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, si
		add	ax, 28h	; '('
		push	ax
		call	_putimage
		add	sp, 0Ah
		mov	ax, 3
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 1
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 0Bh
		push	ax
		mov	ax, 23h	; '#'
		push	ax
		mov	ax, si
		add	ax, 2Fh	; '/'
		push	ax
		call	_draw_laser
		add	sp, 0Ah
		mov	[bp+var_4], 19h
		jmp	loc_456_F25
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_EB2:				; CODE XREF: _outro+F5j
		mov	[bp+var_2], 0
		jmp	short loc_456_EE9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_EB9:				; CODE XREF: _outro+B7j
		xor	di, di
		jmp	short loc_456_EE1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_EBD:				; CODE XREF: _outro+AEj
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		mov	ax, [bp+var_4]
		add	ax, 0Ah
		push	ax
		mov	ax, si
		add	ax, di
		add	ax, 2Fh	; '/'
		push	ax
		call	_putpixel
		add	sp, 6
		inc	di

loc_456_EE1:				; CODE XREF: _outro+85j
		cmp	di, 2
		jl	loc_456_EBD
		inc	[bp+var_2]

loc_456_EE9:				; CODE XREF: _outro+81j
		cmp	[bp+var_2], 2
		jl	loc_456_EB9
		xor	di, di
		jmp	short loc_456_F1D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_EF3:				; CODE XREF: _outro+EAj
		mov	ax, si
		mov	dx, 19h
		mul	dx
		mov	bx, ax
		add	bx, [bp+var_4]
		mov	al, [bx+6298h]
		cbw	
		push	ax
		mov	ax, [bp+var_4]
		add	ax, 0Ah
		push	ax
		mov	ax, si
		add	ax, di
		add	ax, 2Fh	; '/'
		push	ax
		call	_putpixel
		add	sp, 6
		inc	di

loc_456_F1D:				; CODE XREF: _outro+BBj
		cmp	di, 2
		jl	loc_456_EF3
		dec	[bp+var_4]

loc_456_F25:				; CODE XREF: _outro+79j
		cmp	[bp+var_4], 0
		jle	loc_456_F2E
		jmp	loc_456_EB2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_F2E:				; CODE XREF: _outro+F3j
		inc	si

loc_456_F2F:				; CODE XREF: _outro+Fj
		cmp	si, 0DBh ; 'Û'
		jge	loc_456_F38
		jmp	loc_456_E48
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_F38:				; CODE XREF: _outro+FDj
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 102h
		push	ax
		call	_putimage
		add	sp, 0Ah
		mov	[bp+var_2], 102h
		jmp	short loc_456_FC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_F58:				; CODE XREF: _outro+195j
		cmp	[bp+var_2], 102h
		jge	loc_456_F93
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, [bp+var_2]
		inc	ax
		push	ax
		call	_putimage
		add	sp, 0Ah
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, [bp+var_2]
		inc	ax
		push	ax
		call	_putimage
		add	sp, 0Ah

loc_456_F93:				; CODE XREF: _outro+127j
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 781Ah
		push	ax
		mov	ax, 28h	; '('
		push	ax
		push	[bp+var_2]
		call	_putimage
		add	sp, 0Ah
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		push	[bp+var_2]
		call	_putimage
		add	sp, 0Ah
		dec	[bp+var_2]

loc_456_FC6:				; CODE XREF: _outro+120j
		cmp	[bp+var_2], 98h	; ''
		jge	loc_456_F58
		mov	ax, 1
		push	ax
		mov	ax, 0FFFFh
		push	ax
		mov	ax, 27h	; '''
		push	ax
		mov	ax, 3Ah	; ':'
		push	ax
		mov	ax, 0A0h ; ' '
		push	ax
		call	_draw_laser
		add	sp, 0Ah
		mov	ax, 30h	; '0'
		push	ax
		mov	ax, 0A0h ; ' '
		push	ax
		call	_circ_explosion
		pop	cx
		pop	cx
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 98h	; ''
		push	ax
		call	_putimage
		add	sp, 0Ah
		xor	di, di
		jmp	loc_456_10D9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1016:				; CODE XREF: _outro+2A9j
		or	di, di
		jle	loc_456_1034
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, di
		inc	ax
		inc	ax
		push	ax
		call	_putimage
		add	sp, 0Ah

loc_456_1034:				; CODE XREF: _outro+1E2j
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, di
		add	ax, 3
		push	ax
		call	_putimage
		add	sp, 0Ah
		mov	si, 41h	; 'A'
		jmp	loc_456_10D1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1055:				; CODE XREF: _outro+29Fj
		mov	[bp+var_2], 0
		jmp	short loc_456_10A5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_105C:				; CODE XREF: _outro+273j
		call	_rand
		mov	bx, 3
		cwd	
		idiv	bx
		inc	dx
		push	dx
		mov	ax, si
		add	ax, 78h	; 'x'
		push	ax
		mov	ax, di
		add	ax, 0Ah
		push	ax
		call	_putpixel
		add	sp, 6
		call	_rand
		mov	bx, 1F4h
		cwd	
		idiv	bx
		add	dx, 12Ch
		push	dx
		call	_sound
		pop	cx
		mov	ax, 1
		push	ax
		call	_delay
		pop	cx
		call	_nosound
		inc	[bp+var_2]

loc_456_10A5:				; CODE XREF: _outro+224j
		cmp	[bp+var_2], 5
		jl	loc_456_105C
		mov	ax, di
		mov	dx, 41h	; 'A'
		mul	dx
		mov	bx, ax
		add	bx, si
		mov	al, [bx+1492h]
		cbw	
		push	ax
		mov	ax, si
		add	ax, 78h	; 'x'
		push	ax
		mov	ax, di
		add	ax, 0Ah
		push	ax
		call	_putpixel
		add	sp, 6
		dec	si

loc_456_10D1:				; CODE XREF: _outro+21Cj
		or	si, si
		jl	loc_456_10D8
		jmp	loc_456_1055
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_10D8:				; CODE XREF: _outro+29Dj
		inc	di

loc_456_10D9:				; CODE XREF: _outro+1DDj
		cmp	di, 130h
		jge	loc_456_10E2
		jmp	loc_456_1016
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_10E2:				; CODE XREF: _outro+2A7j
		mov	ax, 1
		push	ax
		push	ds
		mov	ax, 7860h
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 132h
		push	ax
		call	_putimage
		add	sp, 0Ah
		mov	ax, 3
		push	ax
		call	_setcolor
		pop	cx
		call	_wait_key
		xor	ax, ax
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 13Fh
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		xor	ax, ax
		push	ax
		call	_line
		add	sp, 8
		mov	[bp+var_6], 0
		jmp	short loc_456_1166
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1131:				; CODE XREF: _outro+334j
		push	[bp+var_6]
		mov	ax, 13Fh
		push	ax
		push	[bp+var_6]
		xor	ax, ax
		push	ax
		call	_line
		add	sp, 8
		mov	ax, 0C8h ; 'È'
		sub	ax, [bp+var_6]
		push	ax
		mov	ax, 13Fh
		push	ax
		mov	ax, 0C8h ; 'È'
		sub	ax, [bp+var_6]
		push	ax
		xor	ax, ax
		push	ax
		call	_line
		add	sp, 8
		inc	[bp+var_6]

loc_456_1166:				; CODE XREF: _outro+2F9j
		cmp	[bp+var_6], 64h	; 'd'
		jl	loc_456_1131
		mov	ax, 3
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 2
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 28h	; '('
		push	ax
		push	ds
		mov	ax, 394h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		mov	si, ax
		push	ds
		mov	ax, 3ADh
		push	ax
		call	_textheight
		pop	cx
		pop	cx
		mov	[bp+var_4], ax
		mov	ax, [bp+var_4]
		add	ax, 2Ah	; '*'
		mov	[bp+var_6], ax
		mov	ax, 2
		push	ax
		mov	ax, 4
		push	ax
		push	[bp+var_6]
		push	ds
		mov	ax, 3AFh
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		mov	ax, 2
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, [bp+var_6]
		add	ax, [bp+var_4]
		inc	ax
		inc	ax
		push	ax
		push	ds
		mov	ax, 3C0h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		mov	ax, 3
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 96h	; ''
		push	ax
		push	ds
		mov	ax, 3D2h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		call	_wait_key
		call	_cleardevice
		mov	ax, 2
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 5
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 14h
		push	ax
		push	ds
		mov	ax, 3E1h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		push	ds
		mov	ax, 3E8h
		push	ax
		call	_textheight
		pop	cx
		pop	cx
		mov	si, ax
		mov	ax, si
		add	ax, 17h
		push	ax
		mov	ax, 12Ch
		push	ax
		mov	ax, si
		add	ax, 17h
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_line
		add	sp, 8
		mov	ax, si
		add	ax, 1Ah
		push	ax
		mov	ax, 12Ch
		push	ax
		mov	ax, si
		add	ax, 1Ah
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_line
		add	sp, 8
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 3EAh
		push	ax
		call	_textheight
		pop	cx
		pop	cx
		mov	[bp+var_4], ax
		mov	ax, 3
		push	ax
		call	_setcolor
		pop	cx
		push	ds
		mov	ax, 3ECh
		push	ax
		mov	ax, 50h	; 'P'
		push	ax
		mov	ax, 5
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 416h
		push	ax
		mov	ax, [bp+var_4]
		add	ax, 52h	; 'R'
		push	ax
		mov	ax, 5
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 438h
		push	ax
		mov	ax, [bp+var_4]
		shl	ax, 1
		add	ax, 54h	; 'T'
		push	ax
		mov	ax, 5
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 96h	; ''
		push	ax
		push	ds
		mov	ax, 45Eh
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		call	_wait_key
		call	_cleardevice
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
_outro	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_wait_key	proc far		; CODE XREF: _main+51P	_main+BACP ...
		push	bp
		mov	bp, sp
		push	si
		call	_getch
		mov	si, ax
		or	si, si
		jnz	loc_456_1315
		call	_getch
		mov	si, ax

loc_456_1315:				; CODE XREF: _wait_key+Dj
		cmp	si, 3
		jnz	loc_456_1328
		call	_closegraph
		xor	ax, ax
		push	ax
		call	far ptr	_exit
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		pop	cx

loc_456_1328:				; CODE XREF: _wait_key+19j
		pop	si
		pop	bp
		retf	
_wait_key	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_hud	proc far		; CODE XREF: _main+92P
		push	bp
		mov	bp, sp
		call	_cleardevice
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		mov	ax, 0C7h ; 'Ç'
		push	ax
		mov	ax, 13Fh
		push	ax
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_bar
		add	sp, 8
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		mov	ax, 0A0h ; ' '
		push	ax
		mov	ax, 0F0h ; 'ğ'
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 0Ah
		push	ax
		call	_bar
		add	sp, 8
		xor	ax, ax
		push	ax
		call	_setcolor
		pop	cx
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 481h
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 10Eh
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 4
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 491h
		push	ax
		xor	ax, ax
		push	ax
		mov	ax, 122h
		push	ax
		call	_outtextxy
		add	sp, 8
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 499h
		push	ax
		mov	ax, 0B4h ; '´'
		push	ax
		mov	ax, 14h
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 4A1h
		push	ax
		mov	ax, 0BFh ; '¿'
		push	ax
		mov	ax, 14h
		push	ax
		call	_outtextxy
		add	sp, 8
		pop	bp
		retf	
_hud	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_check_collision	proc far		; CODE XREF: _shoot+EBp
		push	bp
		mov	bp, sp
		push	si
		fld	_enemy_y	; (emulator call)
		call	_float_to_int
		mov	si, ax
		cmp	_dr_bonus, 0
		jz	loc_456_1480
		fld	_bonus_y	; (emulator call)
		fcomp	_enemy_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1480
		fld	_bonus_y	; (emulator call)
		fcomp	_pup_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1480
		fld	_bonus_y	; (emulator call)
		fcomp	_oneup_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1480
		fld	_bonus_y	; (emulator call)
		call	_float_to_int
		mov	si, ax

loc_456_1480:				; CODE XREF: _check_collision+15j
					; _check_collision+2Dj ...
		cmp	_dr_powerup, 0
		jz	loc_456_14DB
		fld	_pup_y	; (emulator call)
		fcomp	_enemy_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_14DB
		fld	_pup_y	; (emulator call)
		fcomp	_bonus_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_14DB
		fld	_pup_y	; (emulator call)
		fcomp	_oneup_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_14DB
		fld	_pup_y	; (emulator call)
		call	_float_to_int
		mov	si, ax

loc_456_14DB:				; CODE XREF: _check_collision+70j
					; _check_collision+88j ...
		cmp	_dr_oneup, 0
		jz	loc_456_1536
		fld	_oneup_y	; (emulator call)
		fcomp	_enemy_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1536
		fld	_oneup_y	; (emulator call)
		fcomp	_pup_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1536
		fld	_oneup_y	; (emulator call)
		fcomp	_bonus_y	; (emulator call)
		fnstsw	_fpu_flag_mask	; (emulator call)
		wait			; (emulator call)
		mov	ah, byte ptr _fpu_flag_mask+1
		sahf	
		jnb	loc_456_1536
		fld	_oneup_y	; (emulator call)
		call	_float_to_int
		mov	si, ax

loc_456_1536:				; CODE XREF: _check_collision+CBj
					; _check_collision+E3j ...
		mov	ax, si
		jmp	short $+2
		pop	si
		pop	bp
		retf	
_check_collision	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_draw_laser	proc far		; CODE XREF: _main+393P
					; _outro+6CP ...

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh

		push	bp
		mov	bp, sp
		sub	sp, 4
		push	si
		push	di
		mov	di, [bp+arg_0]
		mov	[bp+var_2], 0
		mov	si, [bp+arg_2]
		add	si, 8
		jmp	loc_456_164A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1556:				; CODE XREF: _draw_laser+120j
		mov	[bp+var_4], 0
		jmp	loc_456_163E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_155E:				; CODE XREF: _draw_laser+107j
		cmp	_powered_up, 0
		jz	loc_456_15C8
		push	si
		mov	ax, _ship_x
		add	ax, 3
		push	ax
		call	_getpixel
		pop	cx
		pop	cx
		or	ax, ax
		jnz	loc_456_158B
		push	si
		mov	ax, _ship_x
		add	ax, 0Ch
		push	ax
		call	_getpixel
		pop	cx
		pop	cx
		or	ax, ax
		jz	loc_456_1590

loc_456_158B:				; CODE XREF: _draw_laser+39j
		mov	[bp+var_2], 1

loc_456_1590:				; CODE XREF: _draw_laser+4Cj
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		push	si
		mov	ax, _ship_x
		add	ax, 3
		push	ax
		call	_putpixel
		add	sp, 6
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		push	si
		mov	ax, _ship_x
		add	ax, 0Ch
		push	ax
		call	_putpixel
		add	sp, 6

loc_456_15C8:				; CODE XREF: _draw_laser+26j
		push	[bp+arg_2]
		push	si
		mov	ax, [bp+arg_6]
		neg	ax
		push	ax
		call	_comp_cond
		add	sp, 6
		or	ax, ax
		jz	loc_456_1610
		push	si
		mov	ax, di
		add	ax, [bp+var_4]
		push	ax
		call	_getpixel
		pop	cx
		pop	cx
		or	ax, ax
		jz	loc_456_15F5
		mov	[bp+var_2], 1

loc_456_15F5:				; CODE XREF: _draw_laser+B1j
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		push	si
		mov	ax, di
		add	ax, [bp+var_4]
		push	ax
		call	_putpixel
		add	sp, 6

loc_456_1610:				; CODE XREF: _draw_laser+9Fj
		cmp	[bp+arg_8], 0
		jz	loc_456_163B
		call	_rand
		mov	bx, 1F4h
		cwd	
		idiv	bx
		add	dx, 12Ch
		push	dx
		call	_sound
		pop	cx
		mov	ax, 1
		push	ax
		call	_delay
		pop	cx
		call	_nosound

loc_456_163B:				; CODE XREF: _draw_laser+D7j
		inc	[bp+var_4]

loc_456_163E:				; CODE XREF: _draw_laser+1Ej
		cmp	[bp+var_4], 2
		jge	loc_456_1647
		jmp	loc_456_155E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1647:				; CODE XREF: _draw_laser+105j
		add	si, [bp+arg_6]

loc_456_164A:				; CODE XREF: _draw_laser+16j
		push	[bp+arg_4]
		push	si
		push	[bp+arg_6]
		call	_comp_cond
		add	sp, 6
		or	ax, ax
		jz	loc_456_1660
		jmp	loc_456_1556
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1660:				; CODE XREF: _draw_laser+11Ej
		call	_getcolor
		mov	si, ax
		xor	ax, ax
		push	ax
		call	_setcolor
		pop	cx
		push	[bp+arg_4]
		push	di
		push	[bp+arg_2]
		push	di
		call	_line
		add	sp, 8
		push	[bp+arg_4]
		mov	ax, di
		inc	ax
		push	ax
		push	[bp+arg_2]
		mov	ax, di
		inc	ax
		push	ax
		call	_line
		add	sp, 8
		cmp	_powered_up, 0
		jz	loc_456_16DD
		push	[bp+arg_4]
		mov	ax, _ship_x
		add	ax, 3
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 8
		push	ax
		mov	ax, _ship_x
		add	ax, 3
		push	ax
		call	_line
		add	sp, 8
		push	[bp+arg_4]
		mov	ax, _ship_x
		add	ax, 0Ch
		push	ax
		mov	ax, [bp+arg_2]
		add	ax, 8
		push	ax
		mov	ax, _ship_x
		add	ax, 0Ch
		push	ax
		call	_line
		add	sp, 8

loc_456_16DD:				; CODE XREF: _draw_laser+15Ej
		push	si
		call	_setcolor
		pop	cx
		mov	ax, [bp+var_2]
		jmp	short $+2
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
_draw_laser	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_comp_cond	proc far		; CODE XREF: _draw_laser+95P
					; _draw_laser+114P

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah

		push	bp
		mov	bp, sp
		cmp	[bp+arg_0], 0
		jge	loc_456_1709
		mov	ax, [bp+arg_2]
		cmp	ax, [bp+arg_4]
		jl	loc_456_1705
		mov	ax, 1
		jmp	short loc_456_1707
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1705:				; CODE XREF: _comp_cond+Fj
		xor	ax, ax

loc_456_1707:				; CODE XREF: _comp_cond+14j
		jmp	short loc_456_1718
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1709:				; CODE XREF: _comp_cond+7j
		mov	ax, [bp+arg_2]
		cmp	ax, [bp+arg_4]
		jg	loc_456_1716
		mov	ax, 1
		jmp	short loc_456_1718
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1716:				; CODE XREF: _comp_cond+20j
		xor	ax, ax

loc_456_1718:				; CODE XREF: _comp_cond+18j
					; _comp_cond+25j
		jmp	short $+2
		pop	bp
		retf	
_comp_cond	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_circ_explosion	proc far		; CODE XREF: _main+3DCP _main+7AEP ...

var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= word ptr  6
arg_2		= word ptr  8

		push	bp
		mov	bp, sp
		sub	sp, 14h
		push	si
		push	di
		xor	si, si
		jmp	loc_456_18A3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1729:				; CODE XREF: _circ_explosion+18Cj
		xor	di, di
		jmp	loc_456_189A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_172E:				; CODE XREF: _circ_explosion+183j
		mov	ax, di
		mov	dx, 18h
		mul	dx
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fdiv	deg_to_rad	; (emulator call)
		fstp	[bp+var_14]	; (emulator call)
		wait			; (emulator call)
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_cos
		add	sp, 8
		mov	ax, si
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_0]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_10]	; (emulator call)
		wait			; (emulator call)
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_sin
		add	sp, 8
		mov	ax, si
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_2]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_C]	; (emulator call)
		wait			; (emulator call)
		cmp	si, 2
		jg	loc_456_17D0
		jmp	loc_456_1871
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_17D0:				; CODE XREF: _circ_explosion+AFj
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_cos
		add	sp, 8
		mov	ax, si
		add	ax, 0FFFEh
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_0]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_8]	; (emulator call)
		wait			; (emulator call)
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_sin
		add	sp, 8
		mov	ax, si
		add	ax, 0FFFEh
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_2]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_4]	; (emulator call)
		wait			; (emulator call)
		xor	ax, ax
		push	ax
		fld	[bp+var_4]	; (emulator call)
		call	_float_to_int
		push	ax
		fld	[bp+var_8]	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putpixel
		add	sp, 6

loc_456_1871:				; CODE XREF: _circ_explosion+B1j
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		fld	[bp+var_C]	; (emulator call)
		call	_float_to_int
		push	ax
		fld	[bp+var_10]	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putpixel
		add	sp, 6
		inc	di

loc_456_189A:				; CODE XREF: _circ_explosion+Fj
		cmp	di, 0Fh
		jge	loc_456_18A2
		jmp	loc_456_172E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_18A2:				; CODE XREF: _circ_explosion+181j
		inc	si

loc_456_18A3:				; CODE XREF: _circ_explosion+Aj
		cmp	si, 8
		jg	loc_456_18AB
		jmp	loc_456_1729
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_18AB:				; CODE XREF: _circ_explosion+18Aj
		mov	si, 6
		jmp	loc_456_1979
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_18B1:				; CODE XREF: _circ_explosion+262j
		xor	di, di
		jmp	loc_456_1970
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_18B6:				; CODE XREF: _circ_explosion+259j
		mov	ax, di
		mov	dx, 18h
		mul	dx
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fdiv	deg_to_rad	; (emulator call)
		fstp	[bp+var_14]	; (emulator call)
		wait			; (emulator call)
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_cos
		add	sp, 8
		mov	ax, si
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_0]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_10]	; (emulator call)
		wait			; (emulator call)
		fld	[bp+var_14]	; (emulator call)
		sub	sp, 8
		fstp	qword ptr [bp-20h] ; (emulator call)
		wait			; (emulator call)
		call	_sin
		add	sp, 8
		mov	ax, si
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fmulp	st(1), st	; (emulator call)
		mov	ax, [bp+arg_2]
		cwd	
		push	dx
		push	ax
		fild	[bp+var_1C]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		faddp	st(1), st	; (emulator call)
		fstp	[bp+var_C]	; (emulator call)
		wait			; (emulator call)
		xor	ax, ax
		push	ax
		fld	[bp+var_C]	; (emulator call)
		call	_float_to_int
		push	ax
		fld	[bp+var_10]	; (emulator call)
		call	_float_to_int
		push	ax
		call	_putpixel
		add	sp, 6
		inc	di

loc_456_1970:				; CODE XREF: _circ_explosion+197j
		cmp	di, 0Fh
		jge	loc_456_1978
		jmp	loc_456_18B6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1978:				; CODE XREF: _circ_explosion+257j
		inc	si

loc_456_1979:				; CODE XREF: _circ_explosion+192j
		cmp	si, 8
		jg	loc_456_1981
		jmp	loc_456_18B1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1981:				; CODE XREF: _circ_explosion+260j
		call	_getcolor
		mov	di, ax
		xor	ax, ax
		push	ax
		call	_setcolor
		pop	cx
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		xor	si, si
		jmp	short loc_456_1A13
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_19A3:				; CODE XREF: _circ_explosion+2FAj
		xor	di, di
		jmp	short loc_456_19DF
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_19A7:				; CODE XREF: _circ_explosion+2C6j
		call	_rand
		mov	bx, 4
		cwd	
		idiv	bx
		push	dx
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		mov	ax, [bp+arg_2]
		add	ax, si
		push	ax
		mov	ax, [bp+arg_0]
		add	ax, si
		push	ax
		mov	ax, [bp+arg_2]
		sub	ax, si
		push	ax
		mov	ax, [bp+arg_0]
		sub	ax, si
		push	ax
		call	_bar
		add	sp, 8
		inc	di

loc_456_19DF:				; CODE XREF: _circ_explosion+289j
		cmp	di, 10h
		jl	loc_456_19A7
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		mov	ax, [bp+arg_2]
		add	ax, si
		push	ax
		mov	ax, [bp+arg_0]
		add	ax, si
		push	ax
		mov	ax, [bp+arg_2]
		sub	ax, si
		push	ax
		mov	ax, [bp+arg_0]
		sub	ax, si
		push	ax
		call	_bar
		add	sp, 8
		inc	si

loc_456_1A13:				; CODE XREF: _circ_explosion+285j
		cmp	si, 8
		jle	loc_456_19A3
		push	di
		call	_setcolor
		pop	cx
		mov	ax, 2
		push	ax
		mov	ax, 1
		push	ax
		call	_setfillstyle
		pop	cx
		pop	cx
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
_circ_explosion	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_shoot	proc far		; CODE XREF: _main+76CP

var_18		= dword	ptr -18h
var_10		= word ptr -10h
var_E		= word ptr -0Eh
var_C		= word ptr -0Ch
var_A		= word ptr -0Ah
var_8		= word ptr -8
var_6		= word ptr -6
var_4		= word ptr -4
var_2		= word ptr -2

		push	bp
		mov	bp, sp
		sub	sp, 10h
		push	si
		push	di
		mov	ax, _ship_x
		add	ax, 8
		cwd	
		push	dx
		push	ax
		fild	[bp+var_18]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fld	_enemy_x	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call)
		fsubp	st(1), st	; (emulator call)
		call	_float_to_int
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_10], ax
		mov	ax, _ship_x
		add	ax, 8
		mov	dx, _pup_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_E], ax
		mov	ax, _ship_x
		add	ax, 8
		mov	dx, _bonus_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_C], ax
		mov	ax, _ship_x
		add	ax, 8
		mov	dx, _oneup_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_A], ax
		mov	ax, _ship_x
		add	ax, 3
		cwd	
		push	dx
		push	ax
		fild	[bp+var_18]	; (emulator call)
		wait			; (emulator call)
		add	sp, 4
		fld	_enemy_x	; (emulator call)
		fadd	dbl_BFD_2B0	; (emulator call)
		fsubp	st(1), st	; (emulator call)
		call	_float_to_int
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_8], ax
		mov	ax, _ship_x
		add	ax, 3
		mov	dx, _pup_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_6], ax
		mov	ax, _ship_x
		add	ax, 3
		mov	dx, _bonus_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_4], ax
		mov	ax, _ship_x
		add	ax, 3
		mov	dx, _oneup_x
		add	dx, 8
		sub	ax, dx
		cwd	
		xor	ax, dx
		sub	ax, dx
		mov	[bp+var_2], ax
		push	cs
		call	near ptr _check_collision
		mov	di, ax
		mov	ax, 1
		push	ax
		mov	ax, 0FFFFh
		push	ax
		push	di
		mov	ax, 90h	; ''
		push	ax
		mov	ax, _ship_x
		add	ax, 7
		push	ax
		push	cs
		call	near ptr _draw_laser
		add	sp, 0Ah
		or	ax, ax
		jz	loc_456_1B7A
		xor	si, si
		jmp	short loc_456_1B75
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1B47:				; CODE XREF: _shoot+144j
		mov	bx, si
		shl	bx, 1
		lea	ax, [bp+var_10]
		add	bx, ax
		cmp	word ptr [bx], 8
		jg	loc_456_1B5A
		mov	ax, si
		inc	ax
		jmp	short loc_456_1B7E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1B5A:				; CODE XREF: _shoot+11Fj
		cmp	_powered_up, 0
		jz	loc_456_1B74
		mov	bx, si
		shl	bx, 1
		lea	ax, [bp+var_8]
		add	bx, ax
		cmp	word ptr [bx], 8
		jg	loc_456_1B74
		mov	ax, si
		inc	ax
		jmp	short loc_456_1B7E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1B74:				; CODE XREF: _shoot+12Bj
					; _shoot+139j
		inc	si

loc_456_1B75:				; CODE XREF: _shoot+111j
		cmp	si, 4
		jl	loc_456_1B47

loc_456_1B7A:				; CODE XREF: _shoot+10Dj
		xor	ax, ax
		jmp	short $+2

loc_456_1B7E:				; CODE XREF: _shoot+124j
					; _shoot+13Ej
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
_shoot	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_story	proc far		; CODE XREF: _main+8DP
		push	bp
		mov	bp, sp
		call	_cleardevice
		push	ds
		mov	ax, 628Eh
		push	ax
		call	_gettextsettings
		pop	cx
		pop	cx
		mov	ax, 1
		push	ax
		call	_setcolor
		pop	cx
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_settextjustify
		pop	cx
		pop	cx
		mov	ax, 1
		push	ax
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_settextstyle
		add	sp, 6
		push	ds
		mov	ax, 4A9h
		push	ax
		mov	ax, 0Ah
		push	ax
		mov	ax, 0A0h ; ' '
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		xor	ax, ax
		push	ax
		call	_settextjustify
		pop	cx
		pop	cx
		push	ds
		mov	ax, 4B4h
		push	ax
		mov	ax, 14h
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 4D6h
		push	ax
		mov	ax, 1Ch
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 4F9h
		push	ax
		mov	ax, 24h	; '$'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 51Dh
		push	ax
		mov	ax, 2Ch	; ','
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 541h
		push	ax
		mov	ax, 34h	; '4'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 562h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 584h
		push	ax
		mov	ax, 44h	; 'D'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 5A7h
		push	ax
		mov	ax, 4Ch	; 'L'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 5CAh
		push	ax
		mov	ax, 54h	; 'T'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 5EFh
		push	ax
		mov	ax, 5Ch	; '\'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 614h
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 638h
		push	ax
		mov	ax, 6Ch	; 'l'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 65Ch
		push	ax
		mov	ax, 74h	; 't'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 681h
		push	ax
		mov	ax, 7Ch	; '|'
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 6A6h
		push	ax
		mov	ax, 84h	; ''
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 6CEh
		push	ax
		mov	ax, 8Ch	; ''
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 6F4h
		push	ax
		mov	ax, 94h	; ''
		push	ax
		mov	ax, 2
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 713h
		push	ax
		mov	ax, 9Ch	; ''
		push	ax
		mov	ax, 2Ah	; '*'
		push	ax
		call	_outtextxy
		add	sp, 8
		xor	ax, ax
		push	ax
		mov	ax, 1
		push	ax
		call	_settextjustify
		pop	cx
		pop	cx
		push	ds
		mov	ax, 72Dh
		push	ax
		mov	ax, 0AAh ; 'ª'
		push	ax
		mov	ax, 0A0h ; ' '
		push	ax
		call	_outtextxy
		add	sp, 8
		push	cs
		call	near ptr _wait_key
		push	word_BFD_6296
		push	word_BFD_6294
		call	_settextjustify
		pop	cx
		pop	cx
		pop	bp
		retf	
_story	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_speed	proc far		; CODE XREF: _main+88P
		push	bp
		mov	bp, sp
		push	si
		call	_cleardevice
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 14h
		push	ax
		push	ds
		mov	ax, 756h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		push	ds
		mov	ax, 76Dh
		push	ax
		mov	ax, 28h	; '('
		push	ax
		mov	ax, 0Fh
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 776h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 0Fh
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 77Fh
		push	ax
		mov	ax, 50h	; 'P'
		push	ax
		mov	ax, 0Fh
		push	ax
		call	_outtextxy
		add	sp, 8
		call	_getch
		mov	si, ax
		cmp	si, 31h	; '1'
		jl	loc_456_1E17
		cmp	si, 33h	; '3'
		jg	loc_456_1E17
		mov	bx, si
		add	bx, 0FFCFh
		shl	bx, 1
		mov	ax, [bx+194h]
		mov	_velocity, ax
		jmp	short loc_456_1E1D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1E17:				; CODE XREF: _speed+6Aj
					; _speed+6Fj
		mov	_velocity, 1Eh

loc_456_1E1D:				; CODE XREF: _speed+7Fj
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 8Ch	; ''
		push	ax
		push	ds
		mov	ax, 789h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		push	cs
		call	near ptr _wait_key
		call	_level
		pop	si
		pop	bp
		retf	
_speed	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_level	proc far		; CODE XREF: _speed+A3P
		push	bp
		mov	bp, sp
		push	si
		call	_cleardevice
		mov	ax, 4
		push	ax
		mov	ax, 4
		push	ax
		mov	ax, 14h
		push	ax
		push	ds
		mov	ax, 7A2h
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		push	ds
		mov	ax, 7B8h
		push	ax
		mov	ax, 3Ch	; '<'
		push	ax
		mov	ax, 14h
		push	ax
		call	_outtextxy
		add	sp, 8
		push	ds
		mov	ax, 7C1h
		push	ax
		mov	ax, 64h	; 'd'
		push	ax
		mov	ax, 14h
		push	ax
		call	_outtextxy
		add	sp, 8
		call	_getch
		mov	si, ax
		cmp	si, 31h	; '1'
		jz	loc_456_1E9D
		cmp	si, 32h	; '2'
		jnz	loc_456_1EA7

loc_456_1E9D:				; CODE XREF: _level+55j
		mov	ax, si
		add	ax, 0FFCFh
		mov	_difficulty, ax
		jmp	short loc_456_1EAD
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_456_1EA7:				; CODE XREF: _level+5Aj
		mov	_difficulty, 0

loc_456_1EAD:				; CODE XREF: _level+64j
		mov	ax, 1
		push	ax
		mov	ax, 1
		push	ax
		mov	ax, 8Ch	; ''
		push	ax
		push	ds
		mov	ax, 7CCh
		push	ax
		push	cs
		call	near ptr _puttextcentered
		add	sp, 0Ah
		pop	si
		pop	bp
		retf	
_level	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
seg001		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg002		segment	byte public 'CODE' use16
		assume cs:seg002
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 87h,	0E2h, 0, 0Ch, 18h, 24h,	30h, 3Ch, 48h, 54h, 60h
		db 6Ch,	78h, 84h, 90h, 9Ch, 0A8h, 0B4h,	7 dup(0), 80h
		db 1, 3	dup(0)
; [COLLAPSED FUNCTION sub_643_1E, 00000005 BYTES. PRESS	KEYPAD "+" TO EXPAND]
		db 0FEh, 8Ah, 1Bh, 0CDh, 4Bh, 78h, 9Ah,	0D4h, 2, 3 dup(0)
		db 0B8h, 23h, 0, 0EBh, 53h, 0BBh, 0F0h,	17h, 5Ch, 29h
		db 3Bh,	0AAh, 0B8h, 1, 3 dup(0), 0B8h, 34h, 0, 0EBh, 42h
		db 35h,	0C2h, 68h, 21h,	0A2h, 0DAh, 0Fh, 0C9h, 2, 3 dup(0)
		db 0B8h, 45h, 0, 0EBh, 31h, 99h, 0F7h, 0CFh, 0FBh, 84h
		db 9Ah,	20h, 9Ah, 2 dup(0FFh), 2 dup(0), 0B8h, 56h, 0
		db 0EBh, 20h, 0ACh, 79h, 0CFh, 0D1h, 0F7h, 17h,	72h, 0B1h
		db 4 dup(0), 0B8h, 67h,	0, 0EBh, 0Fh, 8	dup(0),	1, 0C0h
		db 2 dup(0)
; [COLLAPSED FUNCTION sub_643_84, 00000015 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_99, 00000012 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_AB, 00000019 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_C4, 0000001A BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_DE, 0000001E BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_FC, 00000013 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_10F, 0000001A BYTES. PRESS KEYPAD	"+" TO EXPAND]
		db  56h	; V
		db  57h	; W
		db  8Bh	; 
		db  36h	; 6
		db  86h	; 
		db    1	;  
		db  8Bh	; 
		db 0FEh	; ş
		db 0FCh	; ü
		db    6	;  
		db  1Eh	;  
		db    7	;  
		db 0B9h	; ¹
		db    6	;  
		db    0	;  
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_138:				; CODE XREF: seg002:013Dj
		lodsw
		xchg	ax, [di+0Ch]
		stosw
		loop	loc_643_138
		pop	es
		pop	di
		pop	si
		retn	
; [COLLAPSED FUNCTION sub_643_143, 00000035 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cx, [si+8]
		cmp	cx, 0Fh
		jg	loc_643_18A
		cmp	cx, 0C001h
		jg	loc_643_194
		sub	ax, ax
		jmp	short loc_643_1F8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_18A:				; CODE XREF: seg002:017Ej seg002:01DDj ...
		mov	ch, 1
		call	sub_643_1DC4
		mov	ax, 8000h
		jmp	short loc_643_1F8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_194:				; CODE XREF: seg002:0184j
		mov	bx, [si+6]
		sub	ax, ax
		mov	dx, ax
		cmp	cx, 0
		jge	loc_643_1A4
		shr	bx, 1
		rcr	dx, 1

loc_643_1A4:				; CODE XREF: seg002:019Ej
		or	dx, [si]
		or	dx, [si+2]
		or	dx, [si+4]
		cmp	cx, 0
		jle	loc_643_1B7

loc_643_1B1:				; CODE XREF: seg002:01B5j
		shl	bx, 1
		rcl	ax, 1
		loop	loc_643_1B1

loc_643_1B7:				; CODE XREF: seg002:01AFj
		or	bl, dh
		or	bl, dl
		mov	cl, 0Ch
		and	cl, byte_BFD_185
		cmp	cl, 0Ch
		jz	loc_643_1F0
		cmp	cl, 0
		jz	loc_643_1E1
		add	cl, [si+0Ah]
		cmp	cl, 4
		jz	loc_643_1F0
		cmp	cl, 9
		jz	loc_643_1F0
		neg	bx
		adc	ax, 0
		js	loc_643_18A
		jmp	short loc_643_1F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1E1:				; CODE XREF: seg002:01C9j
		mov	dl, 1
		and	dl, al
		or	bl, dl
		add	bx, 7FFFh
		adc	ax, 0
		js	loc_643_18A

loc_643_1F0:				; CODE XREF: seg002:01C4j seg002:01D1j ...
		cmp	byte ptr [si+0Ah], 1
		jnz	loc_643_1F8
		neg	ax

loc_643_1F8:				; CODE XREF: seg002:0188j seg002:0192j ...
		mov	es:[di], ax
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	si
		push	di
		cld	
		mov	cx, 6
		repe movsw
		pop	di
		pop	si
		xchg	si, di
		lea	si, [si+8]
		cmp	word ptr [si], 0C001h
		jle	locret_643_220
		cmp	word ptr [si], 4001h
		jge	loc_643_221
		dec	word ptr [si]
		call	sub_643_143
		mov	word ptr [si], 1

locret_643_220:				; CODE XREF: seg002:020Fj seg002:022Ej
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_221:				; CODE XREF: seg002:0215j
		mov	word ptr [si], 0C001h
		mov	word ptr [di+8], 0Dh
		mov	byte ptr [di+7], 80h ; ''
		jmp	short locret_643_220
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	cx, [si+8]
		cmp	cx, 0Fh
		jg	loc_643_245
		or	cx, cx
		jg	loc_643_24F
		sub	ax, ax
		jmp	short loc_643_261
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_245:				; CODE XREF: seg002:023Bj
		mov	ch, 1
		call	sub_643_1DC4
		mov	ax, 7FFFh
		jmp	short loc_643_259
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_24F:				; CODE XREF: seg002:023Fj
		mov	ax, [si+6]
		neg	cl
		add	cl, 10h
		shr	ax, cl

loc_643_259:				; CODE XREF: seg002:024Dj
		cmp	byte ptr [si+0Ah], 1
		jnz	loc_643_261
		neg	ax

loc_643_261:				; CODE XREF: seg002:0243j seg002:025Dj
		mov	cx, [di+8]
		cmp	cx, 0C001h
		jle	loc_643_27F
		cmp	cx, 4001h
		jge	loc_643_27F
		add	ax, cx
		cmp	ax, 0C001h
		jle	loc_643_28D
		cmp	ax, 4001h
		jge	loc_643_283
		mov	[di+8],	ax

loc_643_27F:				; CODE XREF: seg002:0268j seg002:026Ej ...
		pop	di
		pop	si
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_283:				; CODE XREF: seg002:027Aj
		mov	ch, 8
		call	sub_643_1DC4
		mov	ax, 4001h
		jmp	short loc_643_295
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_28D:				; CODE XREF: seg002:0275j
		mov	ch, 10h
		call	sub_643_1DC4
		mov	ax, 0C001h

loc_643_295:				; CODE XREF: seg002:028Bj
		call	sub_643_99
		jmp	short loc_643_27F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	bx, es:[si]
		mov	dx, es:[si+2]
		sub	ax, ax
		mov	cx, 0
		or	dx, dx
		jns	loc_643_2B3
		not	dx
		neg	bx
		sbb	dx, 0FFFFh
		mov	cl, 1

loc_643_2B3:				; CODE XREF: seg002:02A8j
		mov	[di+0Ah], cx
		mov	cx, 10h
		or	dx, dx
		jnz	loc_643_2C1
		xchg	bx, dx
		mov	cl, 0

loc_643_2C1:				; CODE XREF: seg002:02BBj seg002:02CCj
		or	dx, dx
		jz	loc_643_2D1
		inc	cx
		shr	dx, 1
		rcr	bx, 1
		rcr	ax, 1
		jmp	short loc_643_2C1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_2CE:				; CODE XREF: seg002:02D1j
		mov	cx, 0C001h

loc_643_2D1:				; CODE XREF: seg002:02C3j
		jcxz	loc_643_2CE
		mov	[di+8],	cx
		mov	[di+6],	bx
		mov	[di+4],	ax
		mov	[di+2],	dx
		mov	[di], dx
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cx, [si+8]
		cmp	cx, 1Fh
		jg	loc_643_31D
		or	cx, cx
		jge	loc_643_32A
		cmp	cx, 0C001h
		jle	loc_643_307
		mov	bl, 0Ch
		and	bl, byte_BFD_185
		add	bl, [si+0Ah]
		cmp	bl, 5
		jz	loc_643_30D
		cmp	bl, 8
		jz	loc_643_30D

loc_643_307:				; CODE XREF: seg002:02F2j
		sub	dx, dx
		mov	ax, dx
		jmp	short loc_643_327
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_30D:				; CODE XREF: seg002:0300j seg002:0305j
		sub	dx, dx
		mov	ax, 1
		cmp	bl, 5
		jnz	loc_643_327
		neg	ax
		not	dx
		jmp	short loc_643_327
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_31D:				; CODE XREF: seg002:02E8j seg002:03A1j
		mov	ch, 1
		call	sub_643_1DC4
		mov	dx, 8000h
		sub	ax, ax

loc_643_327:				; CODE XREF: seg002:030Bj seg002:0315j ...
		jmp	loc_643_3B1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_32A:				; CODE XREF: seg002:02ECj
		mov	bx, [si+2]
		or	bl, [si]
		or	bl, [si+1]
		mov	ax, [si+4]
		mov	dx, [si+6]
		sub	cl, 10h
		ja	loc_643_34D

loc_643_33D:				; CODE XREF: seg002:0348j
		or	al, bl
		or	al, bh
		xchg	ax, bx
		xchg	ax, dx
		sub	dx, dx
		add	cl, 10h
		jle	loc_643_33D
		and	cl, 0Fh

loc_643_34D:				; CODE XREF: seg002:033Bj
		jcxz	loc_643_36C
		push	si
		mov	si, 0FFFFh
		rol	dx, cl
		rol	ax, cl
		shl	si, cl
		mov	cx, si
		and	cx, ax
		xor	ax, cx
		and	si, dx
		xor	dx, si
		or	ax, si
		or	bl, bh
		or	bl, cl
		mov	bh, ch
		pop	si

loc_643_36C:				; CODE XREF: seg002:034Dj
		mov	cl, 0Ch
		and	cl, byte_BFD_185
		cmp	cl, 0Ch
		jz	loc_643_3A4
		cmp	cl, 0
		jz	loc_643_38F
		add	cl, [si+0Ah]
		cmp	cl, 4
		jz	loc_643_3A4
		cmp	cl, 9
		jz	loc_643_3A4
		neg	bx
		jb	loc_643_399
		jmp	short loc_643_3A4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_38F:				; CODE XREF: seg002:037Aj
		mov	cl, 1
		and	cl, al
		or	bl, cl
		add	bx, 7FFFh

loc_643_399:				; CODE XREF: seg002:038Bj
		adc	ax, 0
		adc	dx, 0
		jns	loc_643_3A4
		jmp	loc_643_31D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_3A4:				; CODE XREF: seg002:0375j seg002:0382j ...
		cmp	byte ptr [si+0Ah], 1
		jnz	loc_643_3B1
		not	dx
		neg	ax
		sbb	dx, 0FFFFh

loc_643_3B1:				; CODE XREF: seg002:0327j seg002:03A8j
		mov	es:[di], ax
		mov	es:[di+2], dx
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		push	si
		mov	ax, es:[si]
		mov	bx, es:[si+2]
		mov	cx, es:[si+4]
		mov	dx, es:[si+6]
		mov	bp, 0
		or	dx, dx
		jl	loc_643_3E4
		jg	loc_643_3F9
		or	cx, cx
		jnz	loc_643_3F9
		or	bx, bx
		jnz	loc_643_3F9
		or	ax, ax
		jnz	loc_643_3F9
		mov	si, 0C001h
		jmp	short loc_643_417
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_3E4:				; CODE XREF: seg002:03CFj
		not	dx
		not	cx
		not	bx
		neg	ax
		cmc	
		adc	bx, 0
		adc	cx, 0
		adc	dx, 0
		mov	bp, 1

loc_643_3F9:				; CODE XREF: seg002:03D1j seg002:03D5j ...
		mov	si, 40h	; '@'

loc_643_3FC:				; CODE XREF: seg002:0408j
		or	dx, dx
		jnz	loc_643_40A
		xchg	dx, cx
		xchg	cx, bx
		xchg	ax, bx
		sub	si, 10h
		jmp	short loc_643_3FC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_40A:				; CODE XREF: seg002:03FEj
		js	loc_643_417

loc_643_40C:				; CODE XREF: seg002:0415j
		dec	si
		add	ax, ax
		adc	bx, bx
		adc	cx, cx
		adc	dx, dx
		jns	loc_643_40C

loc_643_417:				; CODE XREF: seg002:03E2j seg002:040Aj
		mov	[di+0Ah], bp
		mov	[di+8],	si
		mov	[di+6],	dx
		mov	[di+4],	cx
		mov	[di+2],	bx
		mov	[di], ax
		pop	si
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		push	di
		mov	cx, [si+8]
		cmp	cx, 3Fh	; '?'
		jg	loc_643_46E
		or	cx, cx
		jge	loc_643_47F
		cmp	cx, 0C001h
		jle	loc_643_452
		mov	bl, 0Ch
		and	bl, byte_BFD_185
		add	bl, [si+0Ah]
		cmp	bl, 5
		jz	loc_643_456
		cmp	bl, 8
		jz	loc_643_456

loc_643_452:				; CODE XREF: seg002:043Dj
		sub	bp, bp
		jmp	short loc_643_476
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_456:				; CODE XREF: seg002:044Bj seg002:0450j
		sub	bp, bp
		mov	dx, bp
		mov	ax, 1
		cmp	bl, 5
		mov	bx, bp
		jnz	loc_643_47C
		neg	ax
		not	bx
		not	dx
		not	bp
		jmp	short loc_643_47C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_46E:				; CODE XREF: seg002:0433j seg002:04DFj
		mov	ch, 1
		call	sub_643_1DC4
		mov	bp, 8000h

loc_643_476:				; CODE XREF: seg002:0454j
		sub	dx, dx
		mov	bx, dx
		mov	ax, bx

loc_643_47C:				; CODE XREF: seg002:0462j seg002:046Cj
		jmp	loc_643_510
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_47F:				; CODE XREF: seg002:0437j
		mov	bp, [si+6]
		mov	dx, [si+4]
		mov	bx, [si+2]
		mov	di, [si]
		sub	ax, ax
		sub	cl, 30h	; '0'
		ja	loc_643_4A7

loc_643_491:				; CODE XREF: seg002:04A2j
		or	al, ah
		mov	ah, 0
		or	ax, di
		mov	di, bx
		mov	bx, dx
		mov	dx, bp
		sub	bp, bp
		add	cl, 10h
		jle	loc_643_491
		and	cl, 0Fh

loc_643_4A7:				; CODE XREF: seg002:048Fj
		neg	cl
		jz	loc_643_4BC
		add	cl, 10h

loc_643_4AE:				; CODE XREF: seg002:04BAj
		or	al, ah
		shr	bp, 1
		rcr	dx, 1
		rcr	bx, 1
		rcr	di, 1
		rcr	ah, 1
		loop	loc_643_4AE

loc_643_4BC:				; CODE XREF: seg002:04A9j
		mov	cl, 0Ch
		and	cl, byte_BFD_185
		cmp	cl, 0Ch
		jz	loc_643_4F7
		cmp	cl, 0
		jz	loc_643_4E1
		add	cl, [si+0Ah]
		cmp	cl, 4
		jz	loc_643_4F7
		cmp	cl, 9
		jz	loc_643_4F7
		neg	ax
		jb	loc_643_4EA
		jmp	short loc_643_4F7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_4DF:				; CODE XREF: seg002:04F5j
		jmp	short loc_643_46E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_4E1:				; CODE XREF: seg002:04CAj
		mov	cl, 1
		and	cx, di
		or	al, cl
		add	ax, 7FFFh

loc_643_4EA:				; CODE XREF: seg002:04DBj
		mov	cx, 0
		adc	di, cx
		adc	bx, cx
		adc	dx, cx
		adc	bp, cx
		js	loc_643_4DF

loc_643_4F7:				; CODE XREF: seg002:04C5j seg002:04D2j ...
		xchg	ax, di
		cmp	byte ptr [si+0Ah], 1
		jnz	loc_643_510
		not	bp
		not	dx
		not	bx
		neg	ax
		cmc	
		adc	bx, 0
		adc	dx, 0
		adc	bp, 0

loc_643_510:				; CODE XREF: seg002:047Cj seg002:04FCj
		pop	di
		stosw
		xchg	ax, bx
		stosw
		xchg	ax, dx
		stosw
		xchg	ax, bp
		stosw
		sub	di, 8
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		push	si
		push	di
		xchg	bp, si
		mov	cx, [bp+8]
		cmp	cx, 40h	; '@'
		jge	loc_643_556
		or	cx, cx
		jge	loc_643_573
		cmp	cx, 0C001h
		jle	loc_643_547
		mov	cl, 0Ch
		and	cl, byte_BFD_185
		add	cl, [bp+0Ah]
		cmp	cl, 5
		jz	loc_643_54E
		cmp	cl, 8
		jz	loc_643_54E

loc_643_547:				; CODE XREF: seg002:0532j seg002:05E4j
		sub	bx, bx
		mov	si, 0C001h
		jmp	short loc_643_55F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_54E:				; CODE XREF: seg002:0540j seg002:0545j
		mov	si, 1
		mov	bx, 8000h
		jmp	short loc_643_55F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_556:				; CODE XREF: seg002:0528j
		jz	loc_643_570
		mov	ch, 20h	; ' '
		call	sub_643_1DC4
		jmp	short loc_643_570
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_55F:				; CODE XREF: seg002:054Cj seg002:0554j
		sub	ax, ax
		mov	[bp+0],	ax
		mov	[bp+2],	ax
		mov	[bp+4],	ax
		mov	[bp+6],	bx
		mov	[bp+8],	si

loc_643_570:				; CODE XREF: seg002:0556j seg002:055Dj
		jmp	loc_643_623
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_573:				; CODE XREF: seg002:052Cj
		mov	si, 38h	; '8'
		and	si, cx
		xor	cx, si
		shr	si, 1
		shr	si, 1
		shr	si, 1
		neg	si
		add	si, 7
		cmp	si, 7
		jnz	loc_643_590
		mov	ah, 0
		mov	al, [bp+si]
		jmp	short loc_643_592
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_590:				; CODE XREF: seg002:0588j
		mov	ax, [bp+si]

loc_643_592:				; CODE XREF: seg002:058Ej
		sub	bx, bx
		mov	di, si

loc_643_596:				; CODE XREF: seg002:059Dj
		dec	di
		jl	loc_643_59F
		or	bl, [bp+di]
		mov	[bp+di], bh
		jmp	short loc_643_596
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_59F:				; CODE XREF: seg002:0597j
		mov	dx, 0FFh
		and	cl, 7
		shr	dx, cl
		mov	di, dx
		inc	di
		and	dx, ax
		jnz	loc_643_5B2
		or	bl, bl
		jz	loc_643_623

loc_643_5B2:				; CODE XREF: seg002:05ACj
		mov	ch, 20h	; ' '
		call	sub_643_1DC4
		xor	ax, dx
		mov	cl, 0Ch
		and	cl, byte_BFD_185
		cmp	cl, 0Ch
		jz	loc_643_5DC
		cmp	cl, 0
		jz	loc_643_5E7
		add	cl, [bp+0Ah]
		cmp	cl, 4
		jz	loc_643_5DC
		cmp	cl, 9
		jz	loc_643_5DC
		or	bl, dl
		jnz	loc_643_5FD
		jmp	short loc_643_623
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_5DC:				; CODE XREF: seg002:05C2j seg002:05CFj ...
		mov	[bp+si], al
		cmp	byte ptr [bp+7], 0
		jnz	loc_643_623
		jmp	loc_643_547
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_5E7:				; CODE XREF: seg002:05C7j
		or	bl, bl
		jnz	loc_643_5F7
		test	di, ax
		jnz	loc_643_5F7
		add	dx, dx
		cmp	dx, di
		jbe	loc_643_5DC
		jmp	short loc_643_5FD
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_5F7:				; CODE XREF: seg002:05E9j seg002:05EDj
		add	dx, dx
		cmp	dx, di
		jb	loc_643_5DC

loc_643_5FD:				; CODE XREF: seg002:05D8j seg002:05F5j
		sub	si, 7
		jl	loc_643_60B
		add	ax, di
		mov	[bp+si+7], al
		neg	ah
		jmp	short loc_643_61A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_60B:				; CODE XREF: seg002:0600j
		add	ax, di
		mov	[bp+si+7], ax
		inc	si

loc_643_611:				; CODE XREF: seg002:0618j
		inc	si
		jg	loc_643_61A
		adc	byte ptr [bp+si+7], 0
		jb	loc_643_611

loc_643_61A:				; CODE XREF: seg002:0609j seg002:0612j
		jnb	loc_643_623
		stc	
		rcr	word ptr [bp+6], 1
		inc	word ptr [bp+8]

loc_643_623:				; CODE XREF: seg002:0570j seg002:05B0j ...
		pop	di
		pop	si
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	ax, [si+4]
		mov	dx, [si+6]
		mov	bx, [si+8]
		mov	cl, [si+0Ah]
		cmp	word ptr [si], 0
		jnz	loc_643_647
		cmp	word ptr [si+2], 0
		jnz	loc_643_647
		test	al, 7Fh
		jnz	loc_643_647
		test	ah, 1
		jz	loc_643_656

loc_643_647:				; CODE XREF: seg002:0636j seg002:063Cj ...
		add	al, al
		adc	ah, 0
		adc	dx, 0
		jnb	loc_643_656
		rcr	dx, 1
		rcr	ax, 1
		inc	bx

loc_643_656:				; CODE XREF: seg002:0645j seg002:064Fj
		add	bx, 7Eh	; '~'
		jle	loc_643_68D
		cmp	bx, 0FFh
		jge	loc_643_678

loc_643_661:				; CODE XREF: seg002:068Bj seg002:069Fj
		shl	dx, 1
		shr	cl, 1
		rcr	bl, 1
		rcr	dx, 1
		mov	al, ah
		mov	ah, dl
		mov	dl, dh
		mov	dh, bl
		stosw
		xchg	ax, dx
		stosw
		sub	di, 4
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_678:				; CODE XREF: seg002:065Fj
		cmp	word ptr [si+8], 4001h
		jge	loc_643_688
		mov	ch, 8
		call	sub_643_1DC4
		sub	dx, dx
		sub	ax, ax

loc_643_688:				; CODE XREF: seg002:067Dj
		mov	bx, 0FFh
		jmp	short loc_643_661
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_68D:				; CODE XREF: seg002:0659j
		cmp	word ptr [si+8], 0C001h
		jle	loc_643_699
		mov	ch, 10h
		call	sub_643_1DC4

loc_643_699:				; CODE XREF: seg002:0692j
		sub	bx, bx
		mov	dx, bx
		mov	ax, bx
		jmp	short loc_643_661
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	si
		push	di
		push	es
		cld	
		mov	ax, es:[si]
		mov	dx, es:[si+2]
		sub	si, si
		shl	dx, 1
		rcl	si, 1
		sub	bx, bx
		add	bl, dh
		jz	loc_643_6E8
		cmp	dh, 0FFh
		jz	loc_643_6DD
		sub	bx, 7Eh	; '~'

loc_643_6C0:				; CODE XREF: seg002:06E6j
		stc	
		rcr	dl, 1

loc_643_6C3:				; CODE XREF: seg002:06F7j seg002:06FFj
		mov	dh, dl
		mov	dl, ah
		mov	ch, al
		mov	cl, 0
		push	ds
		pop	es
		assume es:dseg
		sub	ax, ax
		stosw
		stosw
		xchg	ax, cx
		stosw
		xchg	ax, dx
		stosw
		xchg	ax, bx
		stosw
		xchg	ax, si
		stosw
		pop	es
		assume es:nothing
		pop	di
		pop	si
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_6DD:				; CODE XREF: seg002:06BBj
		mov	bx, ax
		or	bl, dl
		neg	bx
		mov	bx, 4001h
		jmp	short loc_643_6C0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_6E8:				; CODE XREF: seg002:06B6j
		mov	cx, dx
		or	cx, ax
		jz	loc_643_6FC
		sub	bx, 7Eh	; '~'
		shr	dl, 1

loc_643_6F3:				; CODE XREF: seg002:06FAj
		add	ax, ax
		adc	dx, dx
		js	loc_643_6C3
		dec	bx
		jmp	short loc_643_6F3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_6FC:				; CODE XREF: seg002:06ECj
		mov	bx, 0C001h
		jmp	short loc_643_6C3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	di
		mov	ax, [si+1]
		mov	di, [si+3]
		mov	cx, [si+5]
		mov	dl, [si+7]
		mov	bx, [si+8]
		mov	dh, 3
		and	dh, al
		or	dh, [si]
		jnz	loc_643_71D
		test	al, 8
		jz	loc_643_72E

loc_643_71D:				; CODE XREF: seg002:0717j
		add	ax, 4
		adc	di, 0
		adc	cx, 0
		adc	dl, 0
		jnb	loc_643_72E
		rcr	dl, 1
		inc	bx

loc_643_72E:				; CODE XREF: seg002:071Bj seg002:0729j
		add	bx, 3FEh
		jle	loc_643_776
		cmp	bx, 7FFh
		jge	loc_643_784

loc_643_73A:				; CODE XREF: seg002:07A3j
		and	al, 0F8h
		shl	dl, 1
		shr	bx, 1
		rcr	dl, 1
		or	al, bh
		mov	dh, bl
		mov	bx, di
		shr	di, 1
		rcr	ax, 1
		rcr	dx, 1
		rcr	cx, 1
		rcr	bx, 1
		shr	di, 1
		rcr	ax, 1
		rcr	dx, 1
		rcr	cx, 1
		rcr	bx, 1
		or	al, [si+0Ah]
		shr	di, 1
		rcr	ax, 1
		rcr	dx, 1
		rcr	cx, 1
		rcr	bx, 1

loc_643_769:				; CODE XREF: seg002:079Ej
		pop	di
		cld	
		stosw
		xchg	ax, bx
		stosw
		xchg	ax, cx
		stosw
		xchg	ax, dx
		stosw
		sub	di, 8
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_776:				; CODE XREF: seg002:0732j
		mov	dx, 0
		cmp	word ptr [si+8], 0C001h
		jle	loc_643_793
		mov	ch, 10h
		jmp	short loc_643_790
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_784:				; CODE XREF: seg002:0738j
		cmp	word ptr [si+8], 4001h
		jge	loc_643_7A0
		mov	dx, 0FFE0h
		mov	ch, 8

loc_643_790:				; CODE XREF: seg002:0782j
		call	sub_643_1DC4

loc_643_793:				; CODE XREF: seg002:077Ej
		or	dl, [si+0Ah]
		ror	dx, 1
		sub	cx, cx
		mov	bx, cx
		mov	ax, cx
		jmp	short loc_643_769
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_7A0:				; CODE XREF: seg002:0789j
		mov	bx, 7FFh
		jmp	short loc_643_73A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	di
		mov	ax, ds
		mov	bx, es
		mov	ds, bx
		mov	es, ax
		assume es:dseg
		mov	dx, [si+6]
		sub	ax, ax
		shl	dx, 1
		rcl	ax, 1
		std	
		lea	di, [di+0Ah]
		stosw
		mov	cl, 5
		shr	dx, cl
		jz	loc_643_822
		cmp	dx, 7FFh
		jz	loc_643_80C
		mov	bl, 10h
		sub	dx, 3FEh

loc_643_7CE:				; CODE XREF: seg002:0820j seg002:0835j
		xchg	ax, dx
		stosw
		mov	dx, [si+5]
		and	dh, 0Fh
		or	dh, bl
		mov	cx, [si+3]
		mov	bx, [si+1]
		mov	ah, [si]
		mov	al, 0
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		rcl	dx, 1
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		rcl	dx, 1

loc_643_7FA:				; CODE XREF: seg002:085Dj
		xchg	ax, dx
		stosw
		xchg	ax, cx
		stosw
		xchg	ax, bx
		stosw
		xchg	ax, dx
		stosw
		mov	ax, ds
		mov	bx, es
		mov	ds, bx
		mov	es, ax
		pop	di
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_80C:				; CODE XREF: seg002:07C6j
		mov	bl, [si+6]
		and	bx, 0Fh
		or	bx, [si+4]
		or	bx, [si+2]
		or	bx, [si]
		mov	dx, 4001h
		or	bl, 10h
		jmp	short loc_643_7CE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_822:				; CODE XREF: seg002:07C0j
		mov	bl, [si+6]
		and	bx, 0Fh
		or	bx, [si+4]
		or	bx, [si+2]
		or	bx, [si]
		jnz	loc_643_837
		mov	dx, 0C001h
		jmp	short loc_643_7CE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_837:				; CODE XREF: seg002:0830j
		mov	dx, [si+5]
		and	dh, 0Fh
		mov	cx, [si+3]
		mov	bx, [si+1]
		mov	ah, [si]
		mov	al, 4

loc_643_847:				; CODE XREF: seg002:0851j
		dec	al
		shl	ah, 1
		rcl	bx, 1
		rcl	cx, 1
		adc	dx, dx
		jns	loc_643_847
		push	ax
		mov	ah, 0
		sub	ax, 3FEh
		stosw
		pop	ax
		mov	al, 0
		jmp	short loc_643_7FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	si
		push	di
		cld	
		movsw
		movsw
		movsw
		movsw
		lodsw
		mov	cx, [si]
		cmp	ax, 4001h
		jge	loc_643_87D
		add	ax, 3FFEh
		jl	loc_643_882

loc_643_873:				; CODE XREF: seg002:0880j seg002:0884j
		shl	ax, 1
		shr	cx, 1
		rcr	ax, 1
		stosw
		pop	di
		pop	si
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_87D:				; CODE XREF: seg002:086Cj
		mov	ax, 7FFFh
		jmp	short loc_643_873
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_882:				; CODE XREF: seg002:0871j
		sub	ax, ax
		jmp	short loc_643_873
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	si
		push	di
		push	ds
		push	es
		mov	ax, ds
		mov	bx, es
		mov	es, ax
		mov	ds, bx
		std	
		lea	si, [si+8]
		lea	di, [di+0Ah]
		lodsw
		xchg	ax, bx
		sub	ax, ax
		shl	bx, 1
		rcl	ax, 1
		stosw
		shr	bx, 1
		jz	loc_643_8B6
		sub	bx, 3FFEh
		xchg	ax, bx
		stosw
		movsw
		movsw
		movsw
		movsw

loc_643_8B0:				; CODE XREF: seg002:08C0j
		cld	
		pop	es
		assume es:nothing
		pop	ds
		pop	di
		pop	si
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_8B6:				; CODE XREF: seg002:08A4j
		mov	ax, 0C001h
		stosw
		sub	ax, ax
		stosw
		stosw
		stosw
		stosw
		jmp	short loc_643_8B0
; [COLLAPSED FUNCTION sub_643_8C2, 00000087 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_949, 00000004 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_94D, 000001CB BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_B18, 000000E1 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_BF9, 000000E7 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; [COLLAPSED FUNCTION sub_643_CE0, 0000024D BYTES. PRESS KEYPAD	"+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	ax, [si+8]
		cmp	ax, 0C001h
		jle	loc_643_F63
		cmp	ax, 4001h
		jge	loc_643_F67
		cmp	byte ptr [si+0Ah], 0
		jnz	loc_643_F71
		call	sub_643_C4
		call	sub_643_F82
		mov	di, word_BFD_186
		push	si
		push	di
		push	si
		call	sub_643_CE0
		push	di
		push	si
		push	si
		call	sub_643_94D
		dec	word ptr [si+8]
		add	word_BFD_186, 0Ch

loc_643_F63:				; CODE XREF: seg002:0F38j seg002:0F6Fj ...
		pop	di
		pop	si
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_F67:				; CODE XREF: seg002:0F3Dj
		mov	bx, 0FFFFh
		mov	di, si
		call	sub_643_8C2
		jmp	short loc_643_F63
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_F71:				; CODE XREF: seg002:0F43j
		mov	ch, 1
		call	sub_643_1DC4
		mov	di, si
		call	sub_643_84
		mov	word ptr [di+8], 4001h
		jmp	short loc_643_F63
; [COLLAPSED FUNCTION sub_643_F82, 00000070 BYTES. PRESS KEYPAD	"+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		add	[bp+si], al
		inc	ax
		inc	dx
		add	[bp+di], ax
		inc	cx
		inc	bx

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_643_FFA	proc near		; CODE XREF: seg002:1A30p

var_A		= word ptr -0Ah
var_6		= byte ptr -6
var_4		= word ptr -4
var_2		= byte ptr -2

		push	bp
		mov	bp, sp
		push	word ptr [di+0Ah]
		lea	sp, [bp+var_6]
		push	si
		push	di
		mov	ax, [di]
		mov	bx, [di+2]
		mov	cx, [di+4]
		mov	dx, [di+6]
		mov	[bp+var_4], 0
		mov	di, [di+8]
		sub	di, [si+8]
		jge	loc_643_1035
		jmp	short loc_643_1071
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 2

loc_643_1020:				; CODE XREF: sub_643_FFA+2Aj
		inc	di
		jmp	short loc_643_1060
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1023:				; CODE XREF: sub_643_FFA+39j
					; sub_643_FFA+40j ...
		dec	di
		jl	loc_643_1020
		shl	[bp+var_4], 1
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		adc	dx, dx
		jb	loc_643_104E
		jns	loc_643_1023

loc_643_1035:				; CODE XREF: sub_643_FFA+21j
		cmp	dx, [si+6]
		ja	loc_643_104E
		jb	loc_643_1023
		cmp	cx, [si+4]
		ja	loc_643_104E
		jb	loc_643_1023
		cmp	bx, [si+2]
		ja	loc_643_104E
		jb	loc_643_1023
		cmp	ax, [si]
		jb	loc_643_1023

loc_643_104E:				; CODE XREF: sub_643_FFA+37j
					; sub_643_FFA+3Ej ...
		inc	[bp+var_4]
		sub	ax, [si]
		sbb	bx, [si+2]
		sbb	cx, [si+4]
		sbb	dx, [si+6]
		or	di, di
		jg	loc_643_1023

loc_643_1060:				; CODE XREF: sub_643_FFA+27j
					; sub_643_FFA+BAj ...
		or	dx, dx
		js	loc_643_1071
		jz	loc_643_10AA

loc_643_1066:				; CODE XREF: sub_643_FFA+75j
		dec	di
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		adc	dx, dx
		jns	loc_643_1066

loc_643_1071:				; CODE XREF: sub_643_FFA+23j
					; sub_643_FFA+68j
		add	di, [si+8]

loc_643_1074:				; CODE XREF: sub_643_FFA+D7j
		push	di
		mov	di, [bp+var_A]
		stosw
		xchg	ax, bx
		stosw
		xchg	ax, cx
		stosw
		xchg	ax, dx
		stosw
		pop	ax
		stosw
		mov	al, [bp+var_2]
		cbw	
		stosw
		and	byte_BFD_183, 0BCh
		mov	di, 7
		mov	ax, [bp+var_4]
		cmp	[bp+var_2], 1
		jnz	loc_643_1099
		neg	ax

loc_643_1099:				; CODE XREF: sub_643_FFA+9Bj
		and	di, ax
		mov	dl, cs:[di+0FF2h]
		or	byte_BFD_183, dl
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_10AA:				; CODE XREF: sub_643_FFA+6Aj
		xchg	dx, cx
		xchg	cx, bx
		xchg	ax, bx
		sub	di, 10h
		or	dx, dx
		jnz	loc_643_1060
		xchg	dx, cx
		xchg	cx, bx
		sub	di, 10h
		xchg	dx, cx
		sub	di, 10h
		or	dx, dx
		jnz	loc_643_1060
		mov	di, 0C001h
		sub	dx, dx
		sub	cx, cx
		sub	bx, bx
		sub	ax, ax
		jmp	short loc_643_1074
sub_643_FFA	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_10D3:				; CODE XREF: sub_643_1102+14j
		mov	dx, [si+6]
		and	dx, 7FFFh
		or	dx, [si]
		or	dx, [si+2]
		or	dx, [si+4]
		jz	loc_643_1118

loc_643_10E4:				; CODE XREF: seg002:10FEj
		mov	ch, 1
		call	sub_643_1DC4
		mov	ax, 4500h
		jmp	loc_643_1180
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_10EF:				; CODE XREF: sub_643_1102+1Aj
		mov	dx, [di+6]
		and	dx, 7FFFh
		or	dx, [di]
		or	dx, [di+2]
		or	dx, [di+4]
		jnz	loc_643_10E4
		jmp	short loc_643_111E
; [COLLAPSED FUNCTION sub_643_1102, 000000C0 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	ax, 4000h
		cmp	word ptr [si+8], 0C001h
		jle	loc_643_11DF
		cmp	word ptr [si+8], 4001h
		jge	loc_643_11E4

loc_643_11D3:				; CODE XREF: seg002:11F3j
		mov	ax, 100h
		cmp	byte ptr [si+0Ah], 1
		jz	loc_643_11DF
		mov	ax, 0

loc_643_11DF:				; CODE XREF: seg002:11CAj seg002:11DAj ...
		mov	byte_BFD_183, ah
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_11E4:				; CODE XREF: seg002:11D1j
		mov	dx, [si+6]
		and	dx, 7FFFh
		or	dx, [si]
		or	dx, [si+2]
		or	dx, [si+4]
		jz	loc_643_11D3
		mov	ch, 1
		call	sub_643_1DC4
		mov	ax, 4500h
		jmp	short loc_643_11DF
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	ax, 4000h
		cmp	word ptr [si+8], 0C001h
		jle	loc_643_121C
		cmp	word ptr [si+8], 4001h
		jge	loc_643_1221
		mov	ax, 400h

loc_643_1213:				; CODE XREF: seg002:1233j seg002:1238j
		cmp	byte ptr [si+0Ah], 1
		jnz	loc_643_121C
		or	ax, 200h

loc_643_121C:				; CODE XREF: seg002:1207j seg002:1217j
		mov	byte_BFD_183, ah
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1221:				; CODE XREF: seg002:120Ej
		mov	ax, 500h
		mov	dx, [si+6]
		and	dx, 7FFFh
		or	dx, [si]
		or	dx, [si+2]
		or	dx, [si+4]
		jz	loc_643_1213
		mov	ax, 100h
		jmp	short loc_643_1213
; [COLLAPSED FUNCTION sub_643_123A, 00000102 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION sub_643_133C, 000000F3 BYTES. PRESS KEYPAD "+" TO	EXPAND]
		db 8, 0Dh dup(0), 0B6h,	6 dup(0AAh), 2Ah, 2 dup(0), 1
		db 0, 3, 24h, 5	dup(22h), 2, 4 dup(0), 0B3h, 0E4h, 0, 0Dh
		db 0D0h, 0, 0Dh, 3 dup(0), 1, 0, 6Eh, 8, 4Bh, 0C7h, 3Bh
		db 2Eh,	6 dup(0), 0C6h,	40h, 16h, 99h, 6Bh, 5 dup(0), 1
		db 0, 0Ch, 45h,	92h, 0B0h, 8 dup(0), 0D5h, 45h,	0D6h, 7	dup(0)
		db 1, 0, 8, 0Dh	dup(0),	88h, 6 dup(0FFh), 7Fh, 2 dup(0)
		db 1, 0, 0A6h, 9Ah, 5 dup(0AAh), 0Ah, 4	dup(0),	7Fh, 0E6h
		db 4, 5Bh, 0B0h, 5, 5Bh, 3 dup(0), 1, 0, 0EFh, 26h, 9Bh
		db 1, 1Ah, 0A0h, 1, 5 dup(0), 1Dh, 0CEh, 0DCh, 93h, 9Fh
		db 4, 4	dup(0),	1, 0, 0Fh, 0B1h, 4Bh, 0F7h, 8, 7 dup(0)
		db 3, 0D8h, 7Bh, 0Ch, 6	dup(0),	1, 0, 0E8h, 0CEh, 0EBh
		db 0E8h, 41h, 0FDh, 2Eh, 0FFh, 36h, 2Fh, 14h, 0B8h, 31h
		db 14h,	50h, 0E8h, 37h,	0FEh, 0FFh, 36h, 86h, 1, 2 dup(56h)
		db 0E8h, 0Ah, 0F6h, 83h, 6, 86h, 1, 0Ch, 0C3h, 0E8h, 23h
		db 0FDh, 2Eh, 0FFh, 36h, 91h, 14h, 0B8h, 93h, 14h, 50h
		db 0E8h, 19h, 0FEh, 0C3h, 0E8h,	9Dh, 0EBh, 0E8h, 10h, 0FDh
		db 0E8h, 0E2h, 0EBh, 0E8h, 0C9h, 0FFh, 0E8h, 0E4h, 0FFh
		db 0C3h, 35h, 0C2h, 68h, 21h, 0A2h, 0DAh, 0Fh, 0C9h, 1
		db 3 dup(0)
word_643_1540	dw 8			; DATA XREF: sub_643_16CD+1Dr
		db 0Ch dup(0), 57h, 6 dup(55h),	1, 2 dup(0), 1,	0, 0BEh
		db 32h,	4 dup(33h), 3, 5 dup(0), 7Dh, 1Eh, 49h,	92h, 24h
		db 9, 4	dup(0),	1, 0, 0BCh, 0FEh, 0C6h,	71h, 1Ch, 7 dup(0)
		db 5Ch,	0FFh, 16h, 5Dh,	6 dup(0), 1, 0,	0D8h, 0BBh, 3Ah
		db 1, 8	dup(0),	0Ah, 0Ch, 4, 7 dup(0), 1, 8 dup(0), 0E7h
		db 0FDh, 0FFh, 2 dup(0), 0BDh, 0A4h, 0D6h, 7Bh,	0EEh, 64h
		db 5Ch,	0B3h, 2	dup(0FFh), 2 dup(0), 0B5h, 85h,	47h, 0FCh
		db 74h,	30h, 11h, 0A1h,	0Bh dup(0), 80h, 1, 3 dup(0), 9Ch
		db 0FAh, 64h, 0B0h, 0B2h, 1Dh, 7, 0E6h,	0FEh, 0FFh, 2 dup(0)
		db 9Ch,	0FAh, 64h, 0B0h, 0B2h, 1Dh, 7, 0E6h, 2 dup(0FFh)
		db 2 dup(0), 0F5h, 0BBh, 4Bh, 4, 46h, 56h, 85h,	0ACh, 4	dup(0)
		db 0E6h, 6Eh, 0D9h, 1Fh, 0BDh, 9, 0FAh,	0E9h, 0FEh, 0FFh
		db 2 dup(0), 8Dh, 7Bh, 35h, 0BDh, 5Bh, 84h, 0DDh, 0F6h
		db 2 dup(0FFh),	2 dup(0), 7Fh, 0D5h, 35h, 2, 0DBh, 80h
		db 73h,	0CCh, 4	dup(0)
		db  55h	; U
		db  8Bh	; 
		db 0ECh	; ì
		db  8Dh	; 
		db  66h	; f
		db 0FEh	; ş
		db  56h	; V
		db  57h	; W
		db  56h	; V
		db  57h	; W
		db  56h	; V
		db 0E8h	; è
		db 0B8h	; ¸
		db 0F6h	; ö
		db 0C7h	; Ç
		db  46h	; F
		db 0FEh	; ş
		db    0	;  
		db    0	;  
		db 0BFh	; ¿
		db 0A2h	; ¢
		db  15h	;  
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1630:				; CODE XREF: seg002:1655j
		cmp	word ptr [bp-2], 3
		jnb	loc_643_1657
		xchg	si, di
		call	sub_643_DE
		xchg	di, si
		push	si
		push	word_BFD_186
		call	sub_643_1102
		add	word_BFD_186, 0Ch
		cmp	ax, 0
		jnz	loc_643_1657
		inc	word ptr [bp-2]
		add	di, 0Ch
		jmp	short loc_643_1630
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1657:				; CODE XREF: seg002:1634j seg002:164Dj
		cmp	word ptr [bp-2], 0
		jnz	loc_643_1662
		call	sub_643_16CD
		jmp	short loc_643_16C7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1662:				; CODE XREF: seg002:165Bj
		mov	bx, [bp-2]
		dec	bx
		mov	bl, cs:[bx+2]
		mov	[bp-2],	bx
		add	bx, 15F6h
		mov	di, bx
		xchg	si, di
		call	sub_643_DE
		xchg	di, si
		push	si
		mov	di, word_BFD_186
		push	di
		lea	ax, [di-0Ch]
		mov	word_BFD_186, ax
		push	ax
		call	sub_643_949
		push	si
		push	di
		push	si
		call	sub_643_B18
		call	sub_643_1E
		push	di
		push	si
		push	si
		call	sub_643_94D
		push	word_BFD_186
		push	si
		push	si
		call	sub_643_CE0
		add	word_BFD_186, 18h
		call	sub_643_16CD
		mov	di, [bp-2]
		add	di, 15D2h
		xchg	si, di
		call	sub_643_DE
		xchg	di, si
		push	word_BFD_186
		push	si
		push	si
		call	sub_643_94D
		add	word_BFD_186, 0Ch

loc_643_16C7:				; CODE XREF: seg002:1660j
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn	
; [COLLAPSED FUNCTION sub_643_16CD, 00000037 BYTES. PRESS KEYPAD "+" TO	EXPAND]
		db 0Dh,	0Dh dup(0), 3, 6 dup(0), 40h, 4	dup(0),	0A9h, 6	dup(0AAh)
		db 0Ah,	4 dup(0), 78h, 6 dup(55h), 1, 4	dup(0),	26h, 23h
		db 5 dup(22h), 5 dup(0), 1Ch, 2Bh, 0D8h, 82h, 2Dh, 0D8h
		db 2, 5	dup(0),	0FCh, 0F9h, 33h, 40h, 3, 34h, 6	dup(0)
		db 14h,	52h, 3,	34h, 40h, 3, 6 dup(0), 1Eh, 6Ch, 0C7h
		db 3Bh,	2Eh, 7 dup(0), 4Ch, 0B0h, 0C9h,	4Fh, 2,	7 dup(0)
		db 91h,	0Eh, 0E6h, 1Ah,	8 dup(0), 51h, 76h, 1Fh, 1, 8 dup(0)
		db 0C5h, 2Ch, 0Bh, 9 dup(0), 55h, 56h, 57h, 8Bh, 2Eh, 86h
		db 1, 8Dh, 7Eh,	0F4h, 89h, 3Eh,	86h, 1,	0E8h, 0C0h, 0E8h
		db 57h,	2 dup(56h), 0E8h, 5Fh, 0F3h, 89h, 2Eh, 86h, 1
		db 8Bh,	7Ch, 8,	83h, 0FFh, 0E0h, 7Eh, 57h, 8Bh,	4, 8Bh
		db 5Ch,	2, 8Bh,	4Ch, 4,	8Bh, 54h, 6, 47h, 7Dh, 17h, 0D1h
		db 0EAh, 0D1h, 0D9h, 0D1h, 0DBh, 0D1h, 0D8h, 47h, 7Ch
		db 0F5h, 15h, 2	dup(0),	83h, 0D3h, 0, 83h, 0D1h, 0, 83h
		db 0D2h, 0, 83h, 2Eh, 86h, 1, 0Ch, 0FCh, 8Bh, 3Eh, 86h
		db 1, 0ABh, 93h, 0ABh, 91h, 0ABh, 92h, 0ABh, 2Bh, 0C0h
		db 2 dup(0ABh),	83h, 0EFh, 0Ch,	2Eh, 0FFh, 36h,	4, 17h
		db 0B8h, 6, 17h, 50h, 0E8h, 2Eh, 0FBh, 0A1h, 86h, 1, 50h
		db 2 dup(56h), 0E8h, 1,	0F3h, 83h, 6, 86h, 1, 0Ch, 5Fh
		db 5Eh,	5Dh, 0C3h, 0BBh, 0F0h, 17h, 5Ch, 29h, 3Bh, 0AAh
		db 0B8h, 1, 3 dup(0)
word_643_182C	dw 9			; DATA XREF: sub_643_198A+34r
		db 0Ch dup(0), 68h, 6 dup(55h),	5, 4 dup(0), 0BAh, 34h
		db 5 dup(33h), 5 dup(0), 0A7h, 0C3h, 48h, 92h, 24h, 49h
		db 2, 5	dup(0),	4Dh, 5Dh, 22h, 0C7h, 71h, 1Ch, 6 dup(0)
		db 24h,	56h, 0EBh, 5Ch,	74h, 1,	6 dup(0), 39h, 0ADh, 0ECh
		db 0B1h, 13h, 7	dup(0),	0FDh, 0D6h, 80h, 0Fh, 1, 7 dup(0)
		db 0B5h, 7Ah, 0E4h, 10h, 8 dup(0)
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	word ptr [di+8]
		push	si
		push	di
		mov	ax, [di]
		mov	bx, [di+2]
		mov	cx, [di+4]
		mov	dx, [di+6]
		cmp	dx, 0B505h
		ja	loc_643_18C3
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		rcl	dx, 1
		mov	si, 0
		dec	word ptr [bp-2]
		jmp	short loc_643_18D8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_18C3:				; CODE XREF: seg002:18B1j
		not	dx
		not	cx
		not	bx
		neg	ax
		cmc	
		adc	bx, 0
		adc	cx, 0
		adc	dx, 0
		mov	si, 1

loc_643_18D8:				; CODE XREF: seg002:18C1j
		sub	di, di

loc_643_18DA:				; CODE XREF: seg002:18E7j
		or	dx, dx
		jnz	loc_643_18F7
		xchg	ax, bx
		xchg	ax, cx
		xchg	ax, dx
		sub	di, 10h
		cmp	di, 0FFC0h
		jg	loc_643_18DA
		sub	word_BFD_186, 0Ch
		mov	di, word_BFD_186
		call	sub_643_84
		jmp	short loc_643_1924
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_18F7:				; CODE XREF: seg002:18DCj
		js	loc_643_1904

loc_643_18F9:				; CODE XREF: seg002:1902j
		dec	di
		shl	ax, 1
		rcl	bx, 1
		rcl	cx, 1
		adc	dx, dx
		jns	loc_643_18F9

loc_643_1904:				; CODE XREF: seg002:18F7j
		push	si
		push	di
		push	dx
		push	cx
		push	bx
		push	ax
		mov	si, sp
		call	sub_643_198A
		mov	si, 1820h
		call	sub_643_DE
		mov	si, word_BFD_186
		mov	ax, sp
		push	si
		push	ax
		push	si
		call	sub_643_B18
		add	sp, 0Ch

loc_643_1924:				; CODE XREF: seg002:18F5j
		lea	si, [bp-2]
		sub	word_BFD_186, 0Ch
		mov	di, word_BFD_186
		call	sub_643_143
		lea	si, [di+0Ch]
		push	si
		push	di
		push	di
		call	sub_643_94D
		push	di
		push	word ptr [bp-4]
		push	word ptr [bp-4]
		call	sub_643_B18
		add	word_BFD_186, 18h
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, di
		call	sub_643_C4
		mov	si, word_BFD_186
		call	sub_643_198A
		mov	si, 1820h
		call	sub_643_DE
		mov	si, word_BFD_186
		push	si
		lea	si, [si+0Ch]
		push	si
		push	si
		call	sub_643_B18
		push	si
		push	word ptr [bp-2]
		push	word ptr [bp-2]
		call	sub_643_B18
		add	word_BFD_186, 18h
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn	
; [COLLAPSED FUNCTION sub_643_198A, 00000057 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 0
		jmp	short loc_643_19EB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 2
		jmp	short loc_643_19EB
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 4

loc_643_19EB:				; CODE XREF: seg002:19E3j seg002:19E7j
		mov	es, di
		mov	bp, sp
		mov	di, word_BFD_186
		mov	ch, [di+0Ah]
		push	cx
		push	ax
		cmp	word ptr [di+8], 0FFE0h
		jg	loc_643_1A09
		cmp	cl, 2
		jnz	loc_643_1A06
		call	sub_643_1E

loc_643_1A06:				; CODE XREF: seg002:1A01j
		jmp	loc_643_1AC3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1A09:				; CODE XREF: seg002:19FCj
		cmp	word ptr [di+8], 40h ; '@'
		jle	loc_643_1A1A
		call	sub_643_AB
		mov	word ptr [di+6], 21h ; '!'
		jmp	loc_643_1AC3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1A1A:				; CODE XREF: seg002:1A0Dj
		mov	byte ptr [di+0Ah], 0
		lea	si, [di-0Ch]
		mov	word_BFD_186, si
		xchg	di, si
		call	near ptr byte_643_23+2Eh
		xchg	di, si
		sub	word ptr [si+8], 2
		call	sub_643_FFA
		and	al, 7
		mov	[bp-4],	al
		mov	bl, [bp-2]
		cmp	bl, 4
		jz	loc_643_1A7B
		add	bl, [bp-4]
		and	bl, 7
		mov	[bp-4],	bl
		shr	bx, 1
		jnb	loc_643_1A5E
		xchg	di, si
		call	near ptr byte_643_23+2Eh
		xchg	di, si
		sub	word ptr [si+8], 2
		push	si
		push	di
		push	di
		call	sub_643_949

loc_643_1A5E:				; CODE XREF: seg002:1A4Bj
		mov	word_BFD_186, di
		mov	si, di
		test	byte ptr [bp-4], 3
		jp	loc_643_1A6F
		call	near ptr byte_643_142F+0E5h
		jmp	short loc_643_1A72
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1A6F:				; CODE XREF: seg002:1A68j
		call	near ptr byte_643_142F+0C4h

loc_643_1A72:				; CODE XREF: seg002:1A6Dj
		mov	bl, [bp-4]
		shr	bl, 1
		shr	bl, 1
		jmp	short loc_643_1AB7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1A7B:				; CODE XREF: seg002:1A3Ej
		test	byte ptr [bp-4], 1
		jz	loc_643_1A92
		xchg	si, di
		call	near ptr byte_643_23+2Eh
		xchg	si, di
		sub	word ptr [si+8], 2
		push	si
		push	di
		push	di
		call	sub_643_949

loc_643_1A92:				; CODE XREF: seg002:1A7Fj
		mov	word_BFD_186, di
		mov	si, di
		call	near ptr byte_643_142F+0F5h
		lea	di, [si-0Ch]
		mov	ax, si
		test	byte ptr [bp-4], 3
		jp	loc_643_1AA8
		xchg	si, di

loc_643_1AA8:				; CODE XREF: seg002:1AA4j
		xchg	ax, di
		push	si
		push	ax
		push	di
		call	sub_643_CE0
		mov	bl, [bp-4]
		shr	bl, 1
		and	bl, 1

loc_643_1AB7:				; CODE XREF: seg002:1A79j
		cmp	byte ptr [bp-2], 2
		jz	loc_643_1AC0
		xor	bl, [bp-1]

loc_643_1AC0:				; CODE XREF: seg002:1ABBj
		mov	[di+0Ah], bl

loc_643_1AC3:				; CODE XREF: seg002:1A06j seg002:1A17j
		mov	word_BFD_186, di
		mov	sp, bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 8Eh,	0C7h, 8Bh, 36h,	86h, 1,	8Dh, 7Ch, 0F4h,	89h, 3Eh
		db 86h,	1, 0E8h, 44h, 0E5h, 8Bh, 44h, 8, 3Dh, 1, 40h, 7Dh
		db 38h,	3Dh, 1,	0C0h, 7Eh, 2Eh,	0B1h, 0, 8Bh, 0DEh, 48h
		db 7Ch,	7, 0E8h, 38h, 0E6h, 8Bh, 0DFh, 0B1h, 1,	0B5h, 0
		db 86h,	6Fh, 0Ah, 51h, 0E8h, 1Ch, 0FBh,	59h, 80h, 0F9h
		db 1, 75h, 0Eh,	51h, 0E8h, 49h,	0E5h, 0FFh, 4Dh, 8, 57h
		db 2 dup(56h), 0E8h, 38h, 0EEh,	59h, 88h, 6Ch, 0Ah, 89h
		db 36h,	86h, 1,	0C3h, 8Bh, 0FEh, 0FFh, 74h, 0Ah, 0E8h
		db 2Fh,	0E5h, 8Fh, 44h,	0Ah, 0FFh, 4Ch,	8, 2 dup(0EBh)
		db 8Eh,	0C7h, 8Bh, 36h,	86h, 1,	8Dh, 7Ch, 0F4h,	89h, 3Eh
		db 86h,	1, 0E8h, 39h, 0E5h, 0EBh, 22h, 8Eh, 0C7h, 8Bh
		db 36h,	86h, 1,	8Dh, 7Ch, 0F4h,	89h, 3Eh, 86h, 1, 0E8h
		db 0D2h, 0E4h, 0EBh, 10h, 8Eh, 0C7h, 8Bh, 36h, 86h, 1
		db 8Dh,	7Ch, 0F4h, 89h,	3Eh, 86h, 1, 0E8h, 4, 0E5h, 0E8h
		db 0C8h, 0E5h, 80h, 7Dh, 0Ah, 0, 75h, 19h, 8Bh,	45h, 8
		db 3Dh,	1, 0C0h, 7Eh, 0Dh, 3Dh,	1, 40h,	7Dh, 0Ch, 0E8h
		db 23h,	0FDh, 89h, 36h,	86h, 1,	0C3h, 0B5h, 4, 0EBh, 2
		db 0B5h, 1, 0E8h, 3Fh, 2, 0B8h,	1, 40h,	8Bh, 0FEh, 0B1h
		db 0, 0E8h, 0Ah, 0E5h, 0EBh, 0E6h, 0B8h, 40h, 0, 0EBh
		db 0Eh,	8Eh, 0C7h, 8Bh,	36h, 86h, 1, 8Dh, 7Ch, 0F4h, 0EBh
		db 1Ch,	0B8h, 2Fh, 0, 8Eh, 0C7h, 8Bh, 36h, 86h,	1, 8Dh
		db 7Ch,	0F4h, 89h, 3Eh,	86h, 1,	0FFh, 0D0h, 56h, 57h, 56h
		db 0E8h, 5Fh, 0EFh, 89h, 36h, 86h, 1, 8Bh, 0ECh, 0B8h
		db 2 dup(0), 50h, 8Bh, 44h, 8, 3Dh, 0Bh, 0, 7Fh, 4Eh, 3Dh
		db 0C0h, 0FFh, 7Eh, 5Ah, 0E8h, 3Ch, 0E5h, 0FFh,	45h, 8
		db 0FFh, 36h, 84h, 1, 80h, 26h,	85h, 1,	0F3h, 80h, 0Eh
		db 85h,	1, 4, 8Bh, 0F7h, 0E8h, 34h, 0E9h, 8Fh, 6, 84h
		db 1, 50h, 8Bh,	0FCh, 0E8h, 85h, 0E5h, 0FFh, 4Ch, 8, 8Dh
		db 7Ch,	0Ch, 57h, 56h, 57h, 0E8h, 4Ah, 0EDh, 58h, 0D1h
		db 0F8h, 73h, 2Dh, 0C7h, 4, 85h, 64h, 0C7h, 44h, 2, 0DEh
		db 0F9h, 0C7h, 44h, 4, 33h, 0F3h, 0C7h,	44h, 6,	4, 0B5h
		db 0EBh, 2Bh, 8Bh, 0FEh, 0B5h, 8, 0E8h,	0A4h, 1, 0B8h
		db 1, 40h, 0B1h, 0, 0E8h, 71h, 0E4h, 0EBh, 40h,	8Bh, 0FEh
		db 0E8h, 0EFh, 0E3h, 0EBh, 39h,	0C7h, 4, 2 dup(0), 0C7h
		db 44h,	2, 2 dup(0), 0C7h, 44h,	4, 2 dup(0), 0C7h, 44h
		db 6, 0, 80h, 40h, 89h,	44h, 8,	0C6h, 44h, 0Ah,	0, 8Bh
		db 0FEh, 8Dh, 75h, 0Ch,	0E8h, 4Eh, 0FBh, 56h, 57h, 56h
		db 0E8h, 0BEh, 0EEh, 56h, 57h, 56h, 0E8h, 0EDh,	0ECh, 80h
		db 7Eh,	0FEh, 1, 75h, 4, 80h, 74h, 0Ah,	1, 89h,	36h, 86h
		db 1, 8Bh, 0E5h, 0C3h, 8Eh, 0C7h, 8Dh, 7Eh, 18h, 0B5h
		db 0, 8Bh, 0E9h, 0B0h, 0Ah, 0F6h, 0E1h,	3, 0F8h, 0BEh
		db 6Eh,	1, 83h,	0EEh, 0Ch, 83h,	0EFh, 0Ah, 0E8h, 0D3h
		db 0EBh, 4Dh, 7Fh, 0F4h, 8Bh, 0CEh, 2Bh, 0Eh, 86h, 1, 83h
		db 0EEh, 2, 0BFh, 6Ch, 1, 0FDh,	0D1h, 0E9h, 74h, 2, 0F3h
		db 0A5h, 2 dup(47h), 89h, 3Eh, 86h, 1, 0C3h, 8Eh, 0C7h
		db 0B5h, 0, 8Bh, 0E9h, 8Ah, 0D9h, 0B7h,	0, 2Eh,	8Ah, 9Fh
		db 2, 0, 8Bh, 36h, 86h,	1, 8Bh,	0FEh, 2Bh, 0FBh, 89h, 3Eh
		db 86h,	1, 0B9h, 6Eh, 1, 2Bh, 0CEh, 74h, 5, 0FCh, 0D1h
		db 0E9h, 0F3h, 0A5h, 8Dh
		db 76h,	18h, 0E8h, 0B0h, 0EBh, 83h, 0C7h, 0Ch, 83h, 0C6h
		db 0Ah,	4Dh, 7Fh, 0F4h,	0C3h, 8Bh, 1Eh,	86h, 1,	53h, 8Dh
		db 77h,	0Ch, 56h, 83h, 0C6h, 0Ch, 0EBh,	14h, 8Bh, 1Eh
		db 86h,	1, 53h,	8Dh, 77h, 0Ch, 56h, 0EBh, 9, 8Bh, 36h
		db 86h,	1, 56h,	8Dh, 5Ch, 0Ch, 53h, 8Eh, 0C7h, 0E8h, 0FBh
		db 0F3h, 89h, 36h, 86h,	1, 88h,	66h, 16h, 0C3h,	80h, 26h
		db 85h,	1, 0FCh, 0EBh, 5, 80h, 26h, 85h, 1, 0FEh, 8Eh
		db 0C7h, 8Bh, 1Eh, 86h,	1, 53h,	8Dh, 77h, 0Ch, 56h, 0E8h
		db 0D9h, 0F3h, 80h, 0Eh, 85h, 1, 3, 83h, 0C6h, 0Ch, 89h
		db 36h,	86h, 1,	88h, 66h, 16h, 0C3h, 8Eh, 0C7h,	8Bh, 36h
		db 86h,	1, 0E8h, 80h, 0F4h, 88h, 66h, 16h, 0C3h, 8Eh, 0C7h
		db 8Bh,	36h, 86h, 1, 0E8h, 0B0h, 0F4h, 89h, 46h, 0Eh, 0C3h
		db 71h,	1Ch, 0A9h, 1Ch,	0Fh, 1Dh, 16h, 1Dh, 0E0h, 1Ch
		db 0EEh, 1Ch, 39h, 1Dh,	46h, 1Dh, 0E1h,	19h, 0E5h, 19h
		db 0E9h, 19h, 0CAh, 1Ah, 2Ah, 1Bh, 3Ch,	1Bh, 4Eh, 1Bh
		db 91h,	1Bh, 96h, 1Bh, 0A1h, 1Bh
e086_Shortcut	db 0FBh, 0FCh, 52h, 50h, 53h, 55h, 56h,	57h, 6,	51h, 1Eh
					; DATA XREF: __EMURESET+33o
		db 8Bh,	0ECh, 36h, 89h,	2Eh, 8Ch, 1, 0C5h, 76h,	12h, 0ADh
		db 89h,	76h, 12h, 8Ch, 0D7h, 8Eh, 0DFh,	8Ah, 0CCh, 98h
		db 93h,	80h, 0FBh, 0DCh, 72h, 1Dh, 2Eh,	0FFh, 97h, 77h
		db 1Dh,	36h, 81h, 3Eh, 86h, 1, 6Eh, 1, 77h, 16h, 36h, 8Bh
		db 26h,	8Ch, 1,	1Fh, 59h, 7, 5Fh, 5Eh, 5Dh, 5Bh, 58h, 5Ah
		db 0CFh, 0B5h, 1, 0E8h,	5, 0, 0EBh, 0EAh, 0CCh,	0EBh, 0E7h
; [COLLAPSED FUNCTION sub_643_1DC4, 0000005F BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION sub_643_1E23, 0000002F BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	al, es:[si+9]
		and	ax, 80h
		rol	al, 1
		mov	[di+0Ah], ax
		mov	cl, 4
		mov	al, es:[si+8]
		shl	ax, cl
		shr	al, cl
		aad	
		mov	di, 2710h
		mul	di
		xchg	ax, bx
		lea	si, [si+6]
		call	sub_643_1E23
		add	ax, bx
		adc	dl, dh
		mov	bx, dx
		mul	di
		xchg	ax, bx
		mov	cx, dx
		mul	di
		add	cx, ax
		adc	dl, dh
		sub	si, 2
		call	sub_643_1E23
		add	ax, bx
		adc	cx, 0
		adc	dl, dh
		push	si
		mov	bx, dx
		mul	di
		xchg	ax, cx
		mov	si, dx
		mul	di
		xchg	ax, bx
		xchg	di, dx
		mul	dx
		add	bx, si
		adc	di, ax
		pop	si
		sub	si, 2
		call	sub_643_1E23
		add	ax, cx
		adc	bx, dx
		adc	di, dx
		mov	si, 2710h
		mul	si
		xchg	ax, bx
		mov	cx, dx
		mul	si
		xchg	ax, si
		xchg	di, dx
		mul	dx
		add	cx, si
		adc	di, ax
		adc	dx, 0
		mov	si, [bp-2]
		call	sub_643_1E23
		add	bx, ax
		adc	cx, 0
		adc	di, 0
		adc	dx, 0
		mov	ax, 40h	; '@'

loc_643_1EE3:				; CODE XREF: seg002:1EF2j
		or	dx, dx
		jnz	loc_643_1EF4
		sub	ax, 10h
		jz	loc_643_1F18
		xchg	dx, di
		xchg	di, cx
		xchg	cx, bx
		jmp	short loc_643_1EE3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1EF4:				; CODE XREF: seg002:1EE5j
		js	loc_643_1F01

loc_643_1EF6:				; CODE XREF: seg002:1EFFj
		dec	ax
		shl	bx, 1
		rcl	cx, 1
		rcl	di, 1
		adc	dx, dx
		jns	loc_643_1EF6

loc_643_1F01:				; CODE XREF: seg002:1EF4j seg002:1F1Bj
		mov	si, [bp-4]
		mov	[si], bx
		mov	[si+2],	cx
		mov	[si+4],	di
		mov	[si+6],	dx
		mov	[si+8],	ax
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1F18:				; CODE XREF: seg002:1EEAj
		mov	ax, 0C001h
		jmp	short loc_643_1F01
; [COLLAPSED FUNCTION sub_643_1F1D, 0000001E BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	si
		push	di
		cld	
		mov	ax, [si+8]
		mov	bx, [si]
		mov	cx, [si+2]
		mov	dx, [si+6]
		mov	si, [si+4]
		cmp	ax, 0
		jl	loc_643_1F8C
		sub	ax, 3Ch	; '<'
		jl	loc_643_1F78
		jg	loc_643_1F8E
		cmp	dx, 0DE0Bh
		jb	loc_643_1F78
		ja	loc_643_1F8E
		cmp	si, 6B3Ah
		jb	loc_643_1F78
		ja	loc_643_1F8E
		cmp	cx, 763Fh
		jb	loc_643_1F78
		ja	loc_643_1F8E
		cmp	bx, 0FFF0h
		ja	loc_643_1F8E

loc_643_1F78:				; CODE XREF: seg002:1F57j seg002:1F5Fj ...
		mov	ah, 0
		sub	al, 4

loc_643_1F7C:				; CODE XREF: seg002:1F8Aj
		add	al, 10h
		jg	loc_643_1F90
		mov	ah, bh
		mov	bx, cx
		mov	cx, si
		mov	si, dx
		sub	dx, dx
		jmp	short loc_643_1F7C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1F8C:				; CODE XREF: seg002:1F52j
		jmp	short loc_643_1FF5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1F8E:				; CODE XREF: seg002:1F59j seg002:1F61j ...
		jmp	short loc_643_1FFE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1F90:				; CODE XREF: seg002:1F7Ej
		sub	al, 10h
		jge	loc_643_1FA2

loc_643_1F94:				; CODE XREF: seg002:1FA0j
		shr	dx, 1
		rcr	si, 1
		rcr	cx, 1
		rcr	bx, 1
		rcr	ah, 1
		inc	al
		jl	loc_643_1F94

loc_643_1FA2:				; CODE XREF: seg002:1F92j
		add	ah, ah
		adc	bx, 0
		adc	cx, 0
		adc	si, 0
		adc	dx, 0
		xchg	ax, si
		mov	si, 2710h
		div	si
		xchg	ax, cx
		div	si
		xchg	ax, bx
		div	si
		call	sub_643_1F1D
		sub	dx, dx
		xchg	ax, cx
		div	si
		xchg	ax, bx
		div	si
		xchg	ax, cx
		div	si
		call	sub_643_1F1D
		mov	dx, bx
		xchg	ax, cx
		div	si
		xchg	ax, cx
		div	si
		call	sub_643_1F1D
		mov	dx, cx
		div	si
		call	sub_643_1F1D
		aam	
		mov	cl, 4
		shl	ah, cl
		or	al, ah
		stosb

loc_643_1FE8:				; CODE XREF: seg002:1FFCj
		mov	si, [bp-2]
		mov	al, [si+0Ah]
		ror	al, 1
		stosb
		pop	di
		pop	si
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1FF5:				; CODE XREF: seg002:1F8Cj
		mov	al, 0

loc_643_1FF7:				; CODE XREF: seg002:2005j
		mov	cx, 9
		repe stosb
		jmp	short loc_643_1FE8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_643_1FFE:				; CODE XREF: seg002:1F8Ej
		mov	ch, 8
		call	sub_643_1DC4
		mov	al, 99h	; ''
		jmp	short loc_643_1FF7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 0FEh, 20h, 8, 21h, 12h, 21h,	1Ch, 21h, 26h, 21h, 2Dh
		db 21h,	4Bh, 21h, 34h, 21h, 0D1h, 24h, 46h, 25h, 0ACh
		db 25h,	0AEh, 25h, 0A1h, 6, 9Ah, 2, 0A5h, 7, 43h, 1, 0DCh
		db 21h,	0E3h, 21h, 0EDh, 21h, 0EAh, 21h, 0F4h, 21h, 0F3h
		db 21h,	0FCh, 21h, 0FBh, 21h, 0A1h, 6, 9Ah, 2, 0A5h, 7
		db 43h,	1, 27h,	6, 0E2h, 2, 1, 7, 78h, 1, 74h, 22h, 6Eh
		db 22h,	0Bh, 23h, 98h, 22h, 7Dh, 22h, 0A8h, 22h, 6Eh, 22h
		db 88h,	22h, 0B8h, 22h,	6Eh, 22h, 0D9h,	22h, 6Fh, 23h
		db 41h,	23h, 7Ch, 23h, 46h, 23h, 62h, 23h, 0B5h, 1, 0E8h
		db 58h,	0FDh, 0E9h, 6Dh, 5, 77h, 24h, 0F6h, 0C4h, 20h
		db 75h,	0F1h, 42h, 8Ah,	0C4h, 8Ch, 0DFh, 24h, 0C0h, 74h
		db 0Eh,	3Ch, 80h, 8Ch, 0D7h, 72h, 8, 8Bh, 7Eh, 4, 77h
		db 3, 8Bh, 7Eh,	14h, 26h, 0ACh,	86h, 0E0h, 24h,	7, 0EBh
		db 32h,	3Ch, 9,	75h, 9,	26h, 0C7h, 44h,	0FDh, 89h, 0E4h
		db 0E9h, 3Ah, 5, 0E9h, 5Ch, 0FDh, 8Eh, 1
e086_Entry	db 0FBh, 0FCh, 52h, 50h, 53h, 55h, 56h,	57h, 6,	51h, 1Eh
					; DATA XREF: __EMURESET+29o
		db 8Bh,	0ECh, 36h, 89h,	2Eh, 8Ch, 1, 0C4h, 76h,	12h, 4Eh
		db 0B2h, 0, 26h, 0ADh, 2Ch, 34h, 3Ch, 8, 73h, 0A8h, 0BBh
		db 7, 0C0h, 22h, 0DCh, 22h, 0FCh, 91h, 80h, 0FFh, 0C0h
		db 73h,	67h, 80h, 0FFh,	40h, 77h, 12h, 74h, 14h, 2Bh, 0C0h
		db 80h,	0FBh, 6, 75h, 10h, 26h,	0ADh, 89h, 76h,	12h, 8Ch
		db 0DEh, 0EBh, 65h, 26h, 0ADh, 0EBh, 3,	26h, 0ACh, 98h
		db 89h,	76h, 12h, 0B7h,	0, 0D1h, 0E3h, 2Eh, 0FFh, 0A7h
		db 7, 20h, 3, 46h, 0Ch,	3, 46h,	8, 8Ch,	0DEh, 0EBh, 48h
		db 3, 46h, 0Ch,	3, 46h,	6, 8Ch,	0DEh, 0EBh, 3Eh, 3, 46h
		db 0Ah,	3, 46h,	8, 8Ch,	0D6h, 0EBh, 34h, 3, 46h, 0Ah, 3
		db 46h,	6, 8Ch,	0D6h, 0EBh, 2Ah, 3, 46h, 8, 8Ch, 0DEh
		db 0EBh, 23h, 3, 46h, 6, 8Ch, 0DEh, 0EBh, 1Ch, 3, 46h
		db 0Ch,	8Ch, 0DEh, 0EBh, 15h, 89h, 76h,	12h, 8Ch, 0D0h
		db 8Eh,	0D8h, 8Eh, 0C0h, 0F6h, 0C1h, 1,	74h, 33h, 0EBh
		db 17h,	3, 46h,	0Ah, 8Ch, 0D6h,	96h, 80h, 0FAh,	1, 75h
		db 1, 97h, 8Eh,	0C0h, 8Ch, 0D0h, 8Eh, 0D8h, 0F6h, 0C1h
		db 1, 74h, 1Ah,	80h, 0FDh, 0C0h, 73h, 3, 0E9h, 99h, 0
		db 0F6h, 0C5h, 20h, 75h, 3, 0E9h, 37h, 2, 0BBh,	6, 0, 22h
		db 0D9h, 2Eh, 0FFh, 0A7h, 17h, 20h, 0B8h, 38h, 0, 22h
		db 0C5h, 0D1h, 0E8h, 0D1h, 0E8h, 95h, 80h, 0FDh, 0C0h
		db 73h,	2Ah, 8Bh, 3Eh, 86h, 1, 83h, 0EFh, 0Ch, 89h, 3Eh
		db 86h,	1, 0BBh, 6, 0, 22h, 0D9h, 2Eh, 0FFh, 97h, 1Fh
		db 20h,	8Ch, 0D1h, 8Eh,	0C1h, 0BEh, 0Ch, 0, 8Bh, 0DFh
		db 8Dh,	0, 8Bh,	0D0h, 0B9h, 0D7h, 25h, 2Eh, 0FFh, 0A6h
		db 27h,	20h, 0B7h, 0, 2Eh, 8Ah,	9Fh, 2,	0, 0A1h, 86h, 1
		db 3, 0D8h, 0F6h, 0C1h,	4, 8Bh,	0D0h, 74h, 2, 8Bh, 0D3h
		db 2Bh,	2 dup(0F6h), 0C1h, 2, 74h, 3, 0BEh, 0Ch, 0, 0B9h
		db 0D7h, 25h, 2Eh, 0FFh, 0A6h, 27h, 20h, 50h, 53h, 52h
		db 51h,	0E9h, 6Ah, 0E7h, 50h, 53h, 52h,	51h, 0E9h, 2Eh
		db 0E9h, 83h, 0C6h, 0Ch, 50h, 53h, 51h,	0E9h, 0Fh, 0EFh
		db 93h,	50h, 53h, 52h, 51h, 0E9h, 4Eh, 0E7h, 93h, 50h
		db 53h,	52h, 51h, 0E9h,	0DDh, 0EAh, 0BDh, 6, 0,	23h, 0E9h
		db 0F6h, 0C5h, 20h, 75h, 42h, 0F6h, 0C5h, 10h, 75h, 1Ah
		db 0F6h, 0C5h, 8, 75h, 54h, 8Bh, 3Eh, 86h, 1, 0B8h, 0F4h
		db 0FFh, 3, 0F8h, 0A3h,	88h, 1,	0B8h, 0D2h, 25h, 50h, 2Eh
		db 0FFh, 0A6h, 37h, 20h, 8Bh, 3Eh, 86h,	1, 87h,	0F7h, 0F6h
		db 0C5h, 8, 75h, 9, 0B8h, 0DCh,	25h, 50h, 2Eh, 0FFh, 0A6h
		db 3Fh,	20h, 0C7h, 6, 88h, 1, 0Ch, 0, 0B8h, 0D2h, 25h
		db 50h,	2Eh, 0FFh, 0A6h, 3Fh, 20h, 0B8h, 8, 0, 22h, 0C5h
		db 0Bh,	0E8h, 0B8h, 0DCh, 25h, 50h, 0F6h, 0C5h,	10h, 75h
		db 5, 2Eh, 0FFh, 0A6h, 47h, 20h, 87h, 0F7h, 2Eh, 0FFh
		db 0A6h, 57h, 20h, 0E9h, 6Eh, 3, 0B5h, 1, 0E8h,	51h, 0FBh
		db 0C3h, 0B1h, 4, 26h, 8Bh, 44h, 2, 0A3h, 82h, 1, 26h
		db 8Bh,	4, 0A3h, 84h, 1, 0B5h, 0, 0E9h,	3Ch, 0FBh, 8Bh
		db 3Eh,	86h, 1,	83h, 0EFh, 0Ch,	0E8h, 27h, 0E1h, 83h, 2Eh
		db 86h,	1, 0Ch,	0C3h, 8Bh, 3Eh,	86h, 1,	83h, 0EFh, 0Ch
		db 0E8h, 0B0h, 0FBh, 83h, 2Eh, 86h, 1, 0Ch, 0C3h
		db 8Bh,	3Eh, 86h, 1, 83h, 0EFh,	0Ch, 0E8h, 0D4h, 0E5h
		db 83h,	2Eh, 86h, 1, 0Ch, 0C3h,	0E8h, 86h, 0, 0E8h, 88h
		db 0, 0B8h, 6Eh, 1, 2Bh, 6, 86h, 1, 0B2h, 0Ch, 0F6h, 0F2h
		db 0B9h, 2 dup(0FFh), 91h, 3, 0C9h, 0D3h, 0E8h,	0ABh, 2Bh
		db 0C0h, 4 dup(0ABh), 0C3h, 0E8h, 0DCh,	0FFh, 8Bh, 36h
		db 86h,	1, 26h,	8Bh, 6Dh, 0F6h,	81h, 0CDh, 2 dup(55h)
		db 0EBh, 0Fh, 0E8h, 72h, 0E5h, 83h, 0C6h, 0Ch, 83h, 0C7h
		db 0Ah,	0D1h, 0E5h, 0D1h, 0E5h,	74h, 11h, 79h, 0EFh, 0EBh
		db 0Bh,	2Bh, 0C0h, 0B9h, 5, 0, 0F3h, 0ABh, 0D1h, 0E5h
		db 0D1h, 0E5h, 75h, 0F3h, 0C3h,	0BFh, 6Eh, 1, 26h, 8Bh
		db 6Ch,	4, 83h,	0C6h, 54h, 81h,	0CDh, 2	dup(55h), 0D1h
		db 0EDh, 0D1h, 0EDh, 73h, 0Bh, 83h, 0EEh, 0Ah, 0Bh, 0EDh
		db 75h,	0F3h, 0EBh, 0Fh, 0D1h, 0EDh, 83h, 0EFh,	0Ch, 0E8h
		db 56h,	0E5h, 83h, 0EEh, 0Ah, 0D1h, 0EDh, 72h, 0F1h, 89h
		db 3Eh,	86h, 1,	83h, 0C6h, 0FCh, 0E9h, 33h, 0FFh, 0A1h
		db 84h,	1, 0ABh, 0C3h, 0A1h, 86h, 1, 2Dh, 6Eh, 1, 0B1h
		db 0Ch,	0F6h, 0F9h, 24h, 7, 0B1h, 3, 0D2h, 0E0h, 8Bh, 0Eh
		db 82h,	1, 80h,	0E5h, 0C7h, 0Ah, 0E8h, 91h, 0ABh, 0C3h
		db 8Bh,	36h, 86h, 1, 0E8h, 0C2h, 0E0h, 83h, 6, 86h, 1
		db 0Ch,	0C3h, 8Bh, 36h,	86h, 1,	0E8h, 0C5h, 0FBh, 83h
		db 6, 86h, 1, 0Ch, 0C3h, 8Bh, 36h, 86h,	1, 0E8h, 0DCh
		db 0E4h, 83h, 6, 86h, 1, 0Ch, 0C3h, 0C8h, 23h, 1Bh, 24h
		db 0DCh, 23h, 0D6h, 23h, 22h, 24h, 1Bh,	24h, 22h, 24h
		db 22h,	24h, 16h, 24h, 1Bh, 24h, 33h, 24h, 3Eh,	24h, 3Eh
		db 24h,	1Bh, 24h, 3Eh, 24h, 3Eh, 24h, 0B7h, 0, 2Eh, 8Ah
		db 9Fh,	2, 0, 8Bh, 36h,	86h, 1,	3, 0F3h, 0B3h, 18h, 22h
		db 0DDh, 80h, 0E1h, 6, 0Ah, 0D9h, 0FCh,	0B9h, 6, 0, 2Eh
		db 0FFh, 0A7h, 89h, 23h, 83h, 2Eh, 86h,	1, 0Ch,	8Bh, 3Eh
		db 86h,	1, 0F3h, 0A5h, 0E9h, 6,	2, 0BFh, 0Ch, 0, 0EBh
		db 4, 90h, 0BFh, 2 dup(0), 81h,	0FEh, 62h, 1, 74h, 10h
		db 87h,	0FEh, 0B8h, 1, 40h, 0B1h, 0, 0E8h, 0AAh, 0DCh
		db 1, 36h, 86h,	1, 0EBh, 55h, 83h, 0C7h, 0Ch, 8Bh, 0D7h
		db 8Bh,	0CEh, 2Bh, 0Eh,	86h, 1,	74h, 0Eh, 16h, 7, 83h
		db 0EEh, 2, 0BFh, 6Ch, 1, 0FDh,	0D1h, 0E9h, 0F3h, 0A5h
		db 0FCh, 1, 16h, 86h, 1, 0EBh, 34h, 0F6h, 0C5h,	7, 74h
		db 2Fh,	0B5h, 1, 0E8h, 0A4h, 0F9h, 0EBh, 28h, 8Bh, 3Eh
		db 86h,	1, 8Bh,	5, 87h,	4, 0ABh, 83h, 0C6h, 2, 0E2h, 0F6h
		db 0E9h, 0A9h, 1, 8Bh, 0FEh, 8Bh, 36h, 86h, 1, 0F3h, 0A5h
		db 0E9h, 9Eh, 1, 8Bh, 0FEh, 8Bh, 36h, 86h, 1, 0F3h, 0A5h
		db 89h,	36h, 86h, 1, 0E9h, 8Fh,	1, 8 dup(4), 7 dup(0)
		db 2 dup(4), 8,	6, 8, 6, 4, 2, 0, 0Ah, 8, 3 dup(4), 0Ah
		db 2 dup(4), 0ADh, 24h,	0B2h, 24h, 0BFh, 24h, 0BFh, 24h
		db 0C2h, 11h, 0FFh, 11h, 0BFh, 24h, 0BFh, 24h, 1Eh, 0
		db 2Fh,	0, 40h,	0, 51h,	0, 62h,	0, 73h,	0, 84h,	0, 0BFh
		db 24h,	0A2h, 17h, 9Ah,	18h, 24h, 15h, 1Ah, 16h, 0B7h
		db 24h,	0BFh, 24h, 0BFh, 24h, 0BFh, 24h, 0FAh, 0Fh, 51h
		db 19h,	2Dh, 0Fh, 0BFh,	24h, 1Dh, 5, 30h, 2, 0BFh, 24h
		db 0BFh, 24h, 80h, 74h,	0Ah, 1,	0C3h, 0C6h, 44h, 0Ah, 0
		db 0C3h, 56h, 57h, 0E8h, 40h, 0DDh, 5Fh, 5Eh, 0C3h, 0B5h
		db 1, 0E9h, 0, 0F9h, 0C3h, 0E4h, 24h, 1Bh, 25h,	0F7h, 24h
		db 6, 25h, 23h,	25h, 36h, 25h, 0BBh, 1Fh, 0, 22h, 0DDh
		db 2Eh,	8Ah, 87h, 4Dh, 24h, 98h, 97h, 0D1h, 0E3h, 2Eh
		db 0FFh, 0A5h, 0C5h, 24h, 8Bh, 3Eh, 86h, 1, 83h, 0EFh
		db 0Ch,	2Eh, 0FFh, 97h,	6Dh, 24h, 89h, 3Eh, 86h, 1, 0E9h
		db 0E5h, 0, 8Bh, 36h, 86h, 1, 8Bh, 0FEh, 0B8h, 0DCh, 25h
		db 50h,	2Eh, 0FFh, 0A7h, 6Dh, 24h, 8Bh,	36h, 86h, 1, 8Bh
		db 0FEh, 83h, 0EFh, 0Ch, 2Eh, 0FFh, 97h, 6Dh, 24h, 89h
		db 3Eh,	86h, 1,	0E9h, 0C1h, 0, 83h, 6, 86h, 1, 0Ch, 0E9h
		db 0B9h, 0, 8Bh, 3Eh, 86h, 1, 8Dh, 75h,	0Ch, 2Eh, 0FFh
		db 97h,	6Dh, 24h, 89h, 36h, 86h, 1, 0E9h, 0A6h,	0, 8Bh
		db 3Eh,	86h, 1,	8Dh, 75h, 0Ch, 0B8h, 0DCh, 25h,	50h, 2Eh
		db 0FFh, 0A7h, 6Dh, 24h, 80h, 0E5h, 1Fh, 80h, 0FDh, 3
		db 75h,	4Ah, 0BFh, 6Eh,	1, 89h,	3Eh, 86h, 1, 0B8h, 1, 40h
		db 0B1h, 0, 0E8h, 3Ch, 0DBh, 8Dh, 75h, 0Ah, 83h, 0EFh
		db 2, 0FDh, 83h, 0ECh, 60h, 0B9h, 30h, 0, 0F3h,	0A5h, 0C7h
		db 6, 82h, 1, 0, 41h, 0C7h, 6, 84h, 1, 3Fh, 3, 0C7h, 6
		db 88h,	1, 2 dup(0), 0C7h, 6, 86h, 1, 6Eh, 1, 0C7h, 6
		db 8Eh,	1, 65h,	6Dh, 0C7h, 6, 90h, 1, 75h, 87h,	0C7h, 6
		db 92h,	2 dup(1), 0, 0EBh, 11h,	80h, 0FDh, 2, 75h, 7, 0C6h
		db 6, 82h, 1, 0, 0EBh, 5, 0B5h,	1, 0E8h, 1Bh, 0F8h, 0EBh
		db 31h,	90h, 0EBh, 2 dup(0F6h),	0C5h, 1Fh, 75h,	0F1h, 0A1h
		db 86h,	1, 2Dh,	6Eh, 1,	0B1h, 0Ch, 0F6h, 0F9h, 24h, 7
		db 0B1h, 3, 0D2h, 0E0h,	8Bh, 0Eh, 82h, 1, 80h, 0E5h, 0C7h
		db 0Ah,	0E8h, 89h, 4Eh,	0Eh, 0EBh, 0Bh,	90h, 36h, 8Bh
		db 36h,	88h, 1,	36h, 1,	36h, 86h, 1, 36h, 81h, 3Eh, 86h
		db 1, 6Eh, 1, 77h, 0Fh,	36h, 8Bh, 26h, 8Ch, 1, 1Fh, 59h
		db 7, 5Fh, 5Eh,	5Dh, 5Bh, 58h, 5Ah, 0CFh, 0CCh,	0EBh, 0EEh
		db 9 dup(0)
seg002		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg003		segment	byte public 'CODE' use16
		assume cs:seg003
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
tbyte_8A3_0	dt 7.8539816339744830963e-1 ; DATA XREF: seg003:0084r
					; seg003:0157r
tbyte_8A3_A	dt 1.5707963267948966193 ; DATA	XREF: seg003:014Cr
					; seg003:017Dr
flt_8A3_14	dd -5.1110893e38	; DATA XREF: seg003:0067r seg003:0075r
flt_8A3_18	dd -5.1117124e38	; DATA XREF: seg003:01CCr
flt_8A3_1C	dd -5.1119201e38	; DATA XREF: seg003:024Cr
flt_8A3_20	dd 5.0e-1		; DATA XREF: seg003:0260r
tbyte_8A3_24	dt 1.4142135623730950489 ; DATA	XREF: seg003:02C7r
flt_8A3_2E	dd 3.4028237e38		; DATA XREF: seg003:011Dr
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 0
		jmp	short loc_8A3_3C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 2
		jmp	short loc_8A3_3C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	cl, 4

loc_8A3_3C:				; CODE XREF: seg003:0034j seg003:0038j
		wait	
		fxam	
		push	bp
		mov	bp, sp
		lea	sp, [bp-2]
		fstsw	word ptr [bp-2]
		wait	
		mov	ah, [bp-1]
		sahf	
		jb	loc_8A3_5F
		jnz	loc_8A3_80
		cmp	cl, 2
		jnz	loc_8A3_5D
		wait	
		fstp	st
		wait	
		fld1	

loc_8A3_5D:				; CODE XREF: seg003:0055j
		jmp	short loc_8A3_7D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_5F:				; CODE XREF: seg003:004Ej
		jz	loc_8A3_6F
		jnp	loc_8A3_6F
		wait	
		fstp	st
		wait	
		fld	cs:flt_8A3_14
		wait	
		ftst	

loc_8A3_6F:				; CODE XREF: seg003:005Fj seg003:0061j
		jmp	short loc_8A3_7D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_71:				; CODE XREF: seg003:009Ej
		wait	
		fcompp	st(1), st
		wait	
		fld	cs:flt_8A3_14
		wait	
		ftst	

loc_8A3_7D:				; CODE XREF: seg003:005Dj seg003:006Fj
		jmp	loc_8A3_127
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_80:				; CODE XREF: seg003:0050j
		wait	
		fabs	
		wait	
		fld	cs:tbyte_8A3_0
		wait	
		fxch	st(1)
		wait	
		fprem	
		mov	ch, 2
		and	ch, ah
		shr	ch, 1
		fstsw	word ptr [bp-2]
		wait	
		mov	ah, [bp-1]
		sahf	
		jp	loc_8A3_71
		mov	al, 3
		and	al, ah
		shl	ah, 1
		shl	ah, 1
		rcl	al, 1
		add	al, 0FCh ; 'ü'
		rcl	al, 1
		cmp	cl, 2
		jnz	loc_8A3_B7
		add	al, cl
		mov	ch, 0

loc_8A3_B7:				; CODE XREF: seg003:00B1j
		and	al, 7
		test	al, 1
		jz	loc_8A3_C2
		wait	
		fsubp	st(1), st
		jmp	short loc_8A3_C5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_C2:				; CODE XREF: seg003:00BBj
		wait	
		fstp	st(1)

loc_8A3_C5:				; CODE XREF: seg003:00C0j
		wait	
		fptan	
		cmp	cl, 4
		jz	loc_8A3_F6
		test	al, 3
		jp	loc_8A3_D4
		wait	
		fxch	st(1)

loc_8A3_D4:				; CODE XREF: seg003:00CFj
		wait	
		fld	st(1)
		wait	
		fmul	st, st
		wait	
		fxch	st(1)
		wait	
		fmul	st, st
		wait	
		faddp	st(1), st
		wait	
		fsqrt	
		shr	al, 1
		shr	al, 1
		xor	al, ch
		jz	loc_8A3_F1
		wait	
		fchs	

loc_8A3_F1:				; CODE XREF: seg003:00ECj
		wait	
		fdivp	st(1), st
		jmp	short loc_8A3_127
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_F6:				; CODE XREF: seg003:00CBj
		mov	ah, al
		shr	ah, 1
		and	ah, 1
		xor	ah, ch
		jz	loc_8A3_104
		wait	
		fchs	

loc_8A3_104:				; CODE XREF: seg003:00FFj
		test	al, 3
		jp	loc_8A3_124
		wait	
		fxch	st(1)
		wait	
		ftst	
		fstsw	word ptr [bp-2]
		wait	
		test	byte ptr [bp-1], 40h
		jz	loc_8A3_124
		wait	
		fcompp	st(1), st
		wait	
		fld	cs:flt_8A3_2E
		jmp	short loc_8A3_127
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_124:				; CODE XREF: seg003:0106j seg003:0117j
		wait	
		fdivp	st(1), st

loc_8A3_127:				; CODE XREF: seg003:007Dj seg003:00F4j ...
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fxam	
		push	bp
		mov	bp, sp
		lea	sp, [bp-2]
		fstsw	word ptr [bp-2]
		wait	
		mov	ah, [bp-1]
		sahf	
		xchg	ax, cx
		jb	loc_8A3_144
		jnz	loc_8A3_15E
		jmp	short loc_8A3_190
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_144:				; CODE XREF: seg003:013Ej
		jz	loc_8A3_190
		jnp	loc_8A3_190
		wait	
		fstp	st
		wait	
		fld	cs:tbyte_8A3_A
		jmp	short loc_8A3_188
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_153:				; CODE XREF: seg003:0170j
		wait	
		fcompp	st(1), st
		wait	
		fld	cs:tbyte_8A3_0
		jmp	short loc_8A3_188
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_15E:				; CODE XREF: seg003:0140j
		wait	
		fabs	
		wait	
		fld1	
		wait	
		fcom	st(1)
		fstsw	word ptr [bp-2]
		wait	
		mov	ah, [bp-1]
		sahf	
		jz	loc_8A3_153
		jnb	loc_8A3_177
		wait	
		fxch	st(1)

loc_8A3_177:				; CODE XREF: seg003:0172j
		wait	
		fpatan	
		jnb	loc_8A3_188
		wait	
		fld	cs:tbyte_8A3_A
		wait	
		fsubp	st(1), st
		xor	ch, 2

loc_8A3_188:				; CODE XREF: seg003:0151j seg003:015Cj ...
		test	ch, 2
		jz	loc_8A3_190
		wait	
		fchs	

loc_8A3_190:				; CODE XREF: seg003:0142j seg003:0144j ...
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fld1	
		jmp	short loc_8A3_1A1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fldlg2	
		jmp	short loc_8A3_1A1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fldln2	

loc_8A3_1A1:				; CODE XREF: seg003:0197j seg003:019Cj
		wait	
		fxch	st(1)
		push	bp
		mov	bp, sp
		wait	
		fxam	
		lea	sp, [bp-0Ah]
		fstsw	word ptr [bp-0Ah]
		wait	
		mov	ah, [bp-9]
		sahf	
		jb	loc_8A3_1C4
		jz	loc_8A3_1BF
		test	ah, 2
		jz	loc_8A3_1D6

loc_8A3_1BF:				; CODE XREF: seg003:01B8j
		wait	
		fstp	st
		jmp	short loc_8A3_1C8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_1C4:				; CODE XREF: seg003:01B6j
		jz	loc_8A3_1D1
		jnp	loc_8A3_1D1

loc_8A3_1C8:				; CODE XREF: seg003:01C2j
		wait	
		fstp	st
		wait	
		fld	cs:flt_8A3_18

loc_8A3_1D1:				; CODE XREF: seg003:01C4j seg003:01C6j
		wait	
		ftst	
		jmp	short loc_8A3_1FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_1D6:				; CODE XREF: seg003:01BDj
		wait	
		fld	st
		wait	
		fstp	tbyte ptr [bp-0Ah]
		wait	
		cmp	word ptr [bp-2], 3FFFh
		jnz	loc_8A3_1F7
		cmp	word ptr [bp-4], 8000h
		jnz	loc_8A3_1F7
		wait	
		fld1	
		wait	
		fsubp	st(1), st
		wait	
		fyl2xp1	
		jmp	short loc_8A3_1FA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_1F7:				; CODE XREF: seg003:01E3j seg003:01EAj
		wait	
		fyl2x	

loc_8A3_1FA:				; CODE XREF: seg003:01D4j seg003:01F5j
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fldl2e	
		mov	cl, 1
		jmp	short loc_8A3_210
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		sub	cx, cx
		jmp	short loc_8A3_210
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fldl2t	
		mov	cl, 1
		jmp	short $+2

loc_8A3_210:				; CODE XREF: seg003:0203j seg003:0207j
		jcxz	loc_8A3_215
		wait	
		fxch	st(1)

loc_8A3_215:				; CODE XREF: seg003:0210j
		wait	
		fxam	
		push	bp
		mov	bp, sp
		lea	sp, [bp-4]
		fstsw	word ptr [bp-4]
		jcxz	loc_8A3_227
		wait	
		fxch	st(1)

loc_8A3_227:				; CODE XREF: seg003:0222j
		wait	
		mov	ah, [bp-3]
		sahf	
		xchg	ax, bx
		jb	loc_8A3_23F
		jnz	loc_8A3_257
		wait	
		fstp	st
		jcxz	loc_8A3_239
		wait	
		fstp	st

loc_8A3_239:				; CODE XREF: seg003:0234j
		wait	
		fld1	
		jmp	loc_8A3_2E7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_23F:				; CODE XREF: seg003:022Dj
		jcxz	loc_8A3_244
		wait	
		fstp	st

loc_8A3_244:				; CODE XREF: seg003:023Fj
		jz	loc_8A3_251
		jnp	loc_8A3_251

loc_8A3_248:				; CODE XREF: seg003:02B6j
		wait	
		fstp	st
		wait	
		fld	cs:flt_8A3_1C

loc_8A3_251:				; CODE XREF: seg003:0244j seg003:0246j
		wait	
		ftst	
		jmp	loc_8A3_2E7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_257:				; CODE XREF: seg003:022Fj
		jcxz	loc_8A3_25C
		wait	
		fmulp	st(1), st

loc_8A3_25C:				; CODE XREF: seg003:0257j
		wait	
		fabs	
		wait	
		fcom	cs:flt_8A3_20
		fstsw	word ptr [bp-4]
		wait	
		test	byte ptr [bp-3], 41h
		jz	loc_8A3_27B
		wait	
		f2xm1	
		wait	
		fld1	
		wait	
		faddp	st(1), st
		jmp	short loc_8A3_2DC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_27B:				; CODE XREF: seg003:026Ej
		wait	
		fld1	
		wait	
		fld	st(1)
		fstcw	word ptr [bp-4]
		wait	
		fscale	
		or	byte ptr [bp-3], 0Fh
		wait	
		fldcw	word ptr [bp-4]
		wait	
		frndint	
		and	byte ptr [bp-3], 0F3h
		wait	
		fldcw	word ptr [bp-4]
		wait	
		fist	word ptr [bp-2]
		wait	
		fxch	st(1)
		wait	
		fchs	
		wait	
		fxch	st(1)
		wait	
		fscale	
		wait	
		fstp	st(1)
		wait	
		fsubp	st(1), st
		cmp	word ptr [bp-2], 0FFFh
		jg	loc_8A3_248
		wait	
		f2xm1	
		wait	
		fld1	
		wait	
		faddp	st(1), st
		shr	word ptr [bp-2], 1
		jnb	loc_8A3_2CF
		wait	
		fld	cs:tbyte_8A3_24
		wait	
		fmulp	st(1), st

loc_8A3_2CF:				; CODE XREF: seg003:02C4j
		wait	
		fild	word ptr [bp-2]
		wait	
		fxch	st(1)
		wait	
		fscale	
		wait	
		fstp	st(1)

loc_8A3_2DC:				; CODE XREF: seg003:0279j
		test	bh, 2
		jz	loc_8A3_2E7
		wait	
		fld1	
		wait	
		fdivrp	st(1), st

loc_8A3_2E7:				; CODE XREF: seg003:023Cj seg003:0254j ...
		mov	sp, bp
		pop	bp
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_2EB:				; DATA XREF: __EMURESET+13o
		push	bp
		mov	bp, sp
		push	ax
		push	si
		push	ds
		test	byte ptr [bp+7], 2
		jz	loc_8A3_2F8
		sti	

loc_8A3_2F8:				; CODE XREF: seg003:02F5j
		lds	si, [bp+2]
		mov	ax, [si-1]
		sub	al, 34h	; '4'
		cmp	al, 8
		jnb	loc_8A3_310
		sub	si, 2
		add	word ptr [si], 0A3CEh

loc_8A3_30B:				; CODE XREF: seg003:0343j
		mov	[bp+2],	si
		jmp	short loc_8A3_333
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_310:				; CODE XREF: seg003:0302j
		ja	loc_8A3_338
		test	ah, 20h
		jnz	loc_8A3_345
		sub	si, 2
		mov	[bp+2],	si
		mov	byte ptr [si], 9Bh ; ''
		inc	si
		mov	al, ah
		and	ax, 7C0h
		shr	al, 1
		shr	al, 1
		shr	al, 1
		xor	al, 18h
		add	ax, 0D826h
		mov	[si], ax

loc_8A3_333:				; CODE XREF: seg003:030Ej seg003:0345j
		pop	ds
		pop	si
		pop	ax
		pop	bp
		iret	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_338:				; CODE XREF: seg003:0310j
		cmp	al, 9
		ja	loc_8A3_345
		sub	si, 2
		mov	word ptr [si], 9B90h
		jmp	short loc_8A3_30B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_345:				; CODE XREF: seg003:0315j seg003:033Aj
		jmp	short loc_8A3_333
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	[bp+di], es
		mov	al, ds:0B103h
		add	si, [bp-12FDh]
		add	di, di
		add	cx, [bx+di]
		add	al, 0Eh
		add	al, 32h	; '2'
		add	byte_BFD_3A00, dh
		add	[bp+di], ch
		add	[bp-6BFFh], bx
		add	[bx+di-1FFh], bx
		add	[di], ax
		add	cl, [bx+di]
		add	bh, bl		; DATA XREF: __EMURESET+1Do
		push	ax
		push	si
		push	es
		push	bp
		mov	bp, sp
		les	si, [bp+8]
		lods	word ptr es:[si]
		mov	[bp+8],	si
		cmp	al, 0DCh ; 'Ü'
		jb	loc_8A3_387
		mov	si, ax
		cbw	
		xchg	ax, si
		call	word ptr cs:[si+36Bh]

loc_8A3_387:				; CODE XREF: seg003:037Cj
		pop	bp
		pop	es
		pop	si
		pop	ax
		iret	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		dec	ah
		jl	loc_8A3_39E
		mov	al, 0Ah
		mul	ah
		xchg	ax, si

loc_8A3_395:				; CODE XREF: seg003:039Cj
		wait	
		fstp	tbyte ptr [bp+si+0Eh]
		sub	si, 0Ah
		jge	loc_8A3_395

loc_8A3_39E:				; CODE XREF: seg003:038Ej
		wait	
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		sub	si, si

loc_8A3_3A2:				; CODE XREF: seg003:03ADj
		dec	ah
		jl	loc_8A3_3AF
		wait	
		fld	tbyte ptr [bp+si+0Eh]
		add	si, 0Ah
		jmp	short loc_8A3_3A2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8A3_3AF:				; CODE XREF: seg003:03A4j
		wait	
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	al, 0
		jmp	short loc_8A3_3B8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 2
		mov	al, 1

loc_8A3_3B8:				; CODE XREF: seg003:03B3j
		push	bp
		push	ax
		mov	bp, sp
		fstcw	word ptr [bp+0]
		wait	
		mov	si, [bp+0]
		and	byte ptr [bp+1], 0FCh
		or	[bp+1],	al
		wait	
		fldcw	word ptr [bp+0]
		wait	
		fldz	
		wait	
		fsub	st(2), st
		wait	
		faddp	st(1), st
		mov	[bp+0],	si
		wait	
		fldcw	word ptr [bp+0]
		wait	
		fcompp	st(1), st
		fstsw	word ptr [bp+0]
		wait	
		pop	ax
		pop	bp
		mov	[bp+0Ch], ah
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fcompp	st(1), st

loc_8A3_3F0:				; CODE XREF: seg003:0402j seg003:0407j ...
		mov	ah, [bp+0Dh]
		fstsw	word ptr [bp+0Ch]
		wait	
		mov	al, [bp+0Dh]
		mov	[bp+0Ch], ax
		retn	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fcomp	st(1)
		jmp	short loc_8A3_3F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fcom	st(1)
		jmp	short loc_8A3_3F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		ftst	
		jmp	short loc_8A3_3F0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		wait	
		fxam	
		fstsw	word ptr [bp+6]
		wait	
		retn	
seg003		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg004		segment	byte public 'CODE' use16
		assume cs:seg004
		;org 7
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_cos	proc far		; CODE XREF: _main+2A9P
					; _circ_explosion+3DP ...

arg_0		= qword	ptr  6

		push	bp
		mov	bp, sp
		fld	[bp+arg_0]	; (emulator call)
		mov	ax, 7FF0h
		and	ax, word ptr [bp+arg_0+6]
		cmp	ax, 4340h
		jnb	loc_8E4_2A
		cmp	word_BFD_96, 3
		jl	loc_8E4_24
		fcos	
		jmp	short loc_8E4_53
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E4_24:				; CODE XREF: _cos+17j
		fcos			; (emulator call)
		jmp	short loc_8E4_53
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8E4_2A:				; CODE XREF: _cos+10j
		fstp	st		; (emulator call)
		push	word_BFD_7EC
		push	word_BFD_7EA
		push	word_BFD_7E8
		push	word_BFD_7E6
		xor	ax, ax
		push	ax
		lea	ax, [bp+arg_0]
		push	ax
		mov	ax, 7EEh
		push	ax
		mov	ax, 5
		push	ax
		call	sub_97E_A
		mov	sp, bp

loc_8E4_53:				; CODE XREF: _cos+1Bj
					; _cos+21j
		pop	bp
		retf	
_cos	endp

seg004		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg005		segment	byte public 'CODE' use16
		assume cs:seg005
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __fperr, 0000009E	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg006		segment	byte public 'CODE' use16
		assume cs:seg006
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_8F3_3	proc far		; CODE XREF: __fperr+8BP
		call	__EMURESET
		retf	
sub_8F3_3	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_8F3_9	proc far		; CODE XREF: seg010:032CP seg010:0363P

var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= qword	ptr  6
arg_8		= word ptr  0Eh
arg_C		= word ptr  12h
arg_E		= word ptr  14h
arg_10		= word ptr  16h
arg_12		= word ptr  18h

		push	bp
		mov	bp, sp
		sub	sp, 4
		xor	cx, cx
		mov	ax, 43FEh
		mov	bx, 3F6Ah
		cmp	[bp+arg_12], 0
		jnz	loc_8F3_23
		mov	ax, 407Eh
		mov	bx, 3F6Ah

loc_8F3_23:				; CODE XREF: sub_8F3_9+12j
		mov	dx, [bp+arg_10]
		shl	dx, 1
		rcl	cx, 1
		shr	dx, 1
		cmp	dx, 7FFFh
		jz	loc_8F3_9A
		cmp	dx, ax
		jz	loc_8F3_3F
		jle	loc_8F3_74
		fld	[bp+arg_0]	; (emulator call)
		jmp	short loc_8F3_8B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8F3_3F:				; CODE XREF: sub_8F3_9+2Bj
		fnstcw	[bp+var_4]	; (emulator call)
		mov	ax, 0C00h
		wait			; (emulator call)
		or	ax, [bp+var_4]
		mov	[bp+var_2], ax
		fldcw	[bp+var_2]	; (emulator call)
		fld	tbyte ptr [bp+0Eh] ; (emulator call)
		cmp	[bp+arg_12], 0
		jnz	loc_8F3_66
		fstp	dword ptr [bp+arg_0] ; (emulator call)
		fld	dword ptr [bp+arg_0] ; (emulator call)
		jmp	short loc_8F3_6E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8F3_66:				; CODE XREF: sub_8F3_9+51j
		fstp	[bp+arg_0]	; (emulator call)
		fld	[bp+arg_0]	; (emulator call)

loc_8F3_6E:				; CODE XREF: sub_8F3_9+5Bj
		fldcw	[bp+var_4]	; (emulator call)
		jmp	short loc_8F3_9E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8F3_74:				; CODE XREF: sub_8F3_9+2Dj
		mov	ax, dx
		or	ax, [bp+arg_E]
		or	ax, [bp+arg_C]
		or	ax, [bp+10h]
		or	ax, [bp+arg_8]
		jz	loc_8F3_9A
		cmp	dx, bx
		jge	loc_8F3_9A
		fldz			; (emulator call)

loc_8F3_8B:				; CODE XREF: sub_8F3_9+33j
		or	cx, cx
		jz	loc_8F3_92
		fchs			; (emulator call)

loc_8F3_92:				; CODE XREF: sub_8F3_9+84j
		mov	word_BFD_94, 22h ; '"'
		jmp	short loc_8F3_9E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8F3_9A:				; CODE XREF: sub_8F3_9+27j
					; sub_8F3_9+79j ...
		fld	tbyte ptr [bp+arg_8] ; (emulator call)

loc_8F3_9E:				; CODE XREF: sub_8F3_9+69j
					; sub_8F3_9+8Fj
		mov	sp, bp
		pop	bp
		retf	14h
sub_8F3_9	endp

seg006		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg007		segment	byte public 'CODE' use16
		assume cs:seg007
		;org 4
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_8FD_4	proc far		; CODE XREF: sub_97E_A+5DP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	si, [bp+arg_0]
		cmp	word ptr [si], 4
		jnz	loc_8FD_1D
		fld	dbl_BFD_914	; (emulator call)
		fstp	qword ptr [si+14h] ; (emulator call)
		wait			; (emulator call)
		jmp	short loc_8FD_22
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FD_1D:				; CODE XREF: sub_8FD_4+Aj
		cmp	word ptr [si], 5
		jnz	loc_8FD_27

loc_8FD_22:				; CODE XREF: sub_8FD_4+17j
		mov	ax, 1
		jmp	short loc_8FD_29
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FD_27:				; CODE XREF: sub_8FD_4+1Cj
		xor	ax, ax

loc_8FD_29:				; CODE XREF: sub_8FD_4+21j
		pop	si
		pop	bp
		retf	
sub_8FD_4	endp

seg007		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg008		segment	byte public 'CODE' use16
		assume cs:seg008
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_8FF_C	proc far		; CODE XREF: seg010:0240P __XCVT+EBP ...

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	ax, [bp+arg_0]
		cmp	ax, 0ECBCh
		jge	loc_8FF_1E
		fldz			; (emulator call)
		jmp	loc_8FF_D1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FF_1E:				; CODE XREF: sub_8FF_C+Aj
		cmp	ax, 1344h
		jle	loc_8FF_2B
		fld	flt_BFD_998	; (emulator call)
		jmp	loc_8FF_D1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FF_2B:				; CODE XREF: sub_8FF_C+15j
		or	ax, ax
		jnz	loc_8FF_35
		fld1			; (emulator call)
		jmp	loc_8FF_D1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FF_35:				; CODE XREF: sub_8FF_C+21j
		or	ax, ax
		jge	loc_8FF_3B
		neg	ax

loc_8FF_3B:				; CODE XREF: sub_8FF_C+2Bj
		mov	si, 7
		and	si, ax
		shl	si, 1
		shl	si, 1
		fld	dword ptr [si+91Ch] ; (emulator	call)
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		jnb	loc_8FF_58
		fmul	flt_BFD_93C	; (emulator call)

loc_8FF_58:				; CODE XREF: sub_8FF_C+45j
		jnz	loc_8FF_5D
		jmp	short loc_8FF_C6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_8FF_5D:				; CODE XREF: sub_8FF_C+4Cj
		shr	ax, 1
		jnb	loc_8FF_66
		fmul	dbl_BFD_940	; (emulator call)

loc_8FF_66:				; CODE XREF: sub_8FF_C+53j
		shr	ax, 1
		jnb	loc_8FF_72
		fld	tbyte_BFD_948	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_72:				; CODE XREF: sub_8FF_C+5Cj
		shr	ax, 1
		jnb	loc_8FF_7E
		fld	tbyte_BFD_952	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_7E:				; CODE XREF: sub_8FF_C+68j
		shr	ax, 1
		jnb	loc_8FF_8A
		fld	tbyte_BFD_95C	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_8A:				; CODE XREF: sub_8FF_C+74j
		shr	ax, 1
		jnb	loc_8FF_96
		fld	tbyte_BFD_966	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_96:				; CODE XREF: sub_8FF_C+80j
		shr	ax, 1
		jnb	loc_8FF_A2
		fld	tbyte_BFD_970	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_A2:				; CODE XREF: sub_8FF_C+8Cj
		shr	ax, 1
		jnb	loc_8FF_AE
		fld	tbyte_BFD_97A	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_AE:				; CODE XREF: sub_8FF_C+98j
		shr	ax, 1
		jnb	loc_8FF_BA
		fld	tbyte_BFD_984	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_BA:				; CODE XREF: sub_8FF_C+A4j
		shr	ax, 1
		jnb	loc_8FF_C6
		fld	tbyte_BFD_98E	; (emulator call)
		fmulp	st(1), st	; (emulator call)

loc_8FF_C6:				; CODE XREF: sub_8FF_C+4Ej
					; sub_8FF_C+B0j
		test	byte ptr [bp+arg_0+1], 80h
		jz	loc_8FF_D1
		fdivr	flt_BFD_91C	; (emulator call)

loc_8FF_D1:				; CODE XREF: sub_8FF_C+Fj
					; sub_8FF_C+1Cj ...
		pop	si
		pop	bp
		retf	
sub_8FF_C	endp

seg008		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg009		segment	byte public 'CODE' use16
		assume cs:seg009
		;org 4
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_90C_4	proc near		; CODE XREF: seg009:012Fp seg009:015Ep
		mov	al, 5Fh	; '_'
		and	al, dl
		cmp	al, 47h	; 'G'
		jnz	loc_90C_19

loc_90C_C:				; CODE XREF: sub_90C_4+11j
		cmp	byte ptr [bx-1], 30h ; '0'
		jnz	loc_90C_19
		dec	bx
		cmp	bx, cx
		ja	loc_90C_C
		jmp	short locret_90C_20
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_19:				; CODE XREF: sub_90C_4+6j sub_90C_4+Cj
		cmp	byte ptr [bx-1], 2Eh ; '.'
		jnz	locret_90C_20
		dec	bx

locret_90C_20:				; CODE XREF: sub_90C_4+13j
					; sub_90C_4+19j
		retn	
sub_90C_4	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		sub	sp, 30h
		push	si
		push	di
		push	es
		push	ds
		pop	es
		assume es:dseg
		mov	ax, [bp+0Eh]
		cmp	ax, 28h	; '('
		jbe	loc_90C_3A
		mov	ax, 28h	; '('
		mov	[bp+0Eh], ax

loc_90C_3A:				; CODE XREF: seg009:0032j
		mov	[bp-2],	ax
		mov	dl, [bp+0Ah]
		and	dl, 0DFh
		cmp	dl, 46h	; 'F'
		jnz	loc_90C_53
		neg	ax
		jle	loc_90C_5C
		sub	ax, ax
		mov	[bp+0Eh], ax
		jmp	short loc_90C_5C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_53:				; CODE XREF: seg009:0046j
		or	ax, ax
		jg	loc_90C_5C
		mov	ax, 1
		jmp	short loc_90C_65
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_5C:				; CODE XREF: seg009:004Aj seg009:0051j ...
		cmp	dl, 46h	; 'F'
		jz	loc_90C_65
		inc	ax
		inc	word ptr [bp+0Eh]

loc_90C_65:				; CODE XREF: seg009:005Aj seg009:005Fj
		push	word ptr [bp+10h]
		cmp	ax, 0
		jle	loc_90C_70
		mov	ax, [bp-2]

loc_90C_70:				; CODE XREF: seg009:006Bj
		push	ax
		lea	bx, [bp-4]
		push	bx
		lea	si, [bp-30h]
		push	si
		mov	ax, [bp+6]
		push	ax
		call	__XCVT
		xchg	ax, bx
		mov	di, [bp+0Ch]
		cld	
		cmp	bx, 7FFFh
		jz	loc_90C_95
		cmp	bx, 7FFEh
		jz	loc_90C_A8
		jmp	short loc_90C_BA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_95:				; CODE XREF: seg009:008Bj
		mov	ax, 492Bh
		cmp	word ptr [bp-4], 0
		jz	loc_90C_A0
		inc	ax
		inc	ax

loc_90C_A0:				; CODE XREF: seg009:009Cj
		stosw
		mov	ax, 464Eh
		stosw
		jmp	loc_90C_19F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_A8:				; CODE XREF: seg009:0091j
		mov	ax, 4E2Bh
		cmp	word ptr [bp-4], 0
		jz	loc_90C_B3
		inc	ax
		inc	ax

loc_90C_B3:				; CODE XREF: seg009:00AFj
		stosw
		mov	al, 41h	; 'A'
		stosw
		jmp	loc_90C_19F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_BA:				; CODE XREF: seg009:0093j
		cmp	byte ptr [bp-4], 0
		jz	loc_90C_C3
		mov	al, 2Dh	; '-'
		stosb

loc_90C_C3:				; CODE XREF: seg009:00BEj
		mov	dl, [bp+0Ah]
		and	dl, 5Fh
		cmp	dl, 46h	; 'F'
		jz	loc_90C_DD
		cmp	dl, 45h	; 'E'
		jz	loc_90C_13F
		cmp	bx, 0FFFDh
		jl	loc_90C_13F
		cmp	bx, [bp+0Eh]
		jg	loc_90C_13F

loc_90C_DD:				; CODE XREF: seg009:00CCj
		cmp	bx, 28h	; '('
		jg	loc_90C_13F
		or	bx, bx
		jg	loc_90C_F5
		mov	ax, 2E30h
		stosw
		mov	cx, 1
		jz	loc_90C_F8
		mov	al, 30h	; '0'

loc_90C_F1:				; CODE XREF: seg009:00F3j
		stosb
		inc	bx
		jnz	loc_90C_F1

loc_90C_F5:				; CODE XREF: seg009:00E4j
		mov	cx, 0

loc_90C_F8:				; CODE XREF: seg009:00EDj seg009:00FFj ...
		lodsb
		or	al, al
		jz	loc_90C_107
		stosb
		dec	bx
		jnz	loc_90C_F8
		mov	al, 2Eh	; '.'
		stosb
		inc	cx
		jmp	short loc_90C_F8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_107:				; CODE XREF: seg009:00FBj
		mov	ax, [bp+0Eh]
		add	cx, [bp-2]
		cmp	ax, cx
		jbe	loc_90C_11E
		sub	ax, cx
		mov	cx, ax
		add	bx, ax
		mov	al, 30h	; '0'
		repe stosb
		dec	bx
		jz	loc_90C_134

loc_90C_11E:				; CODE XREF: seg009:010Fj
		dec	bx
		jz	loc_90C_134
		cmp	byte ptr [bp+8], 0
		jnz	loc_90C_134
		mov	dl, [bp+0Ah]
		mov	cx, [bp+0Ch]
		xchg	bx, di
		call	sub_90C_4
		xchg	di, bx

loc_90C_134:				; CODE XREF: seg009:011Cj seg009:011Fj ...
		cmp	di, [bp+0Ch]
		jnz	loc_90C_13C
		mov	al, 30h	; '0'
		stosb

loc_90C_13C:				; CODE XREF: seg009:0137j
		jmp	short loc_90C_19F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_90C_13F:				; CODE XREF: seg009:00D1j seg009:00D6j ...
		lodsw
		stosb
		mov	al, 2Eh	; '.'
		or	ah, ah
		jz	loc_90C_163
		stosb
		mov	al, ah

loc_90C_14A:				; CODE XREF: seg009:014Ej
		stosb
		lodsb
		or	al, al
		jnz	loc_90C_14A
		cmp	byte ptr [bp+8], 0
		jnz	loc_90C_163
		mov	dl, [bp+0Ah]
		mov	cx, [bp+0Ch]
		xchg	bx, di
		call	sub_90C_4
		xchg	di, bx

loc_90C_163:				; CODE XREF: seg009:0145j seg009:0154j
		mov	al, 20h	; ' '
		and	al, [bp+0Ah]
		or	al, 45h
		stosb
		mov	ax, 2D2Bh
		dec	bx
		jge	loc_90C_175
		xchg	al, ah
		neg	bx

loc_90C_175:				; CODE XREF: seg009:016Fj
		stosb
		xchg	ax, bx
		mov	cx, 3030h
		cmp	ax, 63h	; 'c'
		jbe	loc_90C_198
		cmp	ax, 3E7h
		jbe	loc_90C_18E
		cwd	
		mov	bx, 3E8h
		div	bx
		add	al, cl
		stosb
		xchg	ax, dx

loc_90C_18E:				; CODE XREF: seg009:0182j
		mov	bl, 64h	; 'd'
		div	bl
		add	al, cl
		stosb
		xchg	al, ah
		cbw	

loc_90C_198:				; CODE XREF: seg009:017Dj
		mov	bl, 0Ah
		div	bl
		add	ax, cx
		stosw

loc_90C_19F:				; CODE XREF: seg009:00A5j seg009:00B7j ...
		xor	al, al
		stosb
		pop	es
		assume es:nothing
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	0Ch
seg009		ends

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg010		segment	byte public 'CODE' use16
		assume cs:seg010
		;org 0Bh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		sub	sp, 18h
		push	si
		push	di
		mov	byte ptr [bp-13h], 0
		mov	byte ptr [bp-12h], 1
		mov	byte ptr [bp-11h], 0
		mov	byte ptr [bp-10h], 0
		mov	byte ptr [bp-0Fh], 0
		mov	word ptr [bp-0Eh], 0
		mov	word ptr [bp-0Ch], 1
		fld	tbyte_BFD_9AC	; (emulator call)
		fstp	tbyte ptr [bp-0Ah] ; (emulator call)
		wait			; (emulator call)
		push	es
		mov	si, 8000h
		mov	di, 0FFFEh

loc_926_44:				; CODE XREF: seg010:0061j
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		or	ax, ax
		jge	loc_926_55
		jmp	short loc_926_D2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_55:				; CODE XREF: seg010:0050j
		cbw	
		xchg	ax, bx
		test	bl, 80h
		jnz	loc_926_63
		test	byte ptr [bx+10E7h], 1
		jnz	loc_926_44

loc_926_63:				; CODE XREF: seg010:005Aj
		xchg	ax, bx
		dec	word ptr [bp+10h]
		jl	loc_926_CD
		cmp	al, 2Bh	; '+'
		jz	loc_926_74
		cmp	al, 2Dh	; '-'
		jnz	loc_926_A2
		inc	byte ptr [bp-13h]

loc_926_74:				; CODE XREF: seg010:006Bj
		inc	byte ptr [bp-11h]

loc_926_77:				; CODE XREF: seg010:00C0j seg010:00C8j ...
		dec	word ptr [bp+10h]
		jl	loc_926_CD
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		cmp	byte ptr [bp-12h], 1
		jnz	loc_926_A2
		cmp	byte ptr [bp-11h], 0
		jz	loc_926_A2
		cmp	al, 49h	; 'I'
		jz	loc_926_9C
		cmp	al, 4Eh	; 'N'
		jz	loc_926_9F
		jmp	short loc_926_A2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_9C:				; CODE XREF: seg010:0094j
		jmp	loc_926_26F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_9F:				; CODE XREF: seg010:0098j
		jmp	loc_926_2A9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_A2:				; CODE XREF: seg010:006Fj seg010:008Aj ...
		mov	byte ptr [bp-12h], 0
		cmp	al, 2Eh	; '.'
		jz	loc_926_DC
		cmp	al, 39h	; '9'
		ja	loc_926_D9
		cmp	al, 30h	; '0'
		jb	loc_926_D9
		sub	al, 30h	; '0'
		cbw	
		inc	di
		jg	loc_926_EC
		mov	[bp-0Ah], al
		mov	di, 1
		or	al, al
		jnz	loc_926_77
		neg	di
		cmp	si, 8000h
		jz	loc_926_77
		dec	si
		jmp	short loc_926_77
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_CD:				; CODE XREF: seg010:0067j seg010:007Aj
		mov	al, 65h	; 'e'

loc_926_CF:				; CODE XREF: seg010:00E0j
		jmp	loc_926_15E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_D2:				; CODE XREF: seg010:0052j
		mov	word ptr [bp-0Ch], 0FFFFh
		jmp	short loc_926_146
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_D9:				; CODE XREF: seg010:00ACj seg010:00B0j
		jmp	loc_926_15E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_DC:				; CODE XREF: seg010:00A8j
		cmp	si, 8000h
		jnz	loc_926_CF
		sub	si, si
		or	di, di
		jle	loc_926_77
		mov	si, di
		jmp	short loc_926_77
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_EC:				; CODE XREF: seg010:00B6j
		cmp	di, 5
		ja	loc_926_105
		xchg	ax, bx
		mov	ax, 0Ah
		mul	word ptr [bp-0Ah]
		add	ax, bx
		adc	dl, dh
		mov	[bp-0Ah], ax
		mov	[bp-8],	dx
		jmp	loc_926_77
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_105:				; CODE XREF: seg010:00EFj
		cmp	di, 12h
		ja	loc_926_13E
		xchg	ax, bx
		mov	ax, 0Ah
		mul	word ptr [bp-4]
		mov	[bp-4],	ax
		mov	ax, 0Ah
		mul	word ptr [bp-6]
		mov	[bp-6],	ax
		push	dx
		mov	ax, 0Ah
		mul	word ptr [bp-8]
		mov	[bp-8],	ax
		push	dx
		mov	ax, 0Ah
		mul	word ptr [bp-0Ah]
		add	ax, bx
		mov	[bp-0Ah], ax
		adc	[bp-8],	dx
		pop	dx
		adc	[bp-6],	dx
		pop	dx
		adc	[bp-4],	dx

loc_926_13E:				; CODE XREF: seg010:0108j
		jmp	loc_926_77
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_141:				; CODE XREF: seg010:0161j seg010:02E9j
		mov	word ptr [bp-0Ch], 0

loc_926_146:				; CODE XREF: seg010:00D7j
		cmp	word ptr [bp+10h], 0
		jl	loc_926_158
		push	word ptr [bp+0Eh]
		push	ax
		call	dword ptr [bp+0Ah]
		pop	cx
		pop	cx
		dec	word ptr [bp-0Eh]

loc_926_158:				; CODE XREF: seg010:014Aj
		fldz			; (emulator call)
		jmp	loc_926_252
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_15E:				; CODE XREF: seg010:00CFj seg010:00D9j
		cmp	di, 0FFFEh
		jz	loc_926_141
		cmp	si, 8000h
		jnz	loc_926_16B
		mov	si, di

loc_926_16B:				; CODE XREF: seg010:0167j
		mov	[bp-16h], di
		mov	[bp-18h], si
		sub	di, di
		cmp	al, 45h	; 'E'
		jz	loc_926_17B
		cmp	al, 65h	; 'e'
		jnz	loc_926_1C5

loc_926_17B:				; CODE XREF: seg010:0175j
		dec	word ptr [bp+10h]
		jl	loc_926_1D1
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		cmp	al, 2Bh	; '+'
		jz	loc_926_195
		cmp	al, 2Dh	; '-'
		jnz	loc_926_1A4
		inc	byte ptr [bp-10h]

loc_926_195:				; CODE XREF: seg010:018Cj seg010:01B9j ...
		dec	word ptr [bp+10h]
		jl	loc_926_1D1
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx

loc_926_1A4:				; CODE XREF: seg010:0190j
		cmp	al, 39h	; '9'
		ja	loc_926_1C5
		sub	al, 30h	; '0'
		jb	loc_926_1C3
		cbw	
		xchg	ax, di
		mov	dx, 0Ah
		mul	dx
		add	di, ax
		cmp	di, 1344h
		jle	loc_926_195
		xor	di, di
		mov	byte ptr [bp-0Fh], 1
		jmp	short loc_926_195
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_1C3:				; CODE XREF: seg010:01AAj
		add	al, 30h	; '0'

loc_926_1C5:				; CODE XREF: seg010:0179j seg010:01A6j
		push	word ptr [bp+0Eh]
		push	ax
		call	dword ptr [bp+0Ah]
		pop	cx
		pop	cx
		dec	word ptr [bp-0Eh]

loc_926_1D1:				; CODE XREF: seg010:017Ej seg010:0198j
		test	byte ptr [bp-10h], 0FFh
		jz	loc_926_1DC
		neg	di
		neg	byte ptr [bp-0Fh]

loc_926_1DC:				; CODE XREF: seg010:01D5j
		mov	bx, [bp-16h]
		or	bx, bx
		jge	loc_926_1E9
		fldz			; (emulator call)
		jmp	short loc_926_252
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_1E9:				; CODE XREF: seg010:01E1j
		mov	cx, [bp-18h]
		mov	ax, cx
		add	ax, di
		cmp	byte ptr [bp-0Fh], 1
		jz	loc_926_201
		cmp	byte ptr [bp-0Fh], 0FFh
		jnz	loc_926_221
		fldz			; (emulator call)
		jmp	short loc_926_219
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_201:				; CODE XREF: seg010:01F4j
		mov	ax, 0FFFFh
		mov	[bp-0Ah], ax
		mov	[bp-8],	ax
		mov	[bp-6],	ax
		mov	[bp-4],	ax
		mov	word ptr [bp-2], 7FFEh
		fld	tbyte ptr [bp-0Ah] ; (emulator call)

loc_926_219:				; CODE XREF: seg010:01FFj
		mov	word ptr [bp-0Ch], 2
		jmp	short loc_926_252
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_221:				; CODE XREF: seg010:01FAj
		mov	ax, bx
		cmp	bx, 12h
		jbe	loc_926_22B
		mov	bx, 12h

loc_926_22B:				; CODE XREF: seg010:0226j
		add	ax, cx
		sub	cx, bx
		add	di, cx
		fild	qword ptr [bp-0Ah] ; (emulator call)
		mov	ax, di
		or	ax, ax
		jz	loc_926_252
		jge	loc_926_23F
		neg	ax

loc_926_23F:				; CODE XREF: seg010:023Bj
		push	ax
		call	sub_8FF_C
		pop	ax
		or	di, di
		jge	loc_926_24F
		fdivp	st(1), st	; (emulator call)
		jmp	short loc_926_252
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_24F:				; CODE XREF: seg010:0248j
		fmulp	st(1), st	; (emulator call)

loc_926_252:				; CODE XREF: seg010:015Bj seg010:01E6j ...
		cmp	byte ptr [bp-13h], 0
		jz	loc_926_25B
		fchs			; (emulator call)

loc_926_25B:				; CODE XREF: seg010:0256j seg010:02A7j ...
		mov	di, [bp+12h]
		mov	bx, [bp-0Eh]
		add	[di], bx
		mov	di, [bp+14h]
		mov	bx, [bp-0Ch]
		mov	[di], bx
		pop	es
		jmp	short loc_926_2EC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_26F:				; CODE XREF: seg010:009Cj
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		dec	word ptr [bp+10h]
		jl	loc_926_2E4
		cmp	al, 4Eh	; 'N'
		jnz	loc_926_2E4
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		dec	word ptr [bp+10h]
		jl	loc_926_2E4
		cmp	al, 46h	; 'F'
		jnz	loc_926_2E4
		cmp	byte ptr [bp-13h], 0
		jz	loc_926_2A2
		fld	flt_BFD_9A0	; (emulator call)
		jmp	short loc_926_2A7
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2A2:				; CODE XREF: seg010:0299j
		fld	flt_BFD_99C	; (emulator call)

loc_926_2A7:				; CODE XREF: seg010:02A0j
		jmp	short loc_926_25B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2A9:				; CODE XREF: seg010:009Fj
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		dec	word ptr [bp+10h]
		jl	loc_926_2E4
		cmp	al, 41h	; 'A'
		jnz	loc_926_2E4
		inc	word ptr [bp-0Eh]
		push	word ptr [bp+0Eh]
		call	dword ptr [bp+6]
		pop	cx
		dec	word ptr [bp+10h]
		jl	loc_926_2E4
		cmp	al, 4Eh	; 'N'
		jnz	loc_926_2E4
		cmp	byte ptr [bp-13h], 0
		jz	loc_926_2DC
		fld	flt_BFD_9A8	; (emulator call)
		jmp	short loc_926_2E1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2DC:				; CODE XREF: seg010:02D3j
		fld	flt_BFD_9A4	; (emulator call)

loc_926_2E1:				; CODE XREF: seg010:02DAj
		jmp	loc_926_25B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2E4:				; CODE XREF: seg010:027Cj seg010:0280j ...
		mov	word ptr [bp-0Ch], 0
		jmp	loc_926_141
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2EC:				; CODE XREF: seg010:026Cj
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2F2:				; DATA XREF: dseg:1480o
		fstp	st		; (emulator call)
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_2F6:				; DATA XREF: dseg:147Co
		push	bp
		mov	bp, sp
		sub	sp, 0Ah
		push	si
		mov	si, [bp+6]
		fstp	tbyte ptr [bp-0Ah] ; (emulator call)
		test	word ptr [bp+8], 4
		jz	loc_926_338
		mov	ax, 1
		push	ax
		fld	tbyte ptr [bp-0Ah] ; (emulator call)
		sub	sp, 0Ah
		fstp	tbyte ptr [bp-18h] ; (emulator call)
		wait			; (emulator call)
		push	word_BFD_8FA
		push	word_BFD_8F8
		push	word_BFD_8F6
		push	word_BFD_8F4
		call	sub_8F3_9
		fstp	qword ptr [si]	; (emulator call)
		wait			; (emulator call)
		jmp	short loc_926_36D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_338:				; CODE XREF: seg010:0309j
		test	word ptr [bp+8], 8
		jz	loc_926_34A
		fld	tbyte ptr [bp-0Ah] ; (emulator call)
		fstp	tbyte ptr [si]	; (emulator call)
		wait			; (emulator call)
		jmp	short loc_926_36D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_926_34A:				; CODE XREF: seg010:033Dj
		xor	ax, ax
		push	ax
		fld	tbyte ptr [bp-0Ah] ; (emulator call)
		sub	sp, 0Ah
		fstp	tbyte ptr [bp-18h] ; (emulator call)
		wait			; (emulator call)
		mov	ax, 7FF0h
		push	ax
		xor	ax, ax
		push	ax
		push	ax
		push	ax
		call	sub_8F3_9
		fstp	dword ptr [si]	; (emulator call)
		wait			; (emulator call)

loc_926_36D:				; CODE XREF: seg010:0336j seg010:0348j
		pop	si
		mov	sp, bp
		pop	bp
		retf	
seg010		ends

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg011		segment	byte public 'CODE' use16
		assume cs:seg011
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		retf	

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_sin	proc far		; CODE XREF: _circ_explosion+7BP
					; _circ_explosion+102P ...

arg_0		= qword	ptr  6

		push	bp
		mov	bp, sp
		fld	[bp+arg_0]	; (emulator call)
		mov	ax, 7FF0h
		and	ax, word ptr [bp+arg_0+6]
		cmp	ax, 4340h
		jnb	loc_95D_26
		cmp	word_BFD_96, 3
		jl	loc_95D_20
		fsin	
		jmp	short loc_95D_4F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_95D_20:				; CODE XREF: _sin+17j
		fsin			; (emulator call)
		jmp	short loc_95D_4F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_95D_26:				; CODE XREF: _sin+10j
		fstp	st		; (emulator call)
		push	word_BFD_9BC
		push	word_BFD_9BA
		push	word_BFD_9B8
		push	word_BFD_9B6
		xor	ax, ax
		push	ax
		lea	ax, [bp+arg_0]
		push	ax
		mov	ax, 9BEh
		push	ax
		mov	ax, 5
		push	ax
		call	sub_97E_A
		mov	sp, bp

loc_95D_4F:				; CODE XREF: _sin+1Bj
					; _sin+21j
		pop	bp
		retf	
_sin	endp

seg011		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg012		segment	byte public 'CODE' use16
		assume cs:seg012
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __XCVT, 000001C9 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg013		segment	byte public 'CODE' use16
		assume cs:seg013
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_97E_A	proc far		; CODE XREF: _cos+45P
					; _sin+45P

var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= qword	ptr -18h
var_10		= qword	ptr -10h
var_8		= word ptr -8
var_4		= word ptr -4
var_2		= word ptr -2
arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= word ptr  0Ch
arg_8		= word ptr  0Eh
arg_A		= word ptr  10h
arg_C		= word ptr  12h
arg_E		= word ptr  14h

		push	bp
		mov	bp, sp
		sub	sp, 1Ch
		push	si
		mov	si, [bp+arg_4]
		mov	ax, [bp+arg_0]
		mov	[bp+var_1C], ax
		mov	ax, [bp+arg_2]
		mov	[bp+var_1A], ax
		or	si, si
		jnz	loc_97E_2B
		fld	dbl_BFD_A07	; (emulator call)
		jmp	short loc_97E_2E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_97E_2B:				; CODE XREF: sub_97E_A+18j
		fld	qword ptr [si]	; (emulator call)

loc_97E_2E:				; CODE XREF: sub_97E_A+1Fj
		fstp	[bp+var_18]	; (emulator call)
		wait			; (emulator call)
		or	si, si
		jnz	loc_97E_3F
		fld	qword ptr unk_BFD_A06 ;	(emulator call)
		jmp	short loc_97E_45
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_97E_3F:				; CODE XREF: sub_97E_A+2Cj
		mov	bx, [bp+arg_6]
		fld	qword ptr [bx]	; (emulator call)

loc_97E_45:				; CODE XREF: sub_97E_A+33j
		fstp	[bp+var_10]	; (emulator call)
		wait			; (emulator call)
		mov	ax, [bp+arg_E]
		mov	[bp+var_2], ax
		mov	ax, [bp+arg_C]
		mov	[bp+var_4], ax
		mov	ax, [bp+arg_A]
		mov	[bp-6],	ax
		mov	ax, [bp+arg_8]
		mov	[bp+var_8], ax
		lea	ax, [bp+var_1C]
		push	ax
		call	sub_8FD_4
		pop	cx
		or	ax, ax
		jnz	loc_97E_A5
		mov	bx, [bp+arg_0]
		dec	bx
		shl	bx, 1
		push	word ptr [bx+9C2h]
		push	[bp+arg_2]
		mov	ax, 9F9h
		push	ax
		mov	ax, 1208h
		push	ax
		call	_fprintf
		add	sp, 8
		cmp	[bp+arg_0], 3
		jz	loc_97E_9A
		cmp	[bp+arg_0], 4
		jnz	loc_97E_9F

loc_97E_9A:				; CODE XREF: sub_97E_A+88j
		mov	ax, 22h	; '"'
		jmp	short loc_97E_A2
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_97E_9F:				; CODE XREF: sub_97E_A+8Ej
		mov	ax, 21h	; '!'

loc_97E_A2:				; CODE XREF: sub_97E_A+93j
		mov	word_BFD_94, ax

loc_97E_A5:				; CODE XREF: sub_97E_A+65j
		fld	qword ptr [bp+var_8] ; (emulator call)
		pop	si
		mov	sp, bp
		pop	bp
		retf	
sub_97E_A	endp

seg013		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg014		segment	byte public 'CODE' use16
		assume cs:seg014
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __IOERROR, 0000003B BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg015		segment	byte public 'CODE' use16
		assume cs:seg015
		;org 9
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

locret_98C_9:				; CODE XREF: _exit+1CJ	_exit+20J ...
		retf	
; [COLLAPSED FUNCTION _exit, 00000030 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		pop	cx
		pop	bp
		retf	
; [COLLAPSED FUNCTION _atexit, 0000002F	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg016		segment	byte public 'CODE' use16
		assume cs:seg016
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION ___pull_free_block, 0000002E BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_992_3A, 0000003A BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_992_74, 0000003F BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_992_B3, 0000003C BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _malloc, 00000072	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg017		segment	byte public 'CODE' use16
		assume cs:seg017
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION ___brk, 00000024 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION ___sbrk, 00000034	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _brk, 0000000F BYTES. PRESS KEYPAD "+" TO	EXPAND]
; [COLLAPSED FUNCTION _sbrk, 00000013 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg018		segment	byte public 'CODE' use16
		assume cs:seg018
		;org 0Bh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_9AF_B, 0000001D BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_9AF_28, 00000014 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _open, 00000159 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg019		segment	byte public 'CODE' use16
		assume cs:seg019
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __open, 0000004B BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg020		segment	byte public 'CODE' use16
		assume cs:seg020
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_9CD_0, 00000047 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _fseek, 00000068 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _ftell, 00000063 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg021		segment	byte public 'CODE' use16
		assume cs:seg021
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_9DE_2	proc near		; CODE XREF: sub_9DE_2B+Ep
					; sub_9DE_9F+9Ap
		push	si
		push	di
		mov	di, 14h
		mov	si, 11E8h
		jmp	short loc_9DE_21
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_C:				; CODE XREF: sub_9DE_2+24j
		mov	ax, [si+2]
		and	ax, 300h
		cmp	ax, 300h
		jnz	loc_9DE_1E
		push	si
		call	_fflush
		pop	cx

loc_9DE_1E:				; CODE XREF: sub_9DE_2+13j
		add	si, 10h

loc_9DE_21:				; CODE XREF: sub_9DE_2+8j
		mov	ax, di
		dec	di
		or	ax, ax
		jnz	loc_9DE_C
		pop	di
		pop	si
		retn	
sub_9DE_2	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_9DE_2B	proc near		; CODE XREF: sub_9DE_9F+3Ep

arg_0		= word ptr  4

		push	bp
		mov	bp, sp
		push	si
		mov	si, [bp+arg_0]
		test	word ptr [si+2], 200h
		jz	loc_9DE_3C
		call	sub_9DE_2

loc_9DE_3C:				; CODE XREF: sub_9DE_2B+Cj
		push	word ptr [si+6]
		mov	ax, [si+8]
		mov	[si+0Ah], ax
		push	ax
		mov	al, [si+4]
		cbw	
		push	ax
		call	_read
		add	sp, 6
		mov	[si], ax
		or	ax, ax
		jle	loc_9DE_64
		and	word ptr [si+2], 0FFDFh
		xor	ax, ax
		jmp	short loc_9DE_85
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		jmp	short loc_9DE_80
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_64:				; CODE XREF: sub_9DE_2B+2Cj
		cmp	word ptr [si], 0
		jnz	loc_9DE_77
		mov	ax, [si+2]
		and	ax, 0FE7Fh
		or	ax, 20h
		mov	[si+2],	ax
		jmp	short loc_9DE_80
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_77:				; CODE XREF: sub_9DE_2B+3Cj
		mov	word ptr [si], 0
		or	word ptr [si+2], 10h

loc_9DE_80:				; CODE XREF: sub_9DE_2B+37j
					; sub_9DE_2B+4Aj
		mov	ax, 0FFFFh
		jmp	short $+2

loc_9DE_85:				; CODE XREF: sub_9DE_2B+35j
		pop	si
		pop	bp
		retn	2
sub_9DE_2B	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_9DE_8A	proc far		; CODE XREF: _gets+2AP

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		push	si
		mov	si, [bp+arg_0]
		inc	word ptr [si]
		push	si
		call	sub_9DE_9F
		pop	cx
		jmp	short $+2
		pop	si
		pop	bp
		retf	
sub_9DE_8A	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_9DE_9F	proc far		; CODE XREF: sub_9DE_8A+AP
					; seg021:01A1p

var_1		= byte ptr -1
arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		sub	sp, 2
		push	si
		mov	si, [bp+arg_0]

loc_9DE_A9:				; CODE XREF: sub_9DE_9F+4Bj
		dec	word ptr [si]
		jl	loc_9DE_BB
		inc	word ptr [si+0Ah]
		mov	bx, [si+0Ah]
		mov	al, [bx-1]
		mov	ah, 0
		jmp	loc_9DE_197
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_BB:				; CODE XREF: sub_9DE_9F+Cj
		inc	word ptr [si]
		jl	loc_9DE_C6
		test	word ptr [si+2], 110h
		jz	loc_9DE_D1

loc_9DE_C6:				; CODE XREF: sub_9DE_9F+1Ej
		or	word ptr [si+2], 10h
		mov	ax, 0FFFFh
		jmp	loc_9DE_197
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_D1:				; CODE XREF: sub_9DE_9F+25j
					; sub_9DE_9F+91j
		or	word ptr [si+2], 80h
		cmp	word ptr [si+6], 0
		jz	loc_9DE_EF
		push	si
		call	sub_9DE_2B
		or	ax, ax
		jz	loc_9DE_EA
		mov	ax, 0FFFFh
		jmp	loc_9DE_197
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_EA:				; CODE XREF: sub_9DE_9F+43j
		jmp	short loc_9DE_A9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		jmp	loc_9DE_197
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_EF:				; CODE XREF: sub_9DE_9F+3Bj
		cmp	word_BFD_1354, 0
		jnz	loc_9DE_132
		mov	ax, 11E8h
		cmp	ax, si
		jnz	loc_9DE_132
		mov	al, [si+4]
		cbw	
		push	ax
		call	_isatty
		pop	cx
		or	ax, ax
		jnz	loc_9DE_111
		and	word ptr [si+2], 0FDFFh

loc_9DE_111:				; CODE XREF: sub_9DE_9F+6Bj
		mov	ax, 200h
		push	ax
		test	word ptr [si+2], 200h
		jz	loc_9DE_121
		mov	ax, 1
		jmp	short loc_9DE_123
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_121:				; CODE XREF: sub_9DE_9F+7Bj
		xor	ax, ax

loc_9DE_123:				; CODE XREF: sub_9DE_9F+80j
		push	ax
		xor	ax, ax
		push	ax
		push	si
		call	_setvbuf
		add	sp, 8
		jmp	short loc_9DE_D1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_132:				; CODE XREF: sub_9DE_9F+55j
					; sub_9DE_9F+5Cj ...
		test	word ptr [si+2], 200h
		jz	loc_9DE_13C
		call	sub_9DE_2

loc_9DE_13C:				; CODE XREF: sub_9DE_9F+98j
		mov	ax, 1
		push	ax
		lea	ax, [bp+var_1]
		push	ax
		mov	al, [si+4]
		cbw	
		push	ax
		call	__read
		add	sp, 6
		cmp	ax, 1
		jz	loc_9DE_17E
		mov	al, [si+4]
		cbw	
		push	ax
		call	_eof
		pop	cx
		cmp	ax, 1
		jz	loc_9DE_16D
		or	word ptr [si+2], 10h
		jmp	short loc_9DE_179
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_16D:				; CODE XREF: sub_9DE_9F+C5j
		mov	ax, [si+2]
		and	ax, 0FE7Fh
		or	ax, 20h
		mov	[si+2],	ax

loc_9DE_179:				; CODE XREF: sub_9DE_9F+CCj
		mov	ax, 0FFFFh
		jmp	short loc_9DE_197
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_9DE_17E:				; CODE XREF: sub_9DE_9F+B5j
		cmp	[bp+var_1], 0Dh
		jnz	loc_9DE_18B
		test	word ptr [si+2], 40h
		jz	loc_9DE_132

loc_9DE_18B:				; CODE XREF: sub_9DE_9F+E3j
		and	word ptr [si+2], 0FFDFh
		mov	al, [bp+var_1]
		mov	ah, 0
		jmp	short $+2

loc_9DE_197:				; CODE XREF: sub_9DE_9F+19j
					; sub_9DE_9F+2Fj ...
		pop	si
		mov	sp, bp
		pop	bp
		retf	
sub_9DE_9F	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	ax, 11E8h
		push	ax
		push	cs
		call	near ptr sub_9DE_9F
		pop	cx
		jmp	short $+2
		retf	
seg021		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg022		segment	byte public 'CODE' use16
		assume cs:seg022
		;org 8
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _ioctl, 0000002B BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg023		segment	byte public 'CODE' use16
		assume cs:seg023
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _isatty, 00000018	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg024		segment	byte public 'CODE' use16
		assume cs:seg024
		;org 0Bh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _setvbuf,	000000DE BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg025		segment	byte public 'CODE' use16
		assume cs:seg025
		;org 9
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _close, 00000031 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg026		segment	byte public 'CODE' use16
		assume cs:seg026
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __close, 00000026	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Regular
seg027		segment	byte public 'UNK' use16
		assume cs:seg027
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db  56h	; V
		db  57h	; W
		db 0BFh	; ¿
		db    4	;  
		db    0	;  
		db 0BEh	; ¾
		db 0E8h	; è
		db  11h	;  
		db 0EBh	; ë
		db  12h	;  
		db 0F7h	; ÷
		db  44h	; D
		db    2	;  
		db    3	;  
		db    0	;  
		db  74h	; t
		db    7	;  
		db  56h	; V
		db  9Ah	; 
		dd _fflush
		db  59h	; Y
		db  4Fh	; O
		db  83h	; 
		db 0C6h	; Æ
		db  10h	;  
		db  0Bh	;  
		db 0FFh	;  
		db  75h	; u
		db 0EAh	; ê
seg027		ends

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg028		segment	byte public 'CODE' use16
		assume cs:seg028
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		pop	di
		pop	si
		retf	
; [COLLAPSED FUNCTION _read, 000000C2 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg029		segment	byte public 'CODE' use16
		assume cs:seg029
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __read, 0000001E BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg030		segment	byte public 'CODE' use16
		assume cs:seg030
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _write, 00000119 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg031		segment	byte public 'CODE' use16
		assume cs:seg031
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __write, 0000004A	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg032		segment	byte public 'CODE' use16
		assume cs:seg032
		;org 6
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _lseek, 0000002D BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg033		segment	byte public 'CODE' use16
		assume cs:seg033
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __LONGTOA, 0000007F BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _itoa, 0000002A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _ultoa, 0000001D BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _ltoa, 00000028 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg034		segment	byte public 'CODE' use16
		assume cs:seg034
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _strlen, 0000001D	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg035		segment	byte public 'CODE' use16
		assume cs:seg035
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _strcpy, 00000024	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg036		segment	byte public 'CODE' use16
		assume cs:seg036
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _memcpy, 00000021	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg037		segment	byte public 'CODE' use16
		assume cs:seg037
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _setmem, 00000028	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _memset, 00000019	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg038		segment	byte public 'CODE' use16
		assume cs:seg038
		;org 4
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __chmod, 0000001F	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg039		segment	byte public 'CODE' use16
		assume cs:seg039
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _eof, 00000070 BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg040		segment	byte public 'CODE' use16
		assume cs:seg040
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _fflush, 00000080	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg041		segment	byte public 'CODE' use16
		assume cs:seg041
		;org 3
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _printf, 0000001F	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg042		segment	byte public 'CODE' use16
		assume cs:seg042
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __fputc, 0000001B	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _fputc, 0000013C BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _fputchar, 00000017 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __FPUTN, 000000C0	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg043		segment	byte public 'CODE' use16
		assume cs:seg043
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_A88_0, 0000002B BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __VPRINTER, 00000014 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_A88_3F, 0000000D BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_A88_4C, 00000008 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_A88_54, 00000023 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_77:				; CODE XREF: __VPRINTER+12j
		push	es
		cld	
		lea	di, [bp-52h]
		mov	[bp-94h], di

loc_A88_80:				; CODE XREF: seg043:0504j
		mov	di, [bp-94h]

loc_A88_84:				; CODE XREF: seg043:0298j seg043:04D7j
		mov	si, [bp+8]

loc_A88_87:				; CODE XREF: seg043:0096j seg043:009Bj
		lodsb
		or	al, al
		jz	loc_A88_9D
		cmp	al, 25h	; '%'
		jz	loc_A88_A0

loc_A88_90:				; CODE XREF: seg043:00A7j
		mov	[di], al
		inc	di
		dec	byte ptr [bp-53h]
		jg	loc_A88_87
		call	sub_A88_54
		jmp	short loc_A88_87
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_9D:				; CODE XREF: seg043:008Aj
		jmp	loc_A88_519
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_A0:				; CODE XREF: seg043:008Ej
		mov	[bp-88h], si
		lodsb
		cmp	al, 25h	; '%'
		jz	loc_A88_90
		mov	[bp-94h], di
		xor	cx, cx
		mov	[bp-8Ah], cx
		mov	[bp-96h], cx
		mov	[bp-8Bh], cl
		mov	word ptr [bp-90h], 0FFFFh
		mov	word ptr [bp-8Eh], 0FFFFh
		jmp	short loc_A88_CA
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_C9:				; CODE XREF: seg043:012Cj seg043:0138j ...
		lodsb

loc_A88_CA:				; CODE XREF: seg043:00C7j
		xor	ah, ah
		mov	dx, ax
		mov	bx, ax
		sub	bl, 20h	; ' '
		cmp	bl, 60h	; '`'
		jnb	loc_A88_11F
		mov	bl, [bx+13A3h]
		mov	ax, bx
		cmp	ax, 17h		; switch 24 cases 
		jbe	loc_A88_E6
		jmp	loc_A88_507	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_E6:				; CODE XREF: seg043:00E1j
		mov	bx, ax
		shl	bx, 1
		jmp	cs:off_A88_EF[bx] ; switch jump
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
off_A88_EF	dw offset loc_A88_13A	; DATA XREF: seg043:00EAr
		dw offset loc_A88_122	; jump table for switch	statement
		dw offset loc_A88_17B
		dw offset loc_A88_12E
		dw offset loc_A88_1A0
		dw offset loc_A88_1AA
		dw offset loc_A88_1EC
		dw offset loc_A88_1F6
		dw offset loc_A88_206
		dw offset loc_A88_161
		dw offset loc_A88_23B
		dw offset loc_A88_216
		dw offset loc_A88_21A
		dw offset loc_A88_21E
		dw offset loc_A88_2C2
		dw offset loc_A88_374
		dw offset loc_A88_315
		dw offset loc_A88_335
		dw offset loc_A88_4DA
		dw offset loc_A88_507
		dw offset loc_A88_507
		dw offset loc_A88_507
		dw offset loc_A88_14D
		dw offset loc_A88_157
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_11F:				; CODE XREF: seg043:00D6j seg043:0125j ...
		jmp	loc_A88_507	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_122:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		cmp	ch, 0		; case 0x1
		ja	loc_A88_11F
		or	word ptr [bp-96h], 1
		jmp	short loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_12E:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		cmp	ch, 0		; case 0x3
		ja	loc_A88_11F
		or	word ptr [bp-96h], 2
		jmp	short loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_13A:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		cmp	ch, 0		; case 0
		ja	loc_A88_11F
		cmp	byte ptr [bp-8Bh], 2Bh ; '+'
		jz	loc_A88_14A
		mov	[bp-8Bh], dl

loc_A88_14A:				; CODE XREF: seg043:0144j
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_14D:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		and	word ptr [bp-96h], 0FFDFh ; case 0x16
		mov	ch, 5
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_157:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		or	word ptr [bp-96h], 20h ; case 0x17
		mov	ch, 5
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_161:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		cmp	ch, 0		; case 0x9
		ja	loc_A88_1AA	; case 0x5
		test	word ptr [bp-96h], 2
		jnz	loc_A88_18F
		or	word ptr [bp-96h], 8
		mov	ch, 1
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_178:				; CODE XREF: seg043:0195j seg043:01A3j ...
		jmp	loc_A88_507	; default
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_17B:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	di, [bp+6]	; case 0x2
		mov	ax, [di]
		add	word ptr [bp+6], 2
		cmp	ch, 2
		jnb	loc_A88_192
		mov	[bp-90h], ax
		mov	ch, 3

loc_A88_18F:				; CODE XREF: seg043:016Cj seg043:01BBj ...
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_192:				; CODE XREF: seg043:0187j
		cmp	ch, 4
		jnz	loc_A88_178
		mov	[bp-8Eh], ax
		inc	ch
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_1A0:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		cmp	ch, 4		; case 0x4
		jnb	loc_A88_178
		mov	ch, 4
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_1AA:				; CODE XREF: seg043:00EAj seg043:0164j
					; DATA XREF: ...
		xchg	ax, dx		; case 0x5
		sub	al, 30h	; '0'
		cbw	
		cmp	ch, 2
		ja	loc_A88_1CE
		mov	ch, 2
		xchg	ax, [bp-90h]
		or	ax, ax
		jl	loc_A88_18F
		shl	ax, 1
		mov	dx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, dx
		add	[bp-90h], ax
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_1CE:				; CODE XREF: seg043:01B1j
		cmp	ch, 4
		jnz	loc_A88_178
		xchg	ax, [bp-8Eh]
		or	ax, ax
		jl	loc_A88_18F
		shl	ax, 1
		mov	dx, ax
		shl	ax, 1
		shl	ax, 1
		add	ax, dx
		add	[bp-8Eh], ax
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_1EC:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		or	word ptr [bp-96h], 10h ; case 0x6
		mov	ch, 5
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_1F6:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		or	word ptr [bp-96h], 100h	; case 0x7
		and	word ptr [bp-96h], 0FFEFh
		mov	ch, 5
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_206:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		and	word ptr [bp-96h], 0FFEFh ; case 0x8
		or	word ptr [bp-96h], 80h
		mov	ch, 5
		jmp	loc_A88_C9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_216:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	bh, 8		; case 0xb
		jmp	short loc_A88_224
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_21A:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	bh, 0Ah		; case 0xc
		jmp	short loc_A88_229
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_21E:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	bh, 10h		; case 0xd
		mov	bl, 0E9h ; 'é'
		add	bl, dl

loc_A88_224:				; CODE XREF: seg043:0218j
		mov	byte ptr [bp-8Bh], 0

loc_A88_229:				; CODE XREF: seg043:021Cj
		mov	byte ptr [bp-91h], 0
		mov	[bp-92h], dl
		mov	di, [bp+6]
		mov	ax, [di]
		xor	dx, dx
		jmp	short loc_A88_24C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_23B:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	bh, 0Ah		; case 0xa
		mov	byte ptr [bp-91h], 1
		mov	[bp-92h], dl
		mov	di, [bp+6]
		mov	ax, [di]
		cwd	

loc_A88_24C:				; CODE XREF: seg043:0239j
		inc	di
		inc	di
		mov	[bp+8],	si
		test	word ptr [bp-96h], 10h
		jz	loc_A88_25D
		mov	dx, [di]
		inc	di
		inc	di

loc_A88_25D:				; CODE XREF: seg043:0257j
		mov	[bp+6],	di
		lea	di, [bp-85h]
		or	ax, ax
		jnz	loc_A88_29B
		or	dx, dx
		jnz	loc_A88_29B
		cmp	word ptr [bp-8Eh], 0
		jnz	loc_A88_2A0
		mov	di, [bp-94h]
		mov	cx, [bp-90h]
		jcxz	loc_A88_298
		cmp	cx, 0FFFFh
		jz	loc_A88_298
		mov	ax, [bp-96h]
		and	ax, 8
		jz	loc_A88_28F
		mov	dl, 30h	; '0'
		jmp	short loc_A88_291
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_28F:				; CODE XREF: seg043:0289j
		mov	dl, 20h	; ' '

loc_A88_291:				; CODE XREF: seg043:028Dj seg043:0296j
		mov	al, dl
		call	sub_A88_4C
		loop	loc_A88_291

loc_A88_298:				; CODE XREF: seg043:027Bj seg043:0280j
		jmp	loc_A88_84
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_29B:				; CODE XREF: seg043:0266j seg043:026Aj
		or	word ptr [bp-96h], 4

loc_A88_2A0:				; CODE XREF: seg043:0271j
		push	dx
		push	ax
		push	di
		mov	al, bh
		cbw	
		push	ax
		mov	al, [bp-91h]
		push	ax
		push	bx
		call	__LONGTOA
		push	ss
		pop	es
		mov	dx, [bp-8Eh]
		or	dx, dx
		jg	loc_A88_2BF
		jmp	loc_A88_3D5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_2BF:				; CODE XREF: seg043:02BAj
		jmp	loc_A88_3E5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_2C2:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	[bp-92h], dl	; case 0xe
		mov	[bp+8],	si
		lea	di, [bp-86h]
		mov	bx, [bp+6]
		push	word ptr [bx]
		inc	bx
		inc	bx
		mov	[bp+6],	bx
		test	word ptr [bp-96h], 20h
		jz	loc_A88_2EE
		push	word ptr [bx]
		inc	bx
		inc	bx
		mov	[bp+6],	bx
		push	ss
		pop	es
		call	sub_A88_0
		mov	al, 3Ah	; ':'
		stosb

loc_A88_2EE:				; CODE XREF: seg043:02DDj
		push	ss
		pop	es
		call	sub_A88_0
		mov	byte ptr [di], 0
		mov	byte ptr [bp-91h], 0
		and	word ptr [bp-96h], 0FFFBh
		lea	cx, [bp-86h]
		sub	di, cx
		xchg	cx, di
		mov	dx, [bp-8Eh]
		cmp	dx, cx
		jg	loc_A88_312
		mov	dx, cx

loc_A88_312:				; CODE XREF: seg043:030Ej
		jmp	loc_A88_3D5
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_315:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	[bp+8],	si	; case 0x10
		mov	[bp-92h], dl
		mov	di, [bp+6]
		mov	ax, [di]
		add	word ptr [bp+6], 2
		push	ss
		pop	es
		lea	di, [bp-85h]
		xor	ah, ah
		mov	[di], ax
		mov	cx, 1
		jmp	loc_A88_40F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_335:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	[bp+8],	si	; case 0x11
		mov	[bp-92h], dl
		mov	di, [bp+6]
		test	word ptr [bp-96h], 20h
		jnz	loc_A88_353
		mov	di, [di]
		add	word ptr [bp+6], 2
		push	ds
		pop	es
		assume es:dseg
		or	di, di
		jmp	short loc_A88_35D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_353:				; CODE XREF: seg043:0345j
		les	di, [di]
		assume es:nothing
		add	word ptr [bp+6], 4
		mov	ax, es
		or	ax, di

loc_A88_35D:				; CODE XREF: seg043:0351j
		jnz	loc_A88_364
		push	ds
		pop	es
		assume es:dseg
		mov	di, 138Ch

loc_A88_364:				; CODE XREF: seg043:035Dj
		call	sub_A88_3F
		cmp	cx, [bp-8Eh]
		jbe	loc_A88_371
		mov	cx, [bp-8Eh]

loc_A88_371:				; CODE XREF: seg043:036Bj
		jmp	loc_A88_40F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_374:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	[bp+8],	si	; case 0xf
		mov	[bp-92h], dl
		mov	di, [bp+6]
		mov	cx, [bp-8Eh]
		or	cx, cx
		jge	loc_A88_389
		mov	cx, 6

loc_A88_389:				; CODE XREF: seg043:0384j
		push	di
		push	cx
		lea	bx, [bp-85h]
		push	bx
		push	dx
		mov	ax, 1
		and	ax, [bp-96h]
		push	ax
		mov	ax, [bp-96h]
		test	ax, 80h
		jz	loc_A88_3AC
		mov	ax, 2
		mov	word ptr [bp-2], 4
		jmp	short loc_A88_3C3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_3AC:				; CODE XREF: seg043:03A0j
		test	ax, 100h
		jz	loc_A88_3BB
		mov	ax, 8
		mov	word ptr [bp-2], 0Ah
		jmp	short loc_A88_3C3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_3BB:				; CODE XREF: seg043:03AFj
		mov	word ptr [bp-2], 8
		mov	ax, 6

loc_A88_3C3:				; CODE XREF: seg043:03AAj seg043:03B9j
		push	ax
		call	far ptr	sub_0_4376
		mov	ax, [bp-2]
		add	[bp+6],	ax
		push	ss
		pop	es
		assume es:nothing
		lea	di, [bp-85h]

loc_A88_3D5:				; CODE XREF: seg043:02BCj seg043:0312j
		test	word ptr [bp-96h], 8
		jz	loc_A88_3F0
		mov	dx, [bp-90h]
		or	dx, dx
		jle	loc_A88_3F0

loc_A88_3E5:				; CODE XREF: seg043:02BFj
		call	sub_A88_3F
		sub	dx, cx
		jle	loc_A88_3F0
		mov	[bp-8Ah], dx

loc_A88_3F0:				; CODE XREF: seg043:03DBj seg043:03E3j ...
		mov	al, [bp-8Bh]
		or	al, al
		jz	loc_A88_40C
		cmp	byte ptr es:[di], 2Dh ;	'-'
		jz	loc_A88_40C
		sub	word ptr [bp-8Ah], 1
		adc	word ptr [bp-8Ah], 0
		dec	di
		mov	es:[di], al

loc_A88_40C:				; CODE XREF: seg043:03F6j seg043:03FCj
		call	sub_A88_3F

loc_A88_40F:				; CODE XREF: seg043:0332j seg043:0371j
		mov	si, di
		mov	di, [bp-94h]
		mov	bx, [bp-90h]
		mov	ax, 5
		and	ax, [bp-96h]
		cmp	ax, 5
		jnz	loc_A88_43B
		mov	ah, [bp-92h]
		cmp	ah, 6Fh	; 'o'
		jnz	loc_A88_43E
		cmp	word ptr [bp-8Ah], 0
		jg	loc_A88_43B
		mov	word ptr [bp-8Ah], 1

loc_A88_43B:				; CODE XREF: seg043:0423j seg043:0433j
		jmp	short loc_A88_45C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 2

loc_A88_43E:				; CODE XREF: seg043:042Cj
		cmp	ah, 78h	; 'x'
		jz	loc_A88_448
		cmp	ah, 58h	; 'X'
		jnz	loc_A88_45C

loc_A88_448:				; CODE XREF: seg043:0441j
		or	word ptr [bp-96h], 40h
		dec	bx
		dec	bx
		sub	word ptr [bp-8Ah], 2
		jge	loc_A88_45C
		mov	word ptr [bp-8Ah], 0

loc_A88_45C:				; CODE XREF: seg043:043Bj seg043:0446j ...
		add	cx, [bp-8Ah]
		test	word ptr [bp-96h], 2
		jnz	loc_A88_474
		jmp	short loc_A88_470
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_46A:				; CODE XREF: seg043:0472j
		mov	al, 20h	; ' '
		call	sub_A88_4C
		dec	bx

loc_A88_470:				; CODE XREF: seg043:0468j
		cmp	bx, cx
		jg	loc_A88_46A

loc_A88_474:				; CODE XREF: seg043:0466j
		test	word ptr [bp-96h], 40h
		jz	loc_A88_488
		mov	al, 30h	; '0'
		call	sub_A88_4C
		mov	al, [bp-92h]
		call	sub_A88_4C

loc_A88_488:				; CODE XREF: seg043:047Aj
		mov	dx, [bp-8Ah]
		or	dx, dx
		jle	loc_A88_4B7
		sub	cx, dx
		sub	bx, dx
		mov	al, es:[si]
		cmp	al, 2Dh	; '-'
		jz	loc_A88_4A3
		cmp	al, 20h	; ' '
		jz	loc_A88_4A3
		cmp	al, 2Bh	; '+'
		jnz	loc_A88_4AA

loc_A88_4A3:				; CODE XREF: seg043:0499j seg043:049Dj
		lods	byte ptr es:[si]
		call	sub_A88_4C
		dec	cx
		dec	bx

loc_A88_4AA:				; CODE XREF: seg043:04A1j
		xchg	cx, dx
		jcxz	loc_A88_4B5

loc_A88_4AE:				; CODE XREF: seg043:04B3j
		mov	al, 30h	; '0'
		call	sub_A88_4C
		loop	loc_A88_4AE

loc_A88_4B5:				; CODE XREF: seg043:04ACj
		xchg	cx, dx

loc_A88_4B7:				; CODE XREF: seg043:048Ej
		jcxz	loc_A88_4CA
		sub	bx, cx

loc_A88_4BB:				; CODE XREF: seg043:04C8j
		lods	byte ptr es:[si]
		mov	[di], al
		inc	di
		dec	byte ptr [bp-53h]
		jg	loc_A88_4C8
		call	sub_A88_54

loc_A88_4C8:				; CODE XREF: seg043:04C3j
		loop	loc_A88_4BB

loc_A88_4CA:				; CODE XREF: seg043:04B7j
		or	bx, bx
		jle	loc_A88_4D7
		mov	cx, bx

loc_A88_4D0:				; CODE XREF: seg043:04D5j
		mov	al, 20h	; ' '
		call	sub_A88_4C
		loop	loc_A88_4D0

loc_A88_4D7:				; CODE XREF: seg043:04CCj
		jmp	loc_A88_84
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_4DA:				; CODE XREF: seg043:00EAj
					; DATA XREF: seg043:00EFo
		mov	[bp+8],	si	; case 0x12
		mov	di, [bp+6]
		test	word ptr [bp-96h], 20h
		jnz	loc_A88_4F2
		mov	di, [di]
		add	word ptr [bp+6], 2
		push	ds
		pop	es
		assume es:dseg
		jmp	short loc_A88_4F8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_4F2:				; CODE XREF: seg043:04E6j
		les	di, [di]
		assume es:nothing
		add	word ptr [bp+6], 4

loc_A88_4F8:				; CODE XREF: seg043:04F0j
		mov	ax, 50h	; 'P'
		sub	al, [bp-53h]
		add	ax, [bp-56h]
		mov	es:[di], ax
		jmp	loc_A88_80
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_A88_507:				; CODE XREF: seg043:00E3j seg043:00EAj ...
		mov	si, [bp-88h]	; default
		mov	di, [bp-94h]
		mov	al, 25h	; '%'

loc_A88_511:				; CODE XREF: seg043:0517j
		call	sub_A88_4C
		lodsb
		or	al, al
		jnz	loc_A88_511

loc_A88_519:				; CODE XREF: seg043:009Dj
		cmp	byte ptr [bp-53h], 50h ; 'P'
		jge	loc_A88_522
		call	sub_A88_54

loc_A88_522:				; CODE XREF: seg043:051Dj
		pop	es
		mov	ax, [bp-56h]
		jmp	short $+2
		pop	di
		pop	si
		mov	sp, bp
		pop	bp
		retf	0Ah
seg043		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg044		segment	byte public 'CODE' use16
		assume cs:seg044
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_ADB_0, 00000039 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_ADB_39, 00000039 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_ADB_72, 00000061 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_ADB_D3, 00000050 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _free, 00000029 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg045		segment	byte public 'CODE' use16
		assume cs:seg045
		;org 0Ch
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _fprintf,	0000001E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg046		segment	byte public 'CODE' use16
		assume cs:seg046
		;org 0Ah
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _gets, 00000064 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg047		segment	byte public 'CODE' use16
		assume cs:seg047
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __CPUTN, 00000146	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; [COLLAPSED FUNCTION _cprintf,	0000001B BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg048		segment	byte public 'CODE' use16
		assume cs:seg048
		;org 0Fh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _getch, 0000001B BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_getche:
		push	si
		cmp	byte_BFD_141C, 0
		jz	loc_B0D_3A
		push	cs
		call	near ptr _getch
		mov	si, ax
		jmp	short loc_B0D_49
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_B0D_3A:				; CODE XREF: seg048:0030j
		push	cs
		call	near ptr _getch
		mov	si, ax
		mov	ax, si
		push	ax
		call	_putch
		pop	cx

loc_B0D_49:				; CODE XREF: seg048:0038j
		mov	ax, si
		jmp	short $+2
		pop	si
		retf	
; [COLLAPSED FUNCTION _ungetch,	0000001E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg049		segment	byte public 'CODE' use16
		assume cs:seg049
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_B13_D, 0000000E BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg050		segment	byte public 'CODE' use16
		assume cs:seg050
		;org 0Bh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __graphgetmem, 00000012 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg051		segment	byte public 'CODE' use16
		assume cs:seg051
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _atol, 00000072 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _atoi, 0000000F BYTES. PRESS KEYPAD "+" TO EXPAND]
		align 4
seg051		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg052		segment	byte public 'CODE' use16
		assume cs:seg052
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
word_B1E_0	dw 0			; DATA XREF: _delay+Cr	_delay+33r ...
; [COLLAPSED FUNCTION _delay, 0000005B BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_B1E_5D, 0000005B BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg053		segment	byte public 'CODE' use16
		assume cs:seg053
		;org 8
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _getdate,	00000014 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _gettime,	00000014 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg054		segment	byte public 'CODE' use16
		assume cs:seg054
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _getenv, 00000061	BYTES. PRESS KEYPAD "+"	TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg055		segment	byte public 'CODE' use16
		assume cs:seg055
		;org 1
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _gettext,	00000055 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _puttext,	0000003C BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg056		segment	byte public 'CODE' use16
		assume cs:seg056
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _movetext, 000000AC BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg057		segment	byte public 'CODE' use16
		assume cs:seg057
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _putch, 00000017 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg058		segment	byte public 'CODE' use16
		assume cs:seg058
		;org 5
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _srand, 00000011 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _rand, 00000028 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg059		segment	byte public 'CODE' use16
		assume cs:seg059
		;org 0Eh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_B4A_E, 00000023 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __SCROLL,	00000176 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg060		segment	byte public 'CODE' use16
		assume cs:seg060
		;org 7
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION sub_B64_7, 00000040 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_B64_47, 00000034 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION sub_B64_7B, 000000CE BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __SCREENIO, 0000003D BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __VALIDATEXY, 0000004A BYTES. PRESS KEYPAD "+" TO	EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg061		segment	byte public 'CODE' use16
		assume cs:seg061
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _setdate,	00000013 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _settime,	00000013 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg062		segment	byte public 'CODE' use16
		assume cs:seg062
		;org 6
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

_sound	proc far		; CODE XREF: _outro+257P
					; _draw_laser+E9P

arg_0		= word ptr  6

		push	bp
		mov	bp, sp
		mov	bx, [bp+arg_0]
		mov	ax, 34DDh
		mov	dx, 12h
		cmp	dx, bx
		jnb	loc_B83_30
		div	bx
		mov	bx, ax
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÍËÍ OR	03H=spkr ON
					; 1: Tmr 2 data	Í¼  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		test	al, 3
		jnz	loc_B83_28
		or	al, 3
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÍËÍ OR	03H=spkr ON
					; 1: Tmr 2 data	Í¼  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 0B6h ; '¶'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).

loc_B83_28:				; CODE XREF: _sound+18j
		mov	al, bl
		out	42h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, bh
		out	42h, al		; Timer	8253-5 (AT: 8254.2).

loc_B83_30:				; CODE XREF: _sound+Ej
		pop	bp
		retf	
_sound	endp

seg062		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg063		segment	byte public 'CODE' use16
		assume cs:seg063
		;org 2
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_B86_2	proc far		; CODE XREF: _outro+267P
					; _draw_laser+F9P
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÍËÍ OR	03H=spkr ON
					; 1: Tmr 2 data	Í¼  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 0FCh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	ÍËÍ OR	03H=spkr ON
					; 1: Tmr 2 data	Í¼  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		retf	
sub_B86_2	endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		push	bp
		mov	bp, sp
		push	word ptr [bp+8]
		push	word ptr [bp+0Ah]
		mov	bx, [bp+6]
		push	word ptr [bx]
		call	_memcpy
		mov	sp, bp
		mov	ax, [bp+8]
		mov	bx, [bp+6]
		add	[bx], ax
		mov	bx, [bx]
		mov	byte ptr [bx], 0
		xor	ax, ax
		jmp	short $+2
		pop	bp
		retf	6
; [COLLAPSED FUNCTION _sprintf,	00000022 BYTES.	PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _vsprintf, 00000021 BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg064		segment	byte public 'CODE' use16
		assume cs:seg064
		;org 6
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _stime, 0000003A BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _time, 0000004F BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg065		segment	byte public 'CODE' use16
		assume cs:seg065
		;org 0Fh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _strncpy,	0000002E BYTES.	PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg066		segment	byte public 'CODE' use16
		assume cs:seg066
		;org 0Dh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION _dostounix, 00000129 BYTES. PRESS	KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION _unixtodos, 000001EA BYTES. PRESS	KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg067		segment	byte public 'CODE' use16
		assume cs:seg067
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_BCA_0	proc far		; CODE XREF: _dostounix+8P
					; _unixtodos+BP
		push	si
		push	di
		mov	ax, 145Eh
		push	ax
		call	_getenv
		pop	cx
		mov	di, ax
		mov	ax, di
		or	ax, ax
		jnz	loc_BCA_17
		jmp	short loc_BCA_7C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_17:				; CODE XREF: sub_BCA_0+12j
		push	di
		call	_strlen
		pop	cx
		cmp	ax, 4
		jb	loc_BCA_7C
		mov	al, [di]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jz	loc_BCA_7C
		mov	al, [di+1]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jz	loc_BCA_7C
		mov	al, [di+2]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jz	loc_BCA_7C
		cmp	byte ptr [di+3], 2Dh ; '-'
		jz	loc_BCA_62
		cmp	byte ptr [di+3], 2Bh ; '+'
		jz	loc_BCA_62
		mov	al, [di+3]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 2
		jz	loc_BCA_7C

loc_BCA_62:				; CODE XREF: sub_BCA_0+4Dj
					; sub_BCA_0+53j
		mov	al, [di+3]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 2
		jnz	loc_BCA_AF
		mov	al, [di+4]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 2
		jnz	loc_BCA_AF

loc_BCA_7C:				; CODE XREF: sub_BCA_0+14j
					; sub_BCA_0+21j ...
		mov	word_BFD_145C, 1
		mov	word_BFD_145A, 0
		mov	word_BFD_1458, 4650h
		mov	ax, 1461h
		push	ax
		push	word_BFD_1454
		call	_strcpy
		pop	cx
		pop	cx
		mov	ax, 1465h
		push	ax
		push	word_BFD_1456
		call	_strcpy
		pop	cx
		pop	cx
		jmp	loc_BCA_172
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_AF:				; CODE XREF: sub_BCA_0+6Dj
					; sub_BCA_0+7Aj
		mov	ax, 4
		push	ax
		xor	ax, ax
		push	ax
		push	word_BFD_1456
		call	_memset
		add	sp, 6
		mov	ax, 3
		push	ax
		push	di
		push	word_BFD_1454
		call	_strncpy
		add	sp, 6
		mov	bx, word_BFD_1454
		mov	byte ptr [bx+3], 0
		mov	ax, di
		add	ax, 3
		push	ax
		call	_atol
		pop	cx
		xor	cx, cx
		mov	bx, 0E10h
		call	LXMUL@
		mov	word_BFD_145A, dx
		mov	word_BFD_1458, ax
		mov	word_BFD_145C, 0
		mov	si, 3
		jmp	short loc_BCA_16B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_103:				; CODE XREF: sub_BCA_0+170j
		mov	bx, si
		mov	al, [bx+di]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jz	loc_BCA_16A
		mov	ax, di
		add	ax, si
		push	ax
		call	_strlen
		pop	cx
		cmp	ax, 3
		jb	loc_BCA_143
		mov	bx, si
		add	bx, di
		mov	al, [bx+1]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jz	loc_BCA_143
		mov	bx, si
		add	bx, di
		mov	al, [bx+2]
		cbw	
		mov	bx, ax
		test	byte ptr [bx+10E7h], 0Ch
		jnz	loc_BCA_145

loc_BCA_143:				; CODE XREF: sub_BCA_0+11Fj
					; sub_BCA_0+130j
		jmp	short loc_BCA_172
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_145:				; CODE XREF: sub_BCA_0+141j
		mov	ax, 3
		push	ax
		mov	ax, di
		add	ax, si
		push	ax
		push	word_BFD_1456
		call	_strncpy
		add	sp, 6
		mov	bx, word_BFD_1456
		mov	byte ptr [bx+3], 0
		mov	word_BFD_145C, 1
		jmp	short loc_BCA_172
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_16A:				; CODE XREF: sub_BCA_0+10Fj
		inc	si

loc_BCA_16B:				; CODE XREF: sub_BCA_0+101j
		mov	bx, si
		cmp	byte ptr [bx+di], 0
		jnz	loc_BCA_103

loc_BCA_172:				; CODE XREF: sub_BCA_0+ACj
					; sub_BCA_0+143j ...
		pop	di
		pop	si
		retf	
sub_BCA_0	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_BCA_175	proc far		; CODE XREF: _dostounix+D0P
					; _unixtodos+130P

arg_0		= word ptr  6
arg_2		= word ptr  8
arg_4		= word ptr  0Ah
arg_6		= byte ptr  0Ch

		push	bp
		mov	bp, sp
		push	si
		push	di
		mov	si, [bp+arg_2]
		or	si, si
		jnz	loc_BCA_1A9
		mov	di, [bp+arg_4]
		cmp	[bp+arg_4], 3Bh	; ';'
		jb	loc_BCA_196
		mov	ax, [bp+arg_0]
		add	ax, 46h	; 'F'
		test	ax, 3
		jnz	loc_BCA_196
		dec	di

loc_BCA_196:				; CODE XREF: sub_BCA_175+13j
					; sub_BCA_175+1Ej
		xor	si, si
		jmp	short loc_BCA_19B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_19A:				; CODE XREF: sub_BCA_175+30j
		inc	si

loc_BCA_19B:				; CODE XREF: sub_BCA_175+23j
		mov	bx, si
		shl	bx, 1
		mov	ax, [bx+143Ah]
		cmp	ax, di
		jbe	loc_BCA_19A
		jmp	short loc_BCA_1C8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_1A9:				; CODE XREF: sub_BCA_175+Aj
		cmp	si, 3
		jb	loc_BCA_1B9
		mov	ax, [bp+arg_0]
		add	ax, 46h	; 'F'
		test	ax, 3
		jz	loc_BCA_1BC

loc_BCA_1B9:				; CODE XREF: sub_BCA_175+37j
		dec	[bp+arg_4]

loc_BCA_1BC:				; CODE XREF: sub_BCA_175+42j
		mov	bx, si
		dec	bx
		shl	bx, 1
		mov	ax, [bx+143Ah]
		add	[bp+arg_4], ax

loc_BCA_1C8:				; CODE XREF: sub_BCA_175+32j
		cmp	si, 4
		jb	loc_BCA_245
		jz	loc_BCA_1D6
		cmp	si, 0Ah
		ja	loc_BCA_245
		jnz	loc_BCA_240

loc_BCA_1D6:				; CODE XREF: sub_BCA_175+58j
		mov	bx, si
		shl	bx, 1
		cmp	[bp+arg_0], 10h
		jle	loc_BCA_1EF
		cmp	si, 4
		jnz	loc_BCA_1EF
		mov	cx, [bx+1438h]
		add	cx, 7
		jmp	short loc_BCA_1F3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		db 90h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_1EF:				; CODE XREF: sub_BCA_175+69j
					; sub_BCA_175+6Ej
		mov	cx, [bx+143Ah]

loc_BCA_1F3:				; CODE XREF: sub_BCA_175+77j
		mov	bx, [bp+arg_0]
		add	bx, 7B2h
		test	bl, 3
		jz	loc_BCA_200
		dec	cx

loc_BCA_200:				; CODE XREF: sub_BCA_175+88j
		mov	bx, [bp+arg_0]
		inc	bx
		sar	bx, 1
		sar	bx, 1
		add	bx, cx
		mov	ax, 16Dh
		mul	[bp+arg_0]
		add	ax, bx
		add	ax, 4
		xor	dx, dx
		mov	bx, 7
		div	bx
		sub	cx, dx
		mov	ax, [bp+arg_4]
		cmp	si, 4
		jnz	loc_BCA_234
		cmp	ax, cx
		ja	loc_BCA_240
		jnz	loc_BCA_245
		cmp	[bp+arg_6], 2
		jb	loc_BCA_245
		jmp	short loc_BCA_240
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_234:				; CODE XREF: sub_BCA_175+AFj
		cmp	ax, cx
		jb	loc_BCA_240
		jnz	loc_BCA_245
		cmp	[bp+arg_6], 1
		ja	loc_BCA_245

loc_BCA_240:				; CODE XREF: sub_BCA_175+5Fj
					; sub_BCA_175+B3j ...
		mov	ax, 1
		jmp	short loc_BCA_249
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BCA_245:				; CODE XREF: sub_BCA_175+56j
					; sub_BCA_175+5Dj ...
		xor	ax, ax
		jmp	short $+2

loc_BCA_249:				; CODE XREF: sub_BCA_175+CEj
		pop	di
		pop	si
		pop	bp
		retf	8
sub_BCA_175	endp

seg067		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg068		segment	byte public 'CODE' use16
		assume cs:seg068
		;org 0Fh
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __VPTR, 00000025 BYTES. PRESS KEYPAD "+" TO EXPAND]
; [COLLAPSED FUNCTION __VRAM, 0000007C BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg069		segment	byte public 'CODE' use16
		assume cs:seg069
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
; [COLLAPSED FUNCTION __wherexy, 0000000E BYTES. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_wherex:
		push	cs
		call	near ptr __wherexy
		mov	ah, 0
		mov	dl, byte ptr word_BFD_1404
		mov	dh, 0
		sub	ax, dx
		inc	ax
		jmp	short $+2
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

_wherey:
		push	cs
		call	near ptr __wherexy
		mov	cl, 8
		shr	ax, cl
		mov	ah, 0
		mov	dl, byte ptr word_BFD_1404+1
		mov	dh, 0
		sub	ax, dx
		inc	ax
		jmp	short $+2
		retf	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
seg069		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure data
dseg		segment	para public 'DATA' use16
		assume cs:dseg
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  54h	; T
		db  75h	; u
		db  72h	; r
		db  62h	; b
		db  6Fh	; o
		db  2Dh	; -
		db  43h	; C
		db  20h	;  
		db  2Dh	; -
		db  20h	;  
		db  43h	; C
		db  6Fh	; o
		db  70h	; p
		db  79h	; y
		db  72h	; r
		db  69h	; i
		db  67h	; g
		db  68h	; h
		db  74h	; t
		db  20h	;  
		db  28h	; (
		db  63h	; c
		db  29h	; )
		db  20h	;  
		db  31h	; 1
		db  39h	; 9
		db  38h	; 8
		db  38h	; 8
		db  20h	;  
		db  42h	; B
		db  6Fh	; o
		db  72h	; r
		db  6Ch	; l
		db  61h	; a
		db  6Eh	; n
		db  64h	; d
		db  20h	;  
		db  49h	; I
		db  6Eh	; n
		db  74h	; t
		db  6Ch	; l
		db  2Eh	; .
		db    0	;  
		db  4Eh	; N
		db  75h	; u
		db  6Ch	; l
		db  6Ch	; l
		db  20h	;  
		db  70h	; p
		db  6Fh	; o
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  61h	; a
		db  73h	; s
		db  73h	; s
		db  69h	; i
		db  67h	; g
		db  6Eh	; n
		db  6Dh	; m
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db  0Dh	;  
		db  0Ah	;  
		db  44h	; D
		db  69h	; i
		db  76h	; v
		db  69h	; i
		db  64h	; d
		db  65h	; e
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  0Dh	;  
		db  0Ah	;  
unk_BFD_56	db  41h	; A		; DATA XREF: _abort+4o
		db  62h	; b
		db  6Eh	; n
		db  6Fh	; o
		db  72h	; r
		db  6Dh	; m
		db  61h	; a
		db  6Ch	; l
		db  20h	;  
		db  70h	; p
		db  72h	; r
		db  6Fh	; o
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  6Dh	; m
		db  20h	;  
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  6Dh	; m
		db  69h	; i
		db  6Eh	; n
		db  61h	; a
		db  74h	; t
byte_BFD_6F	db 69h			; DATA XREF: sub_0_388Er sub_0_38A3r
dword_BFD_70	dd 0A0D6E6Fh		; DATA XREF: sub_0_2C28+Fr
					; sub_0_2C7D+8r ...
dword_BFD_74	dd 0			; DATA XREF: sub_0_16D+6w
					; __restorezero+4r ...
dword_BFD_78	dd 0			; DATA XREF: sub_0_16D+13w
					; __restorezero+Fr ...
dword_BFD_7C	dd 0			; DATA XREF: sub_0_16D+20w
					; __restorezero+1Ar ...
dword_BFD_80	dd 0			; DATA XREF: sub_0_16D+2Dw
					; __restorezero+25r ...
word_BFD_84	dw 0			; DATA XREF: start+11Br seg000:42BBw
word_BFD_86	dw 0			; DATA XREF: start+117r seg000:42CCw
word_BFD_88	dw 0			; DATA XREF: start+113r sub_0_3A53+85r ...
dword_BFD_8A	dd 0			; DATA XREF: start+2Er	start+68w ...
word_BFD_8E	dw 0			; DATA XREF: start+77w	sub_0_3A53+6Cr	...
word_BFD_90	dw 0			; DATA XREF: start+19w	start+CDr ...
word_BFD_92	dw 0			; DATA XREF: start+16w	__EMURESET+5Cr	...
word_BFD_94	dw 0			; DATA XREF: sub_8F3_9+89w
					; sub_97E_A+98w ...
word_BFD_96	dw 0			; DATA XREF: start+25w	start+4Cw ...
word_BFD_98	dw 0			; DATA XREF: start+106w
word_BFD_9A	dw 0			; DATA XREF: start+10Aw sub_0_2EC5+1Er ...
		db  0Eh	;  
		db  7Ah	; z
word_BFD_9E	dw 7A0Eh		; DATA XREF: ___brk+10w ___sbrk+9r ...
		db  0Eh	;  
		db  7Ah	; z
		db    0	;  
		db    0	;  
word_BFD_A4	dw 0			; DATA XREF: start+C5w
		align 4
word_BFD_A8	dw 0			; DATA XREF: start+C9w
		align 4
word_BFD_AC	dw 0			; DATA XREF: start+21w
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_182	db 0			; DATA XREF: sub_643_1DC4+5r
					; sub_643_1DC4+27w ...
byte_BFD_183	db 0			; DATA XREF: sub_643_FFA+8Cw
					; sub_643_FFA+A6w ...
byte_BFD_184	db 0			; DATA XREF: sub_643_1DC4+8r
byte_BFD_185	db 0			; DATA XREF: seg002:01BDr seg002:02F6r ...
word_BFD_186	dw 0			; DATA XREF: sub_643_C4+2r
					; sub_643_C4+9w ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  3Ch	; <
		db    0	;  
		db  1Eh	;  
		db    0	;  
		db  0Ah	;  
		db    0	;  
_record	dd 5.0e3		; DATA XREF: _main+914r _main+950w ...
byte_BFD_19E	db 52h			; DATA XREF: _main+953w
byte_BFD_19F	db 4Fh			; DATA XREF: _main+958w
byte_BFD_1A0	db 42h			; DATA XREF: _main+95Dw
byte_BFD_1A1	db 0			; DATA XREF: _main+962w
aAguargeOCarreg	db 0Ah
		db ' Aguarge o carregamento dos desenhos...',0
aAtacC_bmp	db 'ATAC-C.BMP',0
aCarregamentoCo	db 0Ah
		db ' Carregamento concluido',0
aAperteQualquer	db 0Ah
		db ' Aperte qualquer tecla para iniciar',0
		db    0	;  
		db  25h	; %
		db  30h	; 0
		db  37h	; 7
		db  2Eh	; .
		db  30h	; 0
		db  66h	; f
		db    0	;  
		db  25h	; %
		db  30h	; 0
		db  37h	; 7
		db  2Eh	; .
		db  30h	; 0
		db  66h	; f
		db    0	;  
		db  50h	; P
		db  41h	; A
		db  52h	; R
		db  41h	; A
		db  42h	; B
		db  45h	; E
		db  4Eh	; N
		db  53h	; S
		db  20h	;  
		db  21h	; !
		db    0	;  
		db  47h	; G
		db  41h	; A
		db  4Dh	; M
		db  45h	; E
		db  20h	;  
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db    0	;  
		db  45h	; E
		db  6Eh	; n
		db  74h	; t
		db  72h	; r
		db  65h	; e
		db  20h	;  
		db  73h	; s
		db  65h	; e
		db  75h	; u
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  6Dh	; m
		db  65h	; e
		db  20h	;  
		db  3Ah	; :
		db    0	;  
		db  1Bh	;  
		db  5Bh	; [
		db  31h	; 1
		db  38h	; 8
		db  3Bh	; ;
		db  32h	; 2
		db  30h	; 0
		db  66h	; f
		db    0	;  
		db  41h	; A
		db  70h	; p
		db  65h	; e
		db  72h	; r
		db  74h	; t
		db  65h	; e
		db  20h	;  
		db  71h	; q
		db  75h	; u
		db  61h	; a
		db  6Ch	; l
		db  71h	; q
		db  75h	; u
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  74h	; t
		db  65h	; e
		db  63h	; c
		db  6Ch	; l
		db  61h	; a
		db  20h	;  
		db  70h	; p
		db  2Fh	; /
		db  20h	;  
		db  72h	; r
		db  65h	; e
		db  63h	; c
		db  6Fh	; o
		db  6Dh	; m
		db  65h	; e
		db  63h	; c
		db  61h	; a
		db  72h	; r
		db  2Eh	; .
		db  2Eh	; .
		db  2Eh	; .
		db    0	;  
dbl_BFD_278	dq 4.0			; DATA XREF: _main+296r
deg_to_rad	dq 5.729577951308232e1	; DATA XREF: _main+29Br
					; _circ_explosion+25r ...
dbl_BFD_288	dq 2.0e1		; DATA XREF: _main+2B1r
flt_BFD_290	dd 1.1e1		; DATA XREF: _main+2CFr
flt_BFD_294	dd 2.24e2		; DATA XREF: _main+2F6r
dbl_BFD_298	dq 7.0			; DATA XREF: _main+388r
flt_BFD_2A0	dd 1.28e2		; DATA XREF: _main+417r _main+4A5r ...
flt_BFD_2A4	dd 1.4e1		; DATA XREF: _main+432r _main+517r ...
dbl_BFD_2A8	dq 1.0			; DATA XREF: _main+472r _main+557r ...
dbl_BFD_2B0	dq 8.0			; DATA XREF: _main+7A3r _main+7E5r ...
dbl_BFD_2B8	dq 1.0e2		; DATA XREF: _main+7BAr
dbl_BFD_2C0	dq 5.0e1		; DATA XREF: _main+803r
dbl_BFD_2C8	dq 1.0e3		; DATA XREF: _main+854r
dbl_BFD_2D0	dq 5.0e2		; DATA XREF: _main+898r
aPersonagensEVa	db 'Personagens e valores :',0
word_BFD_2F0	dw 7553h		; DATA XREF: sub_0_2C28+5w
					; seg000:2C3Cr	...
word_BFD_2F2	dw 2061h		; DATA XREF: sub_0_2C28+8w
					; seg000:2C40r	...
aNave		db 'Nave',0
		db  4Fh	; O
		db  20h	;  
		db  49h	; I
		db  6Eh	; n
		db  69h	; i
		db  6Dh	; m
		db  69h	; i
word_BFD_300	dw 6F67h		; DATA XREF: seg000:2F5Bw seg000:2F79r ...
word_BFD_302	dw 203Ah		; DATA XREF: seg000:2F5Fw seg000:2F88r ...
word_BFD_304	dw 3031h		; DATA XREF: seg000:2F4Cw seg000:2F7Fr ...
word_BFD_306	dw 2030h		; DATA XREF: seg000:2F4Fw seg000:2F74r ...
aPontos		db 'pontos',0
aPowerUp50Ponto	db 'Power Up: 50 pontos + poder de fogo',0
aVidaExtraMaisU	db 'Vida Extra: Mais uma vida',0
aBonus1000Ponto	db 'Bonus: 1000 pontos',0
aPressioneQualq	db 'Pressione qualquer tecla...',0
aEteLauroGomes	db 'ETE LAURO GOMES',0
a30Anos		db '30 anos',0
aRobsonDosSanto	db 'Robson dos Santos Franca',0
		db 'H',0
aRicardoS_Silva	db 'Ricardo S. Silva',0
aERogerAlvareng	db 'e Roger Alvarenga',0
aApresentam___	db 'APRESENTAM ...',0
aAtacC		db 'ATAC-C',0
		db 'H',0
		db 'H',0
aAtacCCTodosOsD	db 'ATAC-C(c) Todos os direitos reservados...',0
a___ATurma2o_OD	db '... a turma 2o. O da area de PD e',0
aAEteLauroGomes	db ' a ETE LAURO GOMES pelos seus 30 anos',0
aPressioneUmaTe	db 'Pressione uma tecla para seguir...',0
aEteLauroGome_0	db 'ETE LAURO GOMES',0
a30Anos_0	db '30 anos',0
		db  53h	; S
		db  43h	; C
		db  4Fh	; O
		db  52h	; R
		db  45h	; E
byte_BFD_49E	db 20h			; DATA XREF: sub_0_2EC5r sub_0_2EC5+7r
word_BFD_49F	dw 3Ah			; DATA XREF: sub_0_2F19+8r
word_BFD_4A1	dw 4552h		; DATA XREF: sub_0_2F19+4r
					; sub_0_2F19+1Cw
dword_BFD_4A3	dd 44524F43h		; DATA XREF: sub_0_2F19+12r
word_BFD_4A7	dw 3Ah			; DATA XREF: sub_0_2EC5+Er
					; sub_0_2EC5+3Br ...
word_BFD_4A9	dw 6E49h		; DATA XREF: sub_0_2EC5+15w
					; sub_0_2EC5+2Fr
word_BFD_4AB	dw 7473h		; DATA XREF: sub_0_2EC5+18w
					; sub_0_2EC5+35r
aRucoes		db 'rucoes',0
aSeuObjetivoEDe	db 'Seu objetivo e',27h,' destruir as naves',0
aInimigasQueSob	db 'inimigas que sobrevoam sobre voce.',0
a_paraIssoVoceD	db '.Para isso voce dispoe de um canhao',0
aDeLongoAlcance	db ' de longo alcance. Aperte <ALT> p/ ',0
aAtirar_Utilize	db 'atirar. Utilize tambem as teclas',0
aShiftParaSeMov	db 'SHIFT para se mover.Se destruir o',0
aPObteraMaisDoi	db '(P) obtera mais dois tiros extras.',0
aHaEntretantoUm	db 'Ha',27h,', entretanto, um porem... se 5 ',0
aNavesDesceremP	db 'naves descerem para o fim da tela...',0
aGameOverTemUmI	db 'GAME OVER!! Tem um indicador abaixo ',0
aQueIndicaAsNav	db 'que indica as naves que desceram,so',0
aQueAoContrario	db 'que ao contrario... Assim se tem 2 ',0
aNavesSignifica	db 'naves significa que 3 ja desceram...',0
aDeVezEmQuandoE	db 'De vez em quando esse simbolo cai na',0
aTela_SeDestrui	db 'tela. Se destrui-lo, voce "ganha" 3 vi-',0
aDasExtras_TemT	db 'das extras. Tem tambem um (B) que da ',0
a1000PontosSeVo	db '1000 pontos se voce destrui-lo',0
aBOASORTE	db 'B O A   S O R T E   ! ! !',0
aPressioneQua_0	db 'Pressione qualquer tecla para comecar...',0
aSelecioneAVelo	db 'Selecione a velocidade',0
a1_Lento	db '1. Lento',0
a2_Medio	db '2. Medio',0
a3_Rapido	db '3. Rapido',0
aPressioneQua_1	db 'Pressione qualquer tecla',0
aEscolhaADificu	db 'Escolha a dificuldade',0
a1_Facil	db '1. Facil',0
a2_Dificil	db '2. Dificil',0
aPressioneQua_2	db 'Pressione qualquer tecla',0
		align 2
word_BFD_7E6	dw 0			; DATA XREF: _cos+32r
word_BFD_7E8	dw 0			; DATA XREF: _cos+2Er
word_BFD_7EA	dw 420h			; DATA XREF: _cos+2Ar
word_BFD_7EC	dw 7FF0h		; DATA XREF: _cos+26r
		db  63h	; c
		db  6Fh	; o
		db  73h	; s
		db    0	;  
dword_BFD_7F2	dd 0			; DATA XREF: FPE1st+9w	FPElast+1r ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_804	dw 0			; DATA XREF: sub_0_4DC+3w sub_0_4DC+Ar ...
tbyte_BFD_806	dt 0.0			; DATA XREF: sub_0_4DC+2Dw
					; sub_0_4DC+33r ...
word_BFD_810	dw 0			; DATA XREF: seg000:0420w
word_BFD_812	dw 0			; DATA XREF: seg000:0424w
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  9Ch	; 
		db  1Eh	;  
		db  50h	; P
		db  56h	; V
		db 0B8h	; ¸
		db    0	;  
		db 0F0h	; ğ
		db  8Eh	; 
		db 0D8h	; Ø
		db  80h	; 
		db  3Eh	; >
		db 0FEh	; ş
		db 0FFh	;  
		db 0FDh	; ı
		db  75h	; u
		db    6	;  
		db 0E4h	; ä
		db  62h	; b
		db  24h	; $
		db    1	;  
		db  75h	; u
		dd 1BFDB82Eh
		db  8Eh	; 
		db 0D8h	; Ø
		db 0A0h	;  
		db  84h	; 
		db    1	;  
		db  8Ah	; 
		db  26h	; &
		db  82h	; 
		db    1	;  
		db  0Eh	;  
		db  1Fh	;  
		db  83h	; 
		db  3Eh	; >
		db  96h	; 
		db    0	;  
		db    0	;  
		db 0BEh	; ¾
		db 0F6h	; ö
		db    7	;  
		db  74h	; t
		db    8	;  
		db 0D9h	; Ù
		db  34h	; 4
		db  9Bh	; 
		db  8Ah	; 
		db    4	;  
		db  8Ah	; 
		db  64h	; d
		db    2	;  
		db 0F6h	; ö
		db 0C4h	; Ä
		db  80h	; 
		db  74h	; t
		db    9	;  
		db 0F6h	; ö
		db 0D0h	; Ğ
		db  22h	; "
		db 0C4h	; Ä
		db 0EAh	; ê
		db 0A5h	; ¥
		db    3	;  
word_BFD_860	dw 0			; DATA XREF: FPE1st+Dw
		db  5Eh	; ^
		db  58h	; X
		db  1Fh	;  
		db  0Eh	;  
		db 0E8h	; è
		db    5	;  
		db    0	;  
		db  2Eh	; .
		db 0FFh	;  
		db  2Eh	; .
		db 0F2h	; ò
		db    7	;  
		db 0CFh	; Ï
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_BFD_86F:				; CODE XREF: sub_0_56A+1BP
		wait	
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
word_BFD_870	dw 0			; DATA XREF: sub_0_56A+Dw
		db 0CBh	; Ë
		db    0	;  
		db  81h	; 
		db    0	;  
		db  8Ch	; 
		db    8	;  
		db  82h	; 
		db    0	;  
		db  93h	; 
		db    8	;  
		db  83h	; 
		db    0	;  
		db  9Ch	; 
		db    8	;  
		db  84h	; 
		db    0	;  
		db 0A8h	; ¨
		db    8	;  
		db  85h	; 
		db    0	;  
		db 0B1h	; ±
		db    8	;  
		db  86h	; 
		db    0	;  
		db 0BBh	; »
		db    8	;  
		db  44h	; D
		db  6Fh	; o
		db  6Dh	; m
		db  61h	; a
		db  69h	; i
		db  6Eh	; n
		db    0	;  
		db  44h	; D
		db  65h	; e
		db  6Eh	; n
		db  6Fh	; o
		db  72h	; r
		db  6Dh	; m
		db  61h	; a
		db  6Ch	; l
		db    0	;  
		db  44h	; D
		db  69h	; i
		db  76h	; v
		db  69h	; i
		db  64h	; d
		db  65h	; e
		db  20h	;  
		db  62h	; b
		db  79h	; y
		db  20h	;  
		db  30h	; 0
		db    0	;  
		db  4Fh	; O
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db  66h	; f
		db  6Ch	; l
		db  6Fh	; o
		db  77h	; w
		db    0	;  
		db  55h	; U
		db  6Eh	; n
		db  64h	; d
		db  65h	; e
		db  72h	; r
		db  66h	; f
		db  6Ch	; l
		db  6Fh	; o
		db  77h	; w
		db    0	;  
		db  50h	; P
		db  61h	; a
		db  72h	; r
		db  74h	; t
		db  69h	; i
		db  61h	; a
		db  6Ch	; l
		db  20h	;  
		db  6Ch	; l
		db  6Fh	; o
		db  73h	; s
		db  73h	; s
		db  20h	;  
		db  6Fh	; o
		db  66h	; f
		db  20h	;  
		db  70h	; p
		db  72h	; r
		db  65h	; e
		db  63h	; c
		db  69h	; i
		db  73h	; s
		db  69h	; i
		db  6Fh	; o
		db  6Eh	; n
		db    0	;  
		db  46h	; F
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  74h	; t
		db  69h	; i
		db  6Eh	; n
		db  67h	; g
		db  20h	;  
		db  70h	; p
		db  6Fh	; o
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  3Ah	; :
		db  20h	;  
		db  25h	; %
		db  73h	; s
		db  2Eh	; .
		db  0Ah	;  
		db    0	;  
		db 0FFh	;  
		db 0FFh	;  
		db  7Fh	; 
		db  7Fh	; 
word_BFD_8F4	dw 0FFFFh		; DATA XREF: seg010:0328r
word_BFD_8F6	dw 0FFFFh		; DATA XREF: seg010:0324r
word_BFD_8F8	dw 0FFFFh		; DATA XREF: seg010:0320r
word_BFD_8FA	dw 7FEFh		; DATA XREF: seg010:031Cr
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FEh	; ş
		db  7Fh	; 
		db    0	;  
		db    0	;  
		db 0C0h	; À
		db  7Fh	; 
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  80h	; 
		db    1	;  
		db    0	;  
dbl_BFD_914	dq 0.0			; DATA XREF: sub_8FD_4+Cr
flt_BFD_91C	dd 1.0			; DATA XREF: sub_8FF_C+C0r
		db    0	;  
		db    0	;  
		db  20h	;  
		db  41h	; A
		db    0	;  
		db    0	;  
		db 0C8h	; È
		db  42h	; B
		db    0	;  
		db    0	;  
		db  7Ah	; z
		db  44h	; D
		db    0	;  
		db  40h	; @
		db  1Ch	;  
		db  46h	; F
		db    0	;  
		db  50h	; P
		db 0C3h	; Ã
		db  47h	; G
		db    0	;  
		db  24h	; $
		db  74h	; t
		db  49h	; I
		db  80h	; 
		db  96h	; 
		db  18h	;  
		db  4Bh	; K
flt_BFD_93C	dd 1.0e8		; DATA XREF: sub_8FF_C+47r
dbl_BFD_940	dq 1.0e16		; DATA XREF: sub_8FF_C+55r
tbyte_BFD_948	dt 1.0e32		; DATA XREF: sub_8FF_C+5Er
tbyte_BFD_952	dt 9.9999999999999999998e63 ; DATA XREF: sub_8FF_C+6Ar
tbyte_BFD_95C	dt 9.9999999999999999993e127 ; DATA XREF: sub_8FF_C+76r
tbyte_BFD_966	dt 9.9999999999999999985e255 ; DATA XREF: sub_8FF_C+82r
tbyte_BFD_970	dt 1.0e512		; DATA XREF: sub_8FF_C+8Er
tbyte_BFD_97A	dt 9.9999999999999999997e1023 ;	DATA XREF: sub_8FF_C+9Ar
tbyte_BFD_984	dt 1.0e2048		; DATA XREF: sub_8FF_C+A6r
tbyte_BFD_98E	dt 1.0e4096		; DATA XREF: sub_8FF_C+B2r
flt_BFD_998	dd 3.4028237e38		; DATA XREF: sub_8FF_C+17r
flt_BFD_99C	dd 3.4028237e38		; DATA XREF: seg010:02A2r
flt_BFD_9A0	dd -3.4028237e38	; DATA XREF: seg010:029Br
flt_BFD_9A4	dd 5.1042355e38		; DATA XREF: seg010:02DCr
flt_BFD_9A8	dd -5.1042355e38	; DATA XREF: seg010:02D5r
tbyte_BFD_9AC	dt 0.0			; DATA XREF: seg010:0032r
word_BFD_9B6	dw 0			; DATA XREF: _sin+32r
word_BFD_9B8	dw 0			; DATA XREF: _sin+2Er
word_BFD_9BA	dw 420h			; DATA XREF: _sin+2Ar
word_BFD_9BC	dw 7FF0h		; DATA XREF: _sin+26r
		db  73h	; s
		db  69h	; i
		db  6Eh	; n
		db    0	;  
		db 0CEh	; Î
		db    9	;  
		db 0D5h	; Õ
		db    9	;  
		db 0DAh	; Ú
		db    9	;  
		db 0E3h	; ã
		db    9	;  
		db 0EDh	; í
		db    9	;  
		db 0F3h	; ó
		db    9	;  
		db  44h	; D
		db  4Fh	; O
		db  4Dh	; M
		db  41h	; A
		db  49h	; I
		db  4Eh	; N
		db    0	;  
		db  53h	; S
		db  49h	; I
		db  4Eh	; N
		db  47h	; G
		db    0	;  
		db  4Fh	; O
		db  56h	; V
		db  45h	; E
		db  52h	; R
		db  46h	; F
		db  4Ch	; L
		db  4Fh	; O
		db  57h	; W
		db    0	;  
		db  55h	; U
		db  4Eh	; N
		db  44h	; D
		db  45h	; E
		db  52h	; R
		db  46h	; F
		db  4Ch	; L
		db  4Fh	; O
		db  57h	; W
		db    0	;  
		db  54h	; T
		db  4Ch	; L
		db  4Fh	; O
		db  53h	; S
		db  53h	; S
		db    0	;  
		db  50h	; P
		db  4Ch	; L
		db  4Fh	; O
		db  53h	; S
		db  53h	; S
		db    0	;  
		db  25h	; %
		db  73h	; s
		db  3Ah	; :
		db  20h	;  
		db  25h	; %
		db  73h	; s
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  0Ah	;  
unk_BFD_A06	db    0	;		; DATA XREF: sub_97E_A+2Er
dbl_BFD_A07	dq 0.0			; DATA XREF: sub_97E_A+1Ar
		align 2
word_BFD_A10	dw 28A0h		; DATA XREF: seg000:0FB6r
seg_BFD_A12	dw seg seg000		; DATA XREF: seg000:0FACr
byte_BFD_A14	db 1			; DATA XREF: sub_0_1E7A+7r
					; __gr_restorecrtmode+19r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_A2C	db 0			; DATA XREF: seg000:106Fw seg000:1084r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_A7D	dw 1000h		; DATA XREF: _setgraphbufsize+Ar
					; _setgraphbufsize+27w	...
word_BFD_A7F	dw 0Ah			; DATA XREF: _installuserfont+69r
					; _installuserfont+6Fr	...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  54h	; T
		db  52h	; R
		db  49h	; I
		db  50h	; P
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  4Ch	; L
		db  49h	; I
		db  54h	; T
		db  54h	; T
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  53h	; S
		db  41h	; A
		db  4Eh	; N
		db  53h	; S
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  47h	; G
		db  4Fh	; O
		db  54h	; T
		db  48h	; H
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  53h	; S
		db  43h	; C
		db  52h	; R
		db  49h	; I
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  53h	; S
		db  49h	; I
		db  4Dh	; M
		db  50h	; P
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_AE0	dw 0			; DATA XREF: seg000:2D2Er
byte_BFD_AE2	db 0			; DATA XREF: seg000:2C8Dw
		db    0	;  
		db    0	;  
		db  54h	; T
		db  53h	; S
		db  43h	; C
		db  52h	; R
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  4Ch	; L
		db  43h	; C
		db  4Fh	; O
		db  4Dh	; M
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  45h	; E
		db  55h	; U
		db  52h	; R
		db  4Fh	; O
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  42h	; B
		db  4Fh	; O
		db  4Ch	; L
		db  44h	; D
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_BAD	dw 94Eh			; DATA XREF: sub_0_CBB+12w
					; seg000:0FC9w	...
seg_BFD_BAF	dw seg seg000		; DATA XREF: sub_0_CBB+Cw seg000:0FC5w ...
word_BFD_BB1	dw 94Eh			; DATA XREF: sub_0_CBB+6w
					; sub_0_DB6+35w ...
seg_BFD_BB3	dw seg seg000		; DATA XREF: sub_0_CBBw sub_0_DB6+31w	...
byte_BFD_BB5	db 0			; DATA XREF: seg000:11ADr seg000:11B4r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_BC3	dw 0			; DATA XREF: seg000:11D5r
					; _setgraphmode+72r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_BC9	db 0			; DATA XREF: seg000:1137w
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
dword_BFD_BD4	dd 0			; DATA XREF: seg000:1141r
word_BFD_BD8	dw 0			; DATA XREF: seg000:1158w
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_BDE	db 0			; DATA XREF: seg000:113Cw
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_BE2	dw 0			; DATA XREF: seg000:1162w
word_BFD_BE4	dw 0			; DATA XREF: seg000:115Ew
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_BEE	dw 0			; DATA XREF: seg000:1151w
word_BFD_BF0	dw 0			; DATA XREF: seg000:114Dw
word_BFD_BF2	dw 0			; DATA XREF: seg000:115Bw
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_C07	db 0			; DATA XREF: seg000:1168r seg000:11E3w ...
word_BFD_C08	dw 0BB5h		; DATA XREF: _graphdefaults+1Dr
					; seg000:11C7w	...
word_BFD_C0A	dw 0BC8h		; DATA XREF: sub_0_CBB+18w
					; sub_0_CBB+4Er ...
word_BFD_C0C	dw 0			; DATA XREF: seg000:10CCw seg000:10CFr ...
word_BFD_C0E	dw 0			; DATA XREF: seg000:1064w
					; _setgraphmode+43w ...
dword_BFD_C10	dd 0			; DATA XREF: sub_0_CBB+24w
					; _setgraphmode+22r ...
word_BFD_C14	dw 0			; DATA XREF: sub_0_CBB+3Cw
					; sub_0_DB6+42w ...
word_BFD_C16	dw 0			; DATA XREF: sub_0_CBB+36w
					; sub_0_DB6+3Cw ...
word_BFD_C18	dw 0			; DATA XREF: sub_0_DB6+48w
					; sub_0_DB6+6Cr ...
word_BFD_C1A	dw 0			; DATA XREF: sub_0_CBB+48w
					; seg000:1149w
word_BFD_C1C	dw 0			; DATA XREF: sub_0_CBB+42w
					; seg000:1145w
word_BFD_C1E	dw 1			; DATA XREF: sub_0_CBB+7Aw
					; seg000:11D8w	...
word_BFD_C20	dw 1			; DATA XREF: sub_0_CBB+77w
					; seg000:11DBw	...
word_BFD_C22	dw 0			; DATA XREF: seg000:11D2w
					; _setgraphmode+14r
word_BFD_C24	dw 0			; DATA XREF: sub_0_76E+2Cw
					; seg000:093Fr	...
word_BFD_C26	dw 0			; DATA XREF: sub_0_CBB+30w
					; _settextstyle+18Dw
word_BFD_C28	dw 0			; DATA XREF: sub_0_CBB+2Aw
					; _settextstyle+189w ...
dword_BFD_C2A	dd 0			; DATA XREF: seg000:1191r
					; _setgraphmode+56r ...
byte_BFD_C2E	db 0			; DATA XREF: _getcolor+6r
					; __gr_setfillpattern+12r ...
byte_BFD_C2F	db 0			; DATA XREF: __gr_setfillpattern+Ew
					; _setcolor+11r ...
byte_BFD_C30	db 0			; DATA XREF: _graphdefaults+72w
					; _setbkcolor+12w ...
byte_BFD_C31	db 0			; DATA XREF: __gr_setlinestyle+Ew
byte_BFD_C32	db 0			; DATA XREF: __gr_setfillpattern+1Cw
					; __gr_setfillstyle+1Fw
word_BFD_C33	dw 0			; DATA XREF: _moveto+19w _moverel+10r	...
word_BFD_C35	dw 0			; DATA XREF: _moveto+1Fw _moverel+9r ...
word_BFD_C37	dw 0			; DATA XREF: __GraphNotInstalledr
					; _registerfarbgidriver+1Ar ...
byte_BFD_C39	db 0			; DATA XREF: _setallpalette+8Br
		db    0	;  
word_BFD_C3B	dw 0			; DATA XREF: sub_0_CBB+7Dw
					; _settextstyle+4Fr ...
word_BFD_C3D	dw 0			; DATA XREF: _setviewport+43w
					; _clearviewport+2Fr ...
word_BFD_C3F	dw 0			; DATA XREF: _setviewport+47w
					; _clearviewport+27r ...
word_BFD_C41	dw 0			; DATA XREF: _setviewport+4Ew
					; _clearviewport+2Cr
word_BFD_C43	dw 0			; DATA XREF: _setviewport+54w
					; _clearviewport+24r
word_BFD_C45	dw 0			; DATA XREF: _setviewport+5Aw
word_BFD_C47	dw 0			; DATA XREF: _setlinestyle+23w
word_BFD_C49	dw 0			; DATA XREF: _setlinestyle+2Aw
word_BFD_C4B	dw 0			; DATA XREF: _setlinestyle+2Dw
word_BFD_C4D	dw 0			; DATA XREF: _clearviewport+10r
					; _getfillsettings+Dr ...
word_BFD_C4F	dw 0			; DATA XREF: _clearviewport+Cr
					; _getfillsettings+9r ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_C59	db 0			; DATA XREF: _setpalette+14r
byte_BFD_C5A	db 0			; DATA XREF: _setbkcolor+1Bw
					; _setbkcolor+29w ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_C6A	dw 0			; DATA XREF: _settextstyle+38r
					; _settextstyle+1A0w
word_BFD_C6C	dw 0			; DATA XREF: _outtext+26r
					; _settextstyle+1A7w
word_BFD_C6E	dw 0			; DATA XREF: _settextstyle+1ADw
					; _setusercharsize+41w
word_BFD_C70	dw 0			; DATA XREF: _outtext+1Fr
					; _settextjustify+2Bw
word_BFD_C72	dw 0			; DATA XREF: _settextjustify+2Fw
word_BFD_C74	dw 6			; DATA XREF: _registerfarbgidriver+ACr
					; seg000:101Fr	...
		db  43h	; C
		db  47h	; G
		db  41h	; A
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  43h	; C
		db  47h	; G
		db  41h	; A
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  45h	; E
		db  47h	; G
		db  41h	; A
		db  56h	; V
		db  47h	; G
		db  41h	; A
		db    0	;  
		db    0	;  
		db    0	;  
		db  45h	; E
		db  47h	; G
		db  41h	; A
		db  56h	; V
		db  47h	; G
		db  41h	; A
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  49h	; I
		db  42h	; B
		db  4Dh	; M
		db  38h	; 8
		db  35h	; 5
		db  31h	; 1
		db  34h	; 4
		db    0	;  
		db    0	;  
		db  49h	; I
		db  42h	; B
		db  4Dh	; M
		db  38h	; 8
		db  35h	; 5
		db  31h	; 1
		db  34h	; 4
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  48h	; H
		db  45h	; E
		db  52h	; R
		db  43h	; C
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  48h	; H
		db  45h	; E
		db  52h	; R
		db  43h	; C
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  41h	; A
		db  54h	; T
		db  54h	; T
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  41h	; A
		db  54h	; T
		db  54h	; T
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  50h	; P
		db  43h	; C
		db  33h	; 3
		db  32h	; 2
		db  37h	; 7
		db  30h	; 0
		db    0	;  
		db    0	;  
		db    0	;  
		db  50h	; P
		db  43h	; C
		db  33h	; 3
		db  32h	; 2
		db  37h	; 7
		db  30h	; 0
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  78h	; x
		db  78h	; x
		db  78h	; x
		db  78h	; x
		db    0	;  
		db    0	;  
byte_BFD_D80	db 0			; DATA XREF: sub_0_62F+Bw
word_BFD_D81	dw 0			; DATA XREF: sub_0_71Er sub_0_727+16w	...
aNoError	db 'No Error',0         ; DATA XREF: _grapherrormsg+15Co
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
aBadMode	db 'Bad Mode',0         ; DATA XREF: _getmodename+1Co
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  4Eh	; N
		db  6Fh	; o
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db    0	;  
		db  28h	; (
		db  42h	; B
		db  47h	; G
		db  49h	; I
		db  29h	; )
		db  20h	;  
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  69h	; i
		db  6Eh	; n
		db  73h	; s
		db  74h	; t
		db  61h	; a
		db  6Ch	; l
		db  6Ch	; l
		db  65h	; e
		db  64h	; d
		db    0	;  
		db  47h	; G
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  68h	; h
		db  61h	; a
		db  72h	; r
		db  64h	; d
		db  77h	; w
		db  61h	; a
		db  72h	; r
		db  65h	; e
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  64h	; d
		db  65h	; e
		db  74h	; t
		db  65h	; e
		db  63h	; c
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db    0	;  
		db  44h	; D
		db  65h	; e
		db  76h	; v
		db  69h	; i
		db  63h	; c
		db  65h	; e
		db  20h	;  
		db  64h	; d
		db  72h	; r
		db  69h	; i
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  75h	; u
		db  6Eh	; n
		db  64h	; d
		db  20h	;  
		db  28h	; (
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  64h	; d
		db  65h	; e
		db  76h	; v
		db  69h	; i
		db  63h	; c
		db  65h	; e
		db  20h	;  
		db  64h	; d
		db  72h	; r
		db  69h	; i
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  28h	; (
		db    0	;  
		db  4Eh	; N
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  65h	; e
		db  6Eh	; n
		db  6Fh	; o
		db  75h	; u
		db  67h	; g
		db  68h	; h
		db  20h	;  
		db  6Dh	; m
		db  65h	; e
		db  6Dh	; m
		db  6Fh	; o
		db  72h	; r
		db  79h	; y
		db  20h	;  
		db  74h	; t
		db  6Fh	; o
		db  20h	;  
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h	;  
		db  64h	; d
		db  72h	; r
		db  69h	; i
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db    0	;  
		db  4Fh	; O
		db  75h	; u
		db  74h	; t
		db  20h	;  
		db  6Fh	; o
		db  66h	; f
		db  20h	;  
		db  6Dh	; m
		db  65h	; e
		db  6Dh	; m
		db  6Fh	; o
		db  72h	; r
		db  79h	; y
		db  20h	;  
		db  69h	; i
		db  6Eh	; n
		db  20h	;  
		db  73h	; s
		db  63h	; c
		db  61h	; a
		db  6Eh	; n
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  6Ch	; l
		db    0	;  
		db  4Fh	; O
		db  75h	; u
		db  74h	; t
		db  20h	;  
		db  6Fh	; o
		db  66h	; f
		db  20h	;  
		db  6Dh	; m
		db  65h	; e
		db  6Dh	; m
		db  6Fh	; o
		db  72h	; r
		db  79h	; y
		db  20h	;  
		db  69h	; i
		db  6Eh	; n
		db  20h	;  
		db  66h	; f
		db  6Ch	; l
		db  6Fh	; o
		db  6Fh	; o
		db  64h	; d
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  6Ch	; l
		db    0	;  
		db  46h	; F
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  75h	; u
		db  6Eh	; n
		db  64h	; d
		db  20h	;  
		db  28h	; (
		db    0	;  
		db  4Eh	; N
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  65h	; e
		db  6Eh	; n
		db  6Fh	; o
		db  75h	; u
		db  67h	; g
		db  68h	; h
		db  20h	;  
		db  6Dh	; m
		db  65h	; e
		db  6Dh	; m
		db  6Fh	; o
		db  72h	; r
		db  79h	; y
		db  20h	;  
		db  74h	; t
		db  6Fh	; o
		db  20h	;  
		db  6Ch	; l
		db  6Fh	; o
		db  61h	; a
		db  64h	; d
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  6Dh	; m
		db  6Fh	; o
		db  64h	; d
		db  65h	; e
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  72h	; r
		db  20h	;  
		db  73h	; s
		db  65h	; e
		db  6Ch	; l
		db  65h	; e
		db  63h	; c
		db  74h	; t
		db  65h	; e
		db  64h	; d
		db  20h	;  
		db  64h	; d
		db  72h	; r
		db  69h	; i
		db  76h	; v
		db  65h	; e
		db  72h	; r
		db    0	;  
		db  47h	; G
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db    0	;  
		db  47h	; G
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  49h	; I
		db  2Fh	; /
		db  4Fh	; O
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  20h	;  
		db  66h	; f
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  28h	; (
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  66h	; f
		db  6Fh	; o
		db  6Eh	; n
		db  74h	; t
		db  20h	;  
		db  6Eh	; n
		db  75h	; u
		db  6Dh	; m
		db  62h	; b
		db  65h	; e
		db  72h	; r
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  50h	; P
		db  72h	; r
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  49h	; I
		db  6Eh	; n
		db  69h	; i
		db  74h	; t
		db  69h	; i
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  7Ah	; z
		db  65h	; e
		db    0	;  
		db  50h	; P
		db  72h	; r
		db  69h	; i
		db  6Eh	; n
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  20h	;  
		db  4Dh	; M
		db  6Fh	; o
		db  64h	; d
		db  75h	; u
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  4Eh	; N
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  4Ch	; L
		db  69h	; i
		db  6Eh	; n
		db  6Bh	; k
		db  65h	; e
		db  64h	; d
		db    0	;  
		db  49h	; I
		db  6Eh	; n
		db  76h	; v
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  64h	; d
		db  20h	;  
		db  46h	; F
		db  69h	; i
		db  6Ch	; l
		db  65h	; e
		db  20h	;  
		db  56h	; V
		db  65h	; e
		db  72h	; r
		db  73h	; s
		db  69h	; i
		db  6Fh	; o
		db  6Eh	; n
		db  20h	;  
		db  4Eh	; N
		db  75h	; u
		db  6Dh	; m
		db  62h	; b
		db  65h	; e
		db  72h	; r
		db    0	;  
		db  47h	; G
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  20h	;  
		db  28h	; (
		db    0	;  
		db  29h	; )
		db    0	;  
		db  0Dh	;  
		db  0Ah	;  
		db  42h	; B
		db  47h	; G
		db  49h	; I
		db  20h	;  
		db  45h	; E
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  3Ah	; :
		db  20h	;  
		db  4Eh	; N
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  69h	; i
		db  6Eh	; n
		db  20h	;  
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  6Dh	; m
		db  6Fh	; o
		db  64h	; d
		db  65h	; e
		db  0Dh	;  
		db  0Ah	;  
		db  0Dh	;  
		db  0Ah	;  
		db  24h	; $
		db    0	;  
		db  0Dh	;  
		db  0Ah	;  
		db  42h	; B
		db  47h	; G
		db  49h	; I
		db  20h	;  
		db  45h	; E
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db  3Ah	; :
		db  20h	;  
		db  47h	; G
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  69h	; i
		db  63h	; c
		db  73h	; s
		db  20h	;  
		db  6Eh	; n
		db  6Fh	; o
		db  74h	; t
		db  20h	;  
		db  69h	; i
		db  6Eh	; n
		db  69h	; i
		db  74h	; t
		db  69h	; i
		db  61h	; a
		db  6Ch	; l
		db  69h	; i
		db  7Ah	; z
		db  65h	; e
		db  64h	; d
		db  20h	;  
		db  28h	; (
		db  75h	; u
		db  73h	; s
		db  65h	; e
		db  20h	;  
		db  27h	; '
		db  69h	; i
		db  6Eh	; n
		db  69h	; i
		db  74h	; t
		db  67h	; g
		db  72h	; r
		db  61h	; a
		db  70h	; p
		db  68h	; h
		db  27h	; '
		db  29h	; )
		db  0Dh	;  
		db  0Ah	;  
		db  0Dh	;  
		db  0Ah	;  
		db  24h	; $
		db    0	;  
		db  2Eh	; .
		db  42h	; B
		db  47h	; G
		db  49h	; I
		db    0	;  
		db  2Eh	; .
		db  43h	; C
		db  48h	; H
		db  52h	; R
		db    0	;  
		db    0	;  
word_BFD_106C	dw 0FFh			; DATA XREF: __autodetect+Bw
					; __autodetect+30r ...
byte_BFD_106E	db 0			; DATA XREF: sub_0_1E7A+29r
					; sub_0_1E7A+30r ...
byte_BFD_106F	db 0			; DATA XREF: __reinstalldevice+Dr
					; __autodetect+15w ...
byte_BFD_1070	db 0			; DATA XREF: __gr_setlinestyle+17w
dword_BFD_1071	dd 0			; DATA XREF: __gr_setgraphmode+1Cr
					; __gr_setgraphmode+26r ...
byte_BFD_1075	db 0FFh			; DATA XREF: sub_0_1E7Ar sub_0_1E7A+Ew ...
byte_BFD_1076	db 0			; DATA XREF: sub_0_1E7A+26w
					; __gr_restorecrtmode+28r
		align 2
word_BFD_1078	dw 0			; DATA XREF: __IOERROR+13w
					; __IOERROR+26w
		db    0	;  
		db  13h	;  
		db    2	;  
		db    2	;  
		db    4	;  
		db    5	;  
		db    6	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db  14h	;  
		db  15h	;  
		db    5	;  
		db  13h	;  
		db 0FFh	;  
		db  16h	;  
		db    5	;  
		db  11h	;  
		db    2	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db    5	;  
		db    5	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db  0Fh	;  
		db 0FFh	;  
		db  23h	; #
		db    2	;  
		db 0FFh	;  
		db  0Fh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db  13h	;  
		db 0FFh	;  
		db 0FFh	;  
		db    2	;  
		db    2	;  
		db    5	;  
		db  0Fh	;  
		db    2	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db  13h	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db  23h	; #
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db  23h	; #
		db 0FFh	;  
		db  13h	;  
		db 0FFh	;  
		db    0	;  
off_BFD_10D4	dd locret_98C_9		; DATA XREF: _exit+1Cr	_setvbuf+99w ...
off_BFD_10D8	dd locret_98C_9		; DATA XREF: _exit+20r
off_BFD_10DC	dd locret_98C_9		; DATA XREF: _exit+24r
word_BFD_10E0	dw 0			; DATA XREF: start+96r	start+ACr
word_BFD_10E2	dw 1000h		; DATA XREF: start+7Fr	start+8Cw ...
word_BFD_10E4	dw 0			; DATA XREF: _exit+5r _exit+11r ...
		public __ctype
__ctype		dw  2000h		; DATA XREF: _atol+12o
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  21h	; !
		db  21h	; !
		db  21h	; !
		db  21h	; !
		db  21h	; !
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db  20h	;  
		db    1	;  
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db    4	;  
		db    4	;  
word_BFD_1130	dw 404h			; DATA XREF: sub_0_3A53+1Cw
					; sub_0_3A53+56r ...
word_BFD_1132	dw 404h			; DATA XREF: sub_0_3A53+28w
					; sub_0_3A53+7Br ...
word_BFD_1134	dw 404h			; DATA XREF: sub_0_39FC+1Dw
					; sub_0_39FC+36r ...
word_BFD_1136	dw 404h			; DATA XREF: sub_0_39FC+20w
					; sub_0_39FC+39r ...
word_BFD_1138	dw 404h			; DATA XREF: sub_0_39FC+24w
					; sub_0_39FC+3Dr ...
word_BFD_113A	dw 404h			; DATA XREF: sub_0_39FC+28w
					; sub_0_39FC+41r ...
		db    4	;  
		db    4	;  
		db    4	;  
		db    4	;  
		db    4	;  
		db    4	;  
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  18h	;  
		db  18h	;  
		db  18h	;  
		db  18h	;  
		db  18h	;  
		db  18h	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db    8	;  
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  40h	; @
		db  20h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_11E8	dw 0			; DATA XREF: _gets+Fw
word_BFD_11EA	dw 209h			; DATA XREF: _gets+4Fr
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_11F2	dw 0			; DATA XREF: _gets+15w	_gets+19r
		db    0	;  
		db    0	;  
		db 0E8h	; è
		db  11h	;  
		db    0	;  
		db    0	;  
		db  0Ah	;  
		db    2	;  
		db    1	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0F8h	; ø
		db  11h	;  
		db    0	;  
		db    0	;  
		db    2	;  
		db    2	;  
		db    2	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    8	;  
		db  12h	;  
		db    0	;  
		db    0	;  
		db  43h	; C
		db    2	;  
		db    3	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  18h	;  
		db  12h	;  
		db    0	;  
		db    0	;  
		db  42h	; B
		db    2	;  
		db    4	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  28h	; (
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  38h	; 8
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  48h	; H
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  58h	; X
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  68h	; h
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  78h	; x
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  88h	; 
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  98h	; 
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0A8h	; ¨
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0B8h	; ¸
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0C8h	; È
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0D8h	; Ø
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0E8h	; è
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0F8h	; ø
		db  12h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    8	;  
		db  13h	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db 0FFh	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db  18h	;  
		db  13h	;  
		db    1	;  
		db  20h	;  
		db    2	;  
		db  20h	;  
		db    2	;  
		db  20h	;  
		db    4	;  
		db 0A0h	;  
		db    2	;  
		db 0A0h	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
		db 0FFh	;  
word_BFD_1350	dw 4000h		; DATA XREF: _open+11r
word_BFD_1352	dw 0FFFFh		; DATA XREF: _open+22r
word_BFD_1354	dw 0			; DATA XREF: sub_9DE_9F+50r
					; _setvbuf+3Ar	...
word_BFD_1356	dw 0			; DATA XREF: _setvbuf+24r _setvbuf+32w ...
aPrintScanfFloa	db 'print scanf : floating point formats not linked',0Dh,0Ah,0
		db 0Dh,0
aNull		db '(null)',0
a0123456789abcd	db '0123456789ABCDEF',0
		db  14h	;  
		db  14h	;  
		db    1	;  
		db  14h	;  
		db  15h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db    2	;  
		db    0	;  
		db  14h	;  
		db    3	;  
		db    4	;  
		db  14h	;  
		db    9	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db    5	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  0Fh	;  
		db  17h	;  
		db  0Fh	;  
		db    8	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db    7	;  
		db  14h	;  
		db  16h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  0Dh	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  10h	;  
		db  0Ah	;  
		db  0Fh	;  
		db  0Fh	;  
		db  0Fh	;  
		db    8	;  
		db  0Ah	;  
		db  14h	;  
		db  14h	;  
		db    6	;  
		db  14h	;  
		db  12h	;  
		db  0Bh	;  
		db  0Eh	;  
		db  14h	;  
		db  14h	;  
		db  11h	;  
		db  14h	;  
		db  0Ch	;  
		db  14h	;  
		db  14h	;  
		db  0Dh	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db  14h	;  
		db    0	;  
word_BFD_1404	dw 0			; DATA XREF: __crtinit+9Aw __CPUTN+62r ...
word_BFD_1406	dw 0			; DATA XREF: __crtinit+A2w __CPUTN+E0r ...
byte_BFD_1408	db 0			; DATA XREF: __c0crtinit+1Cw
					; __CPUTN+8Er ...
byte_BFD_1409	db 0			; DATA XREF: __c0crtinit+18w
byte_BFD_140A	db 0			; DATA XREF: __crtinit+10w
					; __crtinit+19r ...
byte_BFD_140B	db 0			; DATA XREF: __crtinit+4Dw
					; __VALIDATEXY+Ar
byte_BFD_140C	db 0			; DATA XREF: __crtinit+31w
					; __crtinit+9Dr ...
byte_BFD_140D	db 0			; DATA XREF: __crtinit+4Aw __CPUTN+80r ...
byte_BFD_140E	db 0			; DATA XREF: __crtinit+7Aw __VRAM+8r
word_BFD_140F	dw 0			; DATA XREF: __crtinit+8Fw __VPTR+Fr
word_BFD_1411	dw 0			; DATA XREF: __crtinit+8Cw
					; sub_B64_7B+17r ...
word_BFD_1413	dw 1			; DATA XREF: __CPUTN+87r __SCROLL+11r	...
aCompaq		db 'COMPAQ',0
byte_BFD_141C	db 0			; DATA XREF: _getchr _getch+7w ...
byte_BFD_141D	db 0			; DATA XREF: _getch+Cr	_ungetch+17w
word_BFD_141E	dw 1			; DATA XREF: _srand+Cw	_rand+4r ...
word_BFD_1420	dw 0			; DATA XREF: _srand+8w	_randr	...
		db  1Fh	;  
		db  1Ch	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Fh	;  
		db  1Ch	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db  1Eh	;  
		db  1Fh	;  
		db    0	;  
		db    0	;  
		db  1Fh	;  
		db    0	;  
		db  3Bh	; ;
		db    0	;  
		db  5Ah	; Z
		db    0	;  
		db  78h	; x
		db    0	;  
		db  97h	; 
		db    0	;  
		db 0B5h	; µ
		db    0	;  
		db 0D4h	; Ô
		db    0	;  
		db 0F3h	; ó
		db    0	;  
		db  11h	;  
		db    1	;  
		db  30h	; 0
		db    1	;  
		db  4Eh	; N
		db    1	;  
		db  6Dh	; m
		db    1	;  
word_BFD_1454	dw 7A06h		; DATA XREF: sub_BCA_0+92r
					; sub_BCA_0+C7r ...
word_BFD_1456	dw 7A0Ah		; DATA XREF: sub_BCA_0+A1r
					; sub_BCA_0+B6r ...
word_BFD_1458	dw 4650h		; DATA XREF: _dostounix+11r
					; _unixtodos+14r ...
word_BFD_145A	dw 0			; DATA XREF: _dostounix+Dr
					; _unixtodos+10r ...
word_BFD_145C	dw 1			; DATA XREF: _dostounix+B3r
					; _unixtodos+FAr ...
		db  54h	; T
		db  5Ah	; Z
		db    0	;  
		db  45h	; E
		db  53h	; S
		db  54h	; T
		db    0	;  
		db  45h	; E
		db  44h	; D
		db  54h	; T
		db    0	;  
		db    0	;  
off_BFD_146A	dw offset loc_0_2C1	; DATA XREF: start+F4r
off_BFD_146C	dw offset loc_0_381	; DATA XREF: __exit+Br
off_BFD_146E	dw offset __c0crtinit	; DATA XREF: start+10Fr
off_BFD_1470	dw offset loc_0_21	; DATA XREF: sub_0_4376r
		dw 190Ch
		dw offset unknown_libname_1
		dw offset loc_0_1000
		dw offset loc_0_C
		dw 1926h
		dd loc_926_2F6
		dd loc_926_2F2
		dd loc_0_4358
		dd loc_0_4358
		dd loc_0_4358
word_BFD_1490	dw 0			; DATA XREF: _main+771w _main+774r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
byte_BFD_3A00	db 0			; DATA XREF: seg003:0358w
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_6203	dw 0			; DATA XREF: _main+56w
word_BFD_6205	dw 0			; DATA XREF: _main+5Cw
byte_BFD_6207	db 0			; DATA XREF: _main+6C9w _main+6CCr ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_ship_x	dw 0			; DATA XREF: _main+C3w	_main+D6r ...
_difficulty	dw 0			; DATA XREF: _main+141r _main+19Fr ...
		db    0	;  
		db    0	;  
word_BFD_6212	dw 0			; DATA XREF: _main+39Bw _main+3A4r
_lives	dw 0			; DATA XREF: _main+E2w	_main+3E3w ...
_bonus_x	dw 0			; DATA XREF: _main+240w _main+244r ...
_bonus_y	dd 0.0			; DATA XREF: _main+22Fw _main+5E6r ...
word_BFD_621C	dw 0			; DATA XREF: _main+A5w
_hit_enemy	dw 0			; DATA XREF: _main+124w _main+7CAw ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_dr_oneup	dw 0			; DATA XREF: _main+99w	_main+15Dr ...
word_BFD_622E	dw 0			; DATA XREF: _main+8D0w _main+8E5r ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_enemy_count	dw 0			; DATA XREF: _main+A2w	_main+7C6w ...
_dr_bonus	dw 0			; DATA XREF: _main+9Cw	_main+156r ...
word_BFD_625E	dw 0			; DATA XREF: _main+75Cw _main+791w ...
word_BFD_6260	dw 0			; DATA XREF: _main+130w
word_BFD_6262	dw 0			; DATA XREF: _main+12Cw
_br_record	dw 0			; DATA XREF: _main+F7w	_main+93Fw ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_velocity	dw 0			; DATA XREF: _main+A28r
					; _speed+7Cw ...
_enemy_center	dw 0			; DATA XREF: _main+11Bw _main+18Br ...
_enemy_y	dd 0.0			; DATA XREF: _main+256w _main+25Cr ...
_powered_up	dw 0			; DATA XREF: _main+C0w	_main+364r ...
word_BFD_6274	dw 0			; DATA XREF: _main+121w
_pup_x	dw 0			; DATA XREF: _main+1E2w _main+1E6r ...
_pup_y	dd 0.0			; DATA XREF: _main+1D1w _main+501r ...
_dr_powerup	dw 0			; DATA XREF: _main+9Fw	_main+14Fr ...
		align 4
word_BFD_6280	dw 0			; DATA XREF: _main+367w _main+39Er
_enemy_x	dd 0.0			; DATA XREF: _main+27Er _main+2C8w ...
_e_y	dw 0			; DATA XREF: _main+266w _main+269r ...
_oneup_x	dw 0			; DATA XREF: _main+184w _main+188r ...
_oneup_y	dd 0.0			; DATA XREF: _main+173w _main+41Cr ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_6294	dw 0			; DATA XREF: _main+B19r
					; _story+205r
word_BFD_6296	dw 0			; DATA XREF: _main+B15r
					; _story+201r
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_score	dd 0.0			; DATA XREF: _main+B4w	_main+7B5r ...
word_BFD_7818	dw 0			; DATA XREF: _main+1Cw	_main+27r ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
_fpu_flag_mask	dw 0			; DATA XREF: _main+2DCw _main+303w ...
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
		db    0	;  
word_BFD_79FA	dw 0			; DATA XREF: sub_992_3A+1Ar
					; sub_992_3A+21w ...
word_BFD_79FC	dw 0			; DATA XREF: ___pull_free_block+Bw
					; ___pull_free_block+12w ...
word_BFD_79FE	dw 0			; DATA XREF: sub_992_B3+24w
					; _malloc+1Ar ...
word_BFD_7A00	dw 0			; DATA XREF: __VideoInt+2w
					; __VideoInt+8r
dword_BFD_7A02	dd 0			; DATA XREF: __fperr+6r __fperr+17r ...
		align 10h
dseg		ends

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Uninitialized
seg071		segment	byte stack 'STACK' use16
		assume cs:seg071
		assume es:nothing, ss:nothing, ds:dseg,	fs:nothing, gs:nothing
		db 80h dup(0)
seg071		ends


		end start
